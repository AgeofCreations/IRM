{"version":3,"sources":["consts.js","containers/combinator/combinator-infields.js","store/actions/combinator.js","store/actionTypes.js","store/actions/notifications.js","store/actions/auth.js","containers/auth/Login.js","containers/auth/signup.js","components/mainpage.js","containers/auth/email_verification_sent.js","containers/auth/user_profile.js","containers/crowler/CategoryListView.js","containers/crowler/FilterpageListView.js","containers/crowler/CategoryRetrieveView.js","containers/crowler/FilterpageRetrieveView.js","containers/crowler/FilterpageChangesList.js","containers/crowler/CategoryChangesList.js","containers/crowler/FilterpageChangesView.js","containers/crowler/CategoryChangesView.js","containers/crowler/notifications/NotifyPopup.js","containers/crowler/notifications/NotificationsRead.js","containers/crowler/notifications/Subscriptions.js","components/auth/groups_management.js","components/auth/user_verification.js","components/auth/categoies_list.js","components/auth/metrics_categoies_list.js","containers/auth/management.js","containers/feedback.js","containers/metrics/metrics_main.js","containers/metrics/metrics_cats.js","containers/metrics/metrics_retrieve.js","routes.js","containers/layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/combinator.js","store/reducers/notifications.js","store/reducers/index.js","index.js"],"names":["backendURL","TextArea","Input","antIcon","react_default","a","createElement","icon","type","style","fontSize","spin","CombinatorForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","state","allLength","warning","onSubmit","col1","value1","col2","value2","col3","value3","col4","value4","col5","value5","col6","value6","col7","value7","col8","value8","copyText","document","getElementById","select","execCommand","handleCheckboxChange","target","value","checked","name","setState","defineProperty","clearFields","resetFields","onClear","saveTXT","FileSaver","require","blob","Blob","combinator_result","saveAs","saveCSV","length1","length2","length3","length4","length5","length6","length7","length8","target8","loading","bind","assertThisInitialized","onChangeColumn","Modal","info","title","content","onOk","len","endsWith","slice","split","length","allLengthVal","_this2","getFieldDecorator","user_loading","indicator","token","className","es_button","position","right","top","onClick","es_form","es_checkbox","onChange","marginLeft","marginTop","placeholder","id","allowclear","height","width","resize","ref","el","todoTextElem","htmlType","combinator_loading","size","popover","shape","disabled","autosize","minRows","maxRows","React","Component","WrappedRCombinatorForm","Form","create","connect","user_error","authReducer","user_groups","combinatorReducer","dispatch","user_name","axios","post","concat","first_column","second_column","third_column","fourth_column","fifth_column","sixth_column","seventh_column","eighth_column","account_owner","then","res","result4","data","result","toString","replace","combinatorSuccess","catch","actions","localStorage","getItem","defaults","headers","Content-Type","Authorization","notificationsGetStart","notificationsGetAction","user_id","get","notifications_count","count","notificationsGetSuccess","authSuccess","success","authFail","error","authLogout","removeItem","checkAuthTimeout","expirationTime","setTimeout","userProfileGetAction","username","email","groups","pk","user_email","userProfileGetSuccess","notificationsActions","userProfileGetFail","authLogin","password","key","expirationDate","Date","getTime","setItem","response","NormalLoginForm","validateFields","onAuth","errorMessage","es_alert","marginBottom","message","non_field_errors","history","push","Item","rules","required","input","prefix","color","marginRight","react_router_dom","to","WrappedNormalLoginForm","RegistrationForm","confirmDirty","autoCompleteResult","confirm","signupSucessRedirect","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","hasFeedback","min","validator","Password","onBlur","WrappedRegistrationForm","password1","password2","Mainpage","Step","Steps","VerificationSent","logout","steps","status","description","pStyle","lineHeight","display","DescriptionItem","_ref","UserProfile","visible","showDrawer","onClose","getMetricsToken","handleNewToken","objectSpread","es_row","es_col","span","user_profile_DescriptionItem","divider","WrappedUserProfile","menu","categoryListView","pagination","searchCatID","searchCatURL","filters","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","padding","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","undefined","handleTableChange","searchText","sorter","pager","current","fetch","page","category_url","category_is_active","category_id","params","arguments","total","pageSize","results","columns","render","text","record","href","rel","filterMultiple","prevProps","back_top","breadcrumb","overlay","table","dataSource","FilterpageListView","searchPFSID","searchPFSURL","filterpage_url","filterpage_is_active","filterpage_id","CategoryRetrieveView","match","categoryID","_this3","descriptions","category_name","bordered","layout","label","category_lvl","category_path","category_full_name","category_title","category_description","category_seo_text","category_data_updated","category_canonical_url","category_parent_id","FilterpageRetrieveView","filterpageID","filterpage_name","filterpage_disabling_reason","filterpage_is_top","filterpage_full_name","filterpage_title","filterpage_description","filterpage_text","filterpage_data_updated","filterpage_canonical_url","filterpage_created_at","FilterpageChangesList","changed_fields","CategoryChangesList","FilterpageChangesView","filterpage_data_changed","old_filterpage_name","new_filterpage_name","old_filterpage_is_active","new_filterpage_is_active","old_filterpage_disabling_reason","new_filterpage_url","new_filterpage_disabling_reason","old_filterpage_is_top","new_filterpage_is_top","old_filterpage_url","old_filterpage_full_name","new_filterpage_full_name","old_filterpage_title","new_filterpage_title","old_filterpage_description","new_filterpage_description","old_filterpage_text","new_filterpage_text","old_filterpage_canonical_url","new_filterpage_canonical_url","old_filterpage_created_at","new_filterpage_created_at","CategoryChangesView","category_data_changed","old_category_name","new_category_name","old_category_is_active","new_category_is_active","old_category_url","new_category_url","old_category_full_name","new_category_full_name","old_category_title","new_category_title","old_category_description","new_category_description","old_category_seo_text","new_category_seo_text","old_category_text","old_category_canonical_url","new_category_canonical_url","old_category_parent_id","new_category_parent_id","NotifyPopup","action_id","row","read","cursor","delete","notification_id","action_is","action_subjects","rowKey","notificationsReducer","NotificationsRead","NotificationSubsciptions","selectedItems","options","handleChange","updateSubscriptions","responsibilities","filteredOptions","filter","o","includes","successMessage","es_select","mode","map","item","Option","GroupsManagement","groupsRadio","groupsSelected","groupsOptions","handleGroupsChange","groupsRadioChanger","handleGroupsUpdate","updating_user","groupsUsername","action","groups_to_update","updatingInfo","es_radio","Group","WrappedGroupsManagement","UserVerification","verificationRadio","handleVerification","verificating_user","verificationRadioChanger","verificationInfo","WrappedUserVerification","CategoriesUpdate","categoriesRadio","category","CategoriesUpdateForm","MetricsCategoriesUpdate","MetricsCategoriesUpdateForm","TabPane","Tabs","Management","managementInfo","tabs","defaultActiveKey","tab","user_verification","groups_management","categoies_list","metrics_categoies_list","WrappedNormalManagement","Feedback","EditableContext","createContext","MonthPicker","DatePicker","defaultCurrent","EditableFormRow","index","objectWithoutProperties","Provider","EditableCell","editing","toggleEdit","focus","save","_this$props","handleSave","currentTarget","renderCell","_this$props2","children","margin","initialValue","paddingRight","_this$props3","editable","restProps","Consumer","MetricsTest","fetchcats","month","categories","monthly_target","site_target","monthly_factual","site_factual","multiplier","first_week","weeks_data","first_day","last_day","second_week","third_week","fourth_week","addcats","onChangeMonth","date","dateString","handleNewTarget","newData","toConsumableArray","findIndex","updating_category","new_plan","category_plan","splice","new_site_target","new_monthly_factual","third_weeek","fifth_week","components","body","cell","col","onCell","gutter","statistic","Math","round","input_number","formatter","rowClassName","WrappedMetricsTest","Select","MetricsThirdLeveCategories","head_category","head_category_list","handleCategoriesUpdate","handleHeadCategoryChange","handeRadioChanger","forcedates","forcedata","MetricsThirdLeveCategoriesForm","MetricsRetrieve","categoryDataID","third_level","BaseRouter","react_router","exact","path","component","Combinator","Login","Signup","CategoryListView","MetricsMain","SubMenu","Menu","Header","Layout","Content","Footer","Sider","CustomLayout","collapsed","closeDrawer","onCollapse","minHeight","collapsible","theme","defaultSelectedKeys","defaultOpenKeys","isAuthenticated","popconfirm","onConfirm","okText","cancelText","badge","notificationsCount","dot","textAlign","App","onTryAutoSignup","onGetNotificationsCount","containers_layout","routes","notificationActions","onNotificationsLogout","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","confirmation_await","confirmation_success","confirmation_error","authStart","emailConfirmation","emailConfirmationSuccess","emailConfirmationError","userProfileGet","combinator_error","combinatorStart","combinatorFail","combinatorClear","notificationsGetFail","notificationsLogout","combineReducers","URL","process","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","es","src_App_0","ReactDOM"],"mappings":"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","file":"static/js/main.4fcd1ee1.chunk.js","sourcesContent":["const backendURL = 'http://10.30.37.65:3000'\n\nexport default backendURL;\n","import { Input, Button, Popover, Icon, Spin, Form, Checkbox, Modal} from 'antd';\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/combinator'\n// import CombinatorSettings from '../../components/combinator/combinator-settings'\n\nconst { TextArea } = Input;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass CombinatorForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          col1: true,\n          col2: true,\n          col3: true,\n          col4: true,\n          col5: true,\n          col6: true,\n          col7: true,\n          col8: true,\n          allLength: 0,\n          length1: 1,\n          length2: 1,\n          length3: 1,\n          length4: 1,\n          length5: 1,\n          length6: 1,\n          length7: 1,\n          length8: 1,\n          target8: '1111',\n          loading: false,\n\n        }\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.onChangeColumn = this.onChangeColumn.bind(this);\n      }\n\n      info() {\n        Modal.info({\n          title: 'Пересекатор фраз',\n          content: (<div>\n            <p>Это - пересекатор фраз. Аналог всех прочих таких же.</p>\n            <p>Допускаю, что вы уже знаете как работать с подобными приложениями</p>\n            <p>Чекбокс возле надписи \"Стоблец N\" включает или выключает столбец. Позволяет пропустить конструкции при формировании фраз, не удаляя их.</p>\n            <p>Кнопка \"Скопировать результат\" копирует результат в ваш буфер обмена</p>\n            <p>Кнопка \"Скомбинировать N фраз\" запускает процесс формирования фраз.</p>\n            <p>ВАЖНО! Более 100 000 фраз не могут быть представлены в веб-интерфейсе. В случае большого количества фраз, результат можно скачать с помощью соответствующих кнопок над полем результата в форматах .TXT (синяя кнопка) и .CSV (белая кнопка)</p>\n            <p>Очистить все поля (включая колонки и результат) можно, нажав красную кнопку \"Очистить поля\", которая находится в нижнем правом углу страницы под полем результата</p>\n            </div>),\n          onOk() {},\n        });\n      }\n\n    warning() {\n        Modal.warning({\n          title: 'Такое количество результатов не может быть отображено.',\n          content: 'Мы не можем отобразить более 100000 результатов прямо на странице. Вместо этого воспользуйтесь фунцией скачивания в одном из форматов.',\n        });\n      }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n        if (this.state.allLength > 100000) {\n                this.warning()\n        }\n          if (!err) {\n              this.props.onSubmit(\n                  this.state.col1 ? values.value1 : ' ',\n                  this.state.col2 ? values.value2 : ' ',\n                  this.state.col3 ? values.value3 : ' ',\n                  this.state.col4 ? values.value4 : ' ',\n                  this.state.col5 ? values.value5 : ' ',\n                  this.state.col6 ? values.value6 : ' ',\n                  this.state.col7 ? values.value7 : ' ',\n                  this.state.col8 ? values.value8 : ' ',\n              );\n          }\n        }\n        );\n      };\n    \n    copyText = e => {\n        var copyText = document.getElementById(\"result\");\n        copyText.select();\n        document.execCommand(\"copy\");\n      }\n    \n    handleCheckboxChange = e => {\n        const target = e.target\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name\n          this.setState({\n            [name]: value\n          });\n        }\n\n    onChangeColumn(e) {\n        const target = e.target;\n\n        var len = target.value.endsWith(\"\\n\") ? target.value.slice(0, -1) : target.value\n\n        var length1 = target.name === 'target1' ? len.split('\\n').length : this.state.length1\n        var length2 = target.name === 'target2' ? len.split('\\n').length : this.state.length2\n        var length3 = target.name === 'target3' ? len.split('\\n').length : this.state.length3\n        var length4 = target.name === 'target4' ? len.split('\\n').length : this.state.length4\n        var length5 = target.name === 'target5' ? len.split('\\n').length : this.state.length5\n        var length6 = target.name === 'target6' ? len.split('\\n').length : this.state.length6\n        var length7 = target.name === 'target7' ? len.split('\\n').length : this.state.length7\n        var length8 = target.name === 'target8' ? len.split('\\n').length : this.state.length8\n\n        const allLengthVal = (\n            length1 * length2 * length3 * length4 * length5 *\n            length6 * length7 * length8\n            )\n                    this.setState({\n                        allLength: allLengthVal,\n                        length1: length1,\n                        length2: length2,\n                        length3: length3,\n                        length4: length4,\n                        length5: length5,\n                        length6: length6,\n                        length7: length7,\n                        length8: length8\n            });\n          }\n\n    clearFields = () => {\n        this.props.form.resetFields();\n        this.setState({allLength: 0})\n        this.props.onClear()\n    }\n\n    saveTXT = () => {\n        var FileSaver = require('file-saver');\n        var blob = new Blob([this.props.combinator_result], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, \"CombinatorResults.txt\");\n    }\n    saveCSV = () => {\n        var FileSaver = require('file-saver');\n        var blob = new Blob([this.props.combinator_result], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, \"CombinatorResults.csv\");\n    }\n\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div>\n                {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} />\n            : this.props.token ?\n                <div className=\"container\" >\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', top: '10%'}} onClick={this.info}></Button>\n                    {/* <CombinatorSettings style={{marginTop: '30px'}} className=\"unselectable\" /> */}\n                    <Form  onSubmit={this.handleSubmit}>\n                        <div>\n                            <Checkbox type=\"checkbox\" name=\"col1\" checked={this.state.col1} onChange={this.handleCheckboxChange} style={{marginLeft: '4%', marginTop: '40px'}}>Столбец 1</Checkbox>\n                            <Checkbox type=\"checkbox\" name=\"col2\" checked={this.state.col2} onChange={this.handleCheckboxChange} style={{marginLeft: '16.3%', marginTop: '40px'}}>Столбец 2</Checkbox>\n                            <Checkbox type=\"checkbox\" name=\"col3\" checked={this.state.col3} onChange={this.handleCheckboxChange} style={{marginLeft: '16.1%', marginTop: '40px'}}>Столбец 3</Checkbox>\n                            <Checkbox type=\"checkbox\" name=\"col4\" checked={this.state.col4} onChange={this.handleCheckboxChange} style={{marginLeft: '16.2%', marginTop: '40px'}}>Столбец 4</Checkbox>\n                        </div>\n                    \n                    {getFieldDecorator('value1')( \n                        <TextArea placeholder=\"Столбец 1\" id=\"combinatorForm\" name=\"target1\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n                                \n                                       \n                    {getFieldDecorator('value2')(\n                        <TextArea placeholder=\"Столбец 2\" id=\"column\" name=\"target2\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value3')(\n                        <TextArea placeholder=\"Столбец 3\" name=\"target3\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value4')(\n                        <TextArea placeholder=\"Столбец 4\" name=\"target4\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n                    <div><Checkbox type=\"checkbox\" name=\"col5\" checked={this.state.col5} onChange={this.handleCheckboxChange} style={{marginLeft: '4%', marginTop: '10px'}}>Столбец 5</Checkbox>\n                        <Checkbox type=\"checkbox\" name=\"col6\" checked={this.state.col6} onChange={this.handleCheckboxChange} style={{marginLeft: '16.3%', marginTop: '10px'}}>Столбец 6</Checkbox>\n                        <Checkbox type=\"checkbox\" name=\"col7\" checked={this.state.col7} onChange={this.handleCheckboxChange} style={{marginLeft: '16.1%', marginTop: '10px'}}>Столбец 7</Checkbox>\n                        <Checkbox type=\"checkbox\" name=\"col8\" checked={this.state.col8} onChange={this.handleCheckboxChange} style={{marginLeft: '16.2%', marginTop: '10px'}}>Столбец 8</Checkbox>\n                        {/* <Button type=\"danger\" name=\"target8\" icon=\"close\" onClick={this.handleColumnClear}></Button> */}\n                        </div>\n                    {getFieldDecorator('value5')(\n                        <TextArea placeholder=\"Столбец 5\" name=\"target5\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value6')(\n                        <TextArea placeholder=\"Столбец 6\" name=\"target6\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n                    {getFieldDecorator('value7')(\n                        <TextArea placeholder=\"Столбец 7\" name=\"target7\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value8',)(\n                        <TextArea ref= {el => this.todoTextElem = el} placeholder=\"Столбец 8\" name=\"target8\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}>{this.state.target8}</TextArea>,\n                        )}\n\n\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginTop: '40px', height: '45px', width: '30%'}} loading={this.props.combinator_loading}>Скомбинировать {this.state.allLength} фраз </Button>\n                        <Button type=\"default\" size=\"large\" onClick={this.copyText} style={{position: 'sticky', marginLeft: '45%', width: '25%'}}>Скопировать результат</Button>\n                        <div style={{marginTop: '10px', marginLeft: '80%'}}>\n                        <Popover content=\"Скачать в .TXT\">\n                            <Button type=\"primary\" onClick={this.saveTXT} shape=\"circle\" icon=\"download\" size={\"default\"} loading={this.props.combinator_loading} />\n                        </Popover>,\n                        <Popover content=\"Скачать в .CSV\"> \n                            <Button type=\"default\" onClick={this.saveCSV} shape=\"circle\" icon=\"download\" size={\"default\"} style={{marginLeft: '50%'}} loading={this.props.combinator_loading} />\n                        </Popover>\n                        </div>\n                        <TextArea placeholder=\"Тут будет результат\" disabled={false} id=\"result\" value={this.state.allLength < 100000 ? this.props.combinator_result : \"Нельзя отобразить более 100000 результатов. Скачайте в файле\"} autosize={{minRows: 2, maxRows: 6}} style={{marginTop: '20px'}}></TextArea>\n                        <Button type=\"danger\" size=\"large\" onClick={this.clearFields} style={{position: 'sticky', marginLeft: '75%', width: '25%', marginTop: '25px'}}>Очистить поля</Button>\n                    </Form>\n\n                </div>\n\n                :\n                // <NotLoggedIn {...this.props}></NotLoggedIn>\n                <div>Кто не залогинен, тот ничего не получет ога.</div>\n                \n                }\n                </div>);\n            }\n        }\n\nconst WrappedRCombinatorForm = Form.create({ name: 'register' })(CombinatorForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        user_error: state.authReducer.user_error,\n        user_groups: state.authReducer.user_groups,\n        token : state.authReducer.token,\n        user_loading: state.authReducer.user_loading,\n        combinator_result: state.combinatorReducer.combinator_result,\n        combinator_loading: state.combinatorReducer.combinator_loading\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmit: (value1, value2, value3, value4, value5, value6, value7, value8, token) => dispatch(actions.combinatorAction(value1, value2, value3, value4, value5, value6, value7, value8, token )), \n        onClear: () => dispatch(actions.combinatorClear())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WrappedRCombinatorForm);\n","/* eslint-disable no-self-assign */\nimport axios from 'axios';\nimport * as actionTypes from '../actionTypes';\n//import { checkPropTypes } from 'prop-types';\nimport backendURL from '../../consts'\n\n\n\n\nexport const combinatorStart = () => {\n    return {\n        type: actionTypes.COMBINATOR_START\n    }\n}\n\nexport const combinatorSuccess = (result) => {\n    return {\n        type: actionTypes.COMBINATOR_SUCCESS,\n        result: result\n    }\n}\n\nexport const combinatorFail = (combinator_error) => {\n    return {\n        type: actionTypes.COMBINATOR_FAIL,\n        user_error: combinator_error\n    }\n}\n\nexport const combinatorClear = () => {\n    return {\n        type: actionTypes.COMBINATOR_CLEAR\n    }\n}\n\nexport const combinatorAction = (value1, value2, value3, value4, value5, value6, value7, value8, user_name, token) => {\n    value1 ? value1 = value1 : value1 = \"\"\n    value2 ? value2 = value2 : value2 = \"\"\n    value3 ? value3 = value3 : value3 = \"\"\n    value4 ? value4 = value4 : value4 = \"\"\n    value5 ? value5 = value5 : value5 = \"\"\n    value6 ? value6 = value6 : value6 = \"\"\n    value7 ? value7 = value7 : value7 = \"\"\n    value8 ? value8 = value8 : value8 = \"\"\n    return dispatch => {\n        dispatch(combinatorStart())\n        axios.post(`${backendURL}/combinator/`, {\n            first_column: value1,\n            second_column: value2,\n            third_column: value3,\n            fourth_column: value4,\n            fifth_column: value5,\n            sixth_column: value6,\n            seventh_column: value7,\n            eighth_column: value8,\n            account_owner: user_name\n        })\n        .then(res => {\n            const wrapedResult = res.data.result.toString().replace(/'/g, '').replace(/,/g, \"\\n\");\n            \n            var result = wrapedResult.replace(/ {2}/g, ' ')// Я не имею ни майлешего представления почему, но обернуть эту строку в цикл мне не помогло.\n            var result2 = result.replace(/ {2}/g, ' ')\n            var result3 = result2.replace(/ {2}/g, ' ')\n            var result4 = result3.replace(/ {2}/g, ' ')\n            dispatch(combinatorSuccess(result4))\n            \n        })\n        .catch(user_error => {\n            if (user_error.res) {\n                dispatch(combinatorFail(user_error.res.data))\n            }\n            })\n        }\n    }","// ДЛЯ АУТЕНТИФИКАЦИИ\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\n//ДЛЯ ПОДВТЕРЖДЕНИЯ МЫЛА\nexport const EMAIL_CONFIRMATION_REQUEST = 'EMAIL_CONFIRMATION_REQUEST'\nexport const EMAIL_CONFIRMATION_REQUEST_SUCCESS =\n  'EMAIL_CONFIRMATION_REQUEST_SUCCESS'\nexport const EMAIL_CONFIRMATION_REQUEST_ERROR =\n  'EMAIL_CONFIRMATION_REQUEST_ERROR'\n\n//ДЛЯ ДОСТУПА К ЮЗЕР МОДЕЛИ\nexport const USER_PROFILE_GET = 'USER_PROFILE_GET'\nexport const USER_PROFILE_GET_SUCCESS = 'USER_PROFILE_GET_SUCCESS'\nexport const USER_PROFILE_GET_FAIL = 'USER_PROFILE_GET_FAIL'\n\n//ДЛЯ КОМБИНАТОРА\nexport const COMBINATOR_START = 'COMBINATOR_START'\nexport const COMBINATOR_SUCCESS = 'COMBINATOR_SUCCESS'\nexport const COMBINATOR_FAIL = 'COMBINATOR_FAIL'\nexport const COMBINATOR_CLEAR = 'COMBINATOR_CLEAR'\n\n//ДЛЯ УВЕДОМЛЕНИЙ\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\nexport const NOTIFICATIONS_GET_SUCCESS = 'NOTIFICATIONS_GET_SUCCESS'\nexport const NOTIFICATIONS_GET_FAIL = 'NOTIFICATIONS_GET_FAIL'\nexport const NOTIFICATIONS_LOGOUT = 'NOTIFICATIONS_LOGOUT'\n","import * as actionTypes from '../actionTypes';\nimport axios from 'axios'\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nexport const notificationsGetStart = () => {\n    return{\n        type: actionTypes.NOTIFICATIONS_GET\n    }\n}\n\nexport const notificationsGetSuccess = (notifications_count) => {\n    return {\n        type: actionTypes.NOTIFICATIONS_GET_SUCCESS,\n        count: notifications_count\n    }\n}\nexport const notificationsGetFail = () => {\n\n    return {\n        type: actionTypes.NOTIFICATIONS_GET_FAIL\n    }\n}\nexport const notificationsLogout = () => {\n\n    return {\n        type: actionTypes.NOTIFICATIONS_LOGOUT,        \n    }\n}\nexport const notificationsGetAction = (user_id) => {\n    return dispatch => {\n        dispatch(notificationsGetStart)\n        axios.get(`${backendURL}/crowler/notify/?not_read=${user_id}`)\n             .then (res => {\n                 const notifications_count = res.data.count;\n                 dispatch(notificationsGetSuccess(notifications_count));\n             })\n    }\n}","import axios from 'axios';\nimport * as actionTypes from '../actionTypes';\nimport * as notificationsActions from './notifications';\n\nimport backendURL from '../../consts'\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        success: true\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n        success: false\n    }\n}\n\nexport const authLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\nexport const emailConfirmationRequest = () => {\n    return {\n      type: actionTypes.EMAIL_CONFIRMATION_REQUEST\n    }\n  }\nexport const emailConfirmationRequestSuccess= key => {\n    return {\n      type: actionTypes.EMAIL_CONFIRMATION_REQUEST_SUCCESS\n    }\n  }\n  \nexport const emailConfirmationRequestError = confirmation_error => {\n    return {\n      type: actionTypes.EMAIL_CONFIRMATION_REQUEST_ERROR,\n      confirmation_error: confirmation_error\n    }\n  }\n\nexport const userProfileGet = () => {\n    return {\n        type: actionTypes.USER_PROFILE_GET,\n    }\n}\n\nexport const userProfileGetSuccess = (username, email, groups, id) => {\n    return {\n        type: actionTypes.USER_PROFILE_GET_SUCCESS,\n        user_name: username,\n        user_email: email,\n        user_groups: groups,\n        user_id: id\n    }\n}\nexport const userProfileGetFail = (user_error) => {\n    return {\n        type: actionTypes.USER_PROFILE_GET_FAIL,\n        user_error: user_error\n    }\n}\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime * 1000)\n    }\n}\nexport function emailConfirmationAction(key) {\n    return dispatch => {\n      dispatch(emailConfirmationRequest())\n      axios\n        .post(`${backendURL}/account-confirm-email/`, key )\n        .then(response => {\n          dispatch(emailConfirmationRequestSuccess())\n        })\n        .catch(confirmation_error => {\n            if(confirmation_error.response) {\n                dispatch(emailConfirmationRequestError(confirmation_error.response.data))\n            }\n        })\n    }\n  }\n\nexport const userProfileGetAction = (token) => {\n    return dispatch => {\n        dispatch(userProfileGet())\n        if (token != null) {\n        axios.defaults.headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + token \n        }\n    }\n        axios.get(`${backendURL}/rest-auth/user/`)\n        .then(res => {\n            const username = res.data.username;\n            const email = res.data.email;\n            const groups = res.data.groups;\n            const id = res.data.pk\n            dispatch(userProfileGetSuccess(username, email, groups, id))\n            dispatch(notificationsActions.notificationsGetAction(id))\n        })\n        .catch(user_error => {\n            if (user_error.res) {\n                dispatch(userProfileGetFail(user_error.res.data))\n            }\n            })\n        }\n    }\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${backendURL}/rest-auth/login/`, {\n            username: username,\n            password: password\n        })\n\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 36000 * 10000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(userProfileGetAction(token));\n            dispatch(checkAuthTimeout(3600));\n            \n        })\n        .catch(error => {\n            if(error.response) {\n                dispatch(authFail(error.response.data))\n            } \n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${backendURL}/rest-auth/registration/`, {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 36000 * 10000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            \n        })\n        .catch(error => {\n            if(error.response) {\n                dispatch(authFail(error.response.data))\n            }\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(authLogout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(authLogout());\n                dispatch(notificationsActions.notificationsLogout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(userProfileGetAction(token));\n            }\n        }\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Icon, Input, Button, Spin, Alert } from 'antd';\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.username, values.password)\n      }\n    });\n    \n  }\n\n  render() {\n\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.props.error.non_field_errors} type=\"error\" />\n        );\n    }\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            { \n\n                this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                : this.props.token !== null ?    \n                this.props.history.push('/profile/')\n                :                          \n\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите имя пользователя!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Имя пользователя\"\n                        />,\n                    )}\n                    </Form.Item>\n                    <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Введите пароль!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Пароль\"\n                        />,\n                    )}\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>Войти</Button>\n                        или\n                        <NavLink style={{marginRight: '10px'}} to='/signup/'>  Зарегистрироваться</NavLink>\n\n                    </Form.Item>\n\n                </Form>\n\n                \n            }\n            </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.authReducer.loading,\n        token: state.authReducer.token,\n        error: state.authReducer.error,\n        success: state.authReducer.success\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/auth';\n\nimport { Form, Input, Icon, Button, Alert } from 'antd';\nimport { NavLink } from 'react-router-dom'\n\n    \n  \n  class RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n            this.props.onAuth(\n                values.username,\n                values.email,\n                values.password,\n                values.confirm\n            );\n        }\n        this.signupSucessRedirect()\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Пароли не совпадают!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      let errorMessage = null;\n      if (this.props.error) {\n        if (this.props.error.username) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.props.error.username} type=\"error\" />\n        );\n      } else if (this.props.error.email) {\n        errorMessage =(\n          <Alert style={{marginBottom: '25px'}} message={this.props.error.email} type=\"error\" />\n        );\n      } else if (this.props.error.password) {\n        errorMessage =(\n          <Alert style={{marginBottom: '25px'}} message={this.props.error.password} type=\"error\" />\n        );\n      }\n    }\n  \n      return (\n        <div>\n          {errorMessage}\n          {\n            this.props.success === true ?\n            this.props.history.push('/signup/verification_sent/')\n            :\n          \n          \n        <Form onSubmit={this.handleSubmit}>\n          \n            <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Введите имя пользователя!' }],\n            })(\n                <Input\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Имя пользователя\"\n                />,\n            )}\n        </Form.Item>\n\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'Введённый адрес не существует',\n                },\n                {\n                  required: true,\n                  message: 'Введите адрес электронной почты!',\n                },\n              ],\n            })(<Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Email\"/>)}\n          </Form.Item>\n\n          <Form.Item hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Введите пароль!',\n                }, \n                { min: 8, message: 'Пароль должен содержать минимум 8 символов!'},\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Пароль\" />)}\n          </Form.Item>\n\n          <Form.Item hasFeedback>\n            {getFieldDecorator('confirm', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Подтвердите пароль!',\n                },\n                {\n                  validator: this.compareToFirstPassword,\n                },\n              ],\n            })(<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Пароль\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n\n          <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>Зарегистрироваться</Button>\n              или\n              <NavLink style={{marginRight: '10px'}} to='/login/'>  войдите под существующим аккаунтом!</NavLink>\n\n          </Form.Item>\n\n        </Form>\n          }\n        </div>\n      );\n    }\n  }\n  \n\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.authReducer.loading,\n        error: state.authReducer.error,\n        success: state.authReducer.success\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","import React from 'react';\nimport { Button } from 'antd';\n\nclass Mainpage extends React.Component {\n    render() {\n        return (\n            <div><h1>Hello Human!</h1>\n            <p>Это сервис, который включает в себя некоторый функционал, полезный для SEO и не только.</p>\n            <p>Кнопка \"Главная\" в навигационном баре слева - ведёт на эту страницу.</p>\n            <p>Подменю \"Пользователь\" содержит информацию о пользователе и токен для Яндекс.Метрики</p>\n            <p>Особенно стоит остановиться на вкладке \"Управление\". Это набор инструментов для администраторов и руководителей.</p>\n\n            <h2>Приложения</h2>\n            <p>Подменю \"Приложения\" на навигационном баре слева состоит из пересекатора, с которого начался этот сервис и отчётов метрики.</p>\n            <p>Пересекатор - позволяет пересекать фразы. До 5 000 000 фраз в результате. При количестве фраз в результате более 100 000, его можно только скачать в форматах .TXT или .CSV </p>\n            <p>Метрика позволяет получить данные из Яндекс.Метрика по сайту в целом, и по избранным категориям.</p>\n            <h2>Краулер</h2>\n            <p>Самое полезное - отслеживание изменений на сайте. Это подменю \"Краулер\" слева.</p>\n            <p>Категории - список всех категорий на сайте.</p>\n            <p>ПФС - список всех подфильтровых страниц на сайте. Осторожно, ID ПФС на сайте не соответствуют ID ПФС в 1С Торговля</p>\n            <p>Изменения содержат список всех зарегистрированных краулером изменений на сайте.</p>\n            <h2>Уведомления</h2>\n            <p>Уведомления - самая важная часть краулера, поэтому вынесена отдельно. Она находится в верхнем навигационном баре</p>\n            <p>Когда краулер регистрирует изменения на сайте, он создаёт уведомление и отсылает его всем пользователям, которые подписаны на категорию, в которой произошло изменение</p>\n            <p>Если у вас есть активные(непрочитанные) уведомления, кнопка отмечается красным маркером</p>\n            <h2>Дополнительно</h2>\n            <p>На многих потенциально непонятных страницах есть краткие описания функционала и навигации. Они отмечены символом: <Button icon=\"question-circle\"></Button> и находятся в правом верхнем углу.</p>\n            <p>Рекомендовано пользоваться сервисом в полноэкранном режиме.</p>\n            \n            </div>\n        )\n    }\n\n}\n\nexport default Mainpage;","import React from 'react';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux'\nimport { Steps, Icon } from 'antd';\n\nconst { Step } = Steps;\nclass VerificationSent extends React.Component {\n\n\n    render() {\n        return (\n            <div>\n            {this.props.logout}\n\n            <Steps style={{width: '70%', marginLeft: '10%'}}>\n                <Step status=\"finish\" title=\"Регистрация\" description=\"\n                Вы успешно предоставили данные и прошли регистрацию.\" icon={<Icon type=\"user\" />} />\n                <Step status=\"progress\" title=\"Активация аккаунта\" description=\"\n                Теперь пользователь из группы admin должен активировать ваш аккаунт в своём личном кабинете\" icon={<Icon type=\"loading\" />} />\n                <Step status=\"wait\" title=\"Успех!\" description=\"\n                После активации, вы станете полноправным пользователем и сможете осуществить вход.\" icon={<Icon type=\"smile\" />} />\n            </Steps>\n            </div>\n            \n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        token: state.authReducer.token,\n        success: state.authReducer.success\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)), \n        logout: () => dispatch(actions.authLogout()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationSent);","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { connect } from 'react-redux'\nimport { Divider, Col, Row, Form, Input } from 'antd';\nimport axios from 'axios'\nimport backendURL from '../../consts'\n\nconst pStyle = {\n  fontSize: 16,\n  color: 'rgba(0,0,0,0.85)',\n  lineHeight: '24px',\n  display: 'block',\n  marginBottom: 16,\n};\n\nconst DescriptionItem = ({ title, content }) => (\n  <div\n    style={{\n      fontSize: 14,\n      lineHeight: '22px',\n      marginBottom: 7,\n      color: 'rgba(0,0,0,0.65)',\n    }}\n  >\n    <p\n      style={{\n        marginRight: 8,\n        display: 'inline-block',\n        color: 'rgba(0,0,0,0.85)',\n      }}\n    >\n      {title}:\n    </p>\n    {content}\n  </div>\n);\n\n\n\nclass UserProfile extends React.Component {\n    state = {\n       visible: false,\n       token: null\n      };\n\n    componentDidMount() {\n      this.getMetricsToken()\n    }\n\n    showDrawer = () => {\n      this.setState({\n        visible: true,\n      });\n    };\n  \n    onClose = () => {\n      this.setState({\n        visible: false,\n      });\n    };\n\n    getMetricsToken = () => {\n      axios.get(`${backendURL}/metrics/token/`)\n           .then(res => {\n             this.setState({\n               token: res.data\n             })\n           })\n    }\n    handleNewToken = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          axios.post(`${backendURL}/metrics/token/`, {\n            token: values.token\n          })  \n          this.getMetricsToken()\n        }\n      });\n    };\n\n    render() {\n    const { getFieldDecorator } = this.props.form;\n\n        return(\n            <div>\n                {\n                this.props.token ?\n                <div>\n                                 <p style={{ ...pStyle, marginBottom: 24 }}>Профиль пользователя</p>\n                  <p style={pStyle}>Личные данные</p>\n                  <Row>\n                    <Col span={12}>\n                      <DescriptionItem title=\"Имя\" content={this.props.user_name} />{' '}\n                    </Col>\n           \n                  </Row>\n                  <Row>\n                    <Col span={12}>\n                      <DescriptionItem\n                        title=\"Статус\"\n                        content=\"Активен\"\n                      />\n                    </Col>\n                    <Col span={12}>\n                      <DescriptionItem\n                        title=\"Токен метрики\"\n                        content={this.state.token}\n                      />\n                      {\n                        this.state.token == null? \n                        <Form onSubmit={this.handleNewToken} className=\"token-form\">\n                          <Form.Item style={{marginTop: '20px'}}>\n                            {getFieldDecorator('token', {\n                                rules: [{ required: true, message: 'Введите новый токен.' }],\n                            })(\n                                <Input\n                                placeholder=\"Новый токен\"\n                                />,\n                            )}\n                          </Form.Item>\n                        </Form>\n                      :\n                      <div></div>\n                      }\n                    </Col>\n                  </Row>\n                  <Divider />\n                  <p style={pStyle}>В компании</p>\n                  <Row>\n\n                    <Col span={12}>\n                      <DescriptionItem title=\"Группа прав в сервисе\" content={this.props.user_groups} />\n                    </Col>\n                  </Row>\n                  <Divider />\n                  <p style={pStyle}>Контакты</p>\n                  <Row>\n                    <Col span={12}>\n                      <DescriptionItem title=\"Email\" content={this.props.user_email} />\n                    </Col>\n                  </Row>\n              </div>\n\n                :\n\n                <div>Для просмотра этой страницы требуется вход.</div>\n                }\n            </div>\n        )\n    }\n}\n\nconst WrappedUserProfile = Form.create({ name: 'normal_profile' })(UserProfile);\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user_error: state.authReducer.user_error,\n        user_groups: state.authReducer.user_groups,\n        token: state.authReducer.token,\n        user_loading: state.authReducer.user_loading,\n        user_name: state.authReducer.user_name,\n        user_email: state.authReducer.user_email\n    }\n}\nexport default connect(mapStateToProps)(WrappedUserProfile);\n","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, BackTop, Menu, Icon, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/filter-pages/'>ПФС</Link>\n    </Menu.Item>\n  </Menu>)\n\n\nclass categoryListView extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchCatID: '',\n      searchCatURL: '',\n      filters: {},\n    };\n  \n    componentDidMount() {\n      this.fetch();\n    }\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n      this.fetch()\n\n      }\n  }\n  \n    //---------------------ПОИСК----------------------\n    getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`${dataIndex} начинается с...`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </div>\n      ),\n      filterIcon: filtered => (\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n      ),\n    });\n\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm(); \n      if (dataIndex === 'category_id') {\n        this.setState({ searchCatID: selectedKeys[0] });\n      } else if (dataIndex === 'category_url'){\n        this.setState({ searchCatURL: selectedKeys[0] });\n      }\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n    };\n\n    handleReset = clearFilters => {\n      clearFilters();\n      this.setState({ searchText: '' });\n    };\n/////////////////////////////////////////ПОИСК/////////////////////////\n\n    handleTableChange = (pagination, filters, sorter) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        category_url: this.state.searchCatURL,\n        category_is_active: filters.category_is_active ? filters.category_is_active.toString() : '',\n        category_id: this.state.searchCatID,\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/category/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n    columns = [\n      {\n        title: 'Название',\n        dataIndex: 'category_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/categories/${record.category_id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'category_id',\n        key: 'id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n          title: 'URL',\n          dataIndex: 'category_url',\n          key: 'category_url',\n          render: text => <a href={`https://sima-land.ru/${text}`} rel=\"noopener noreferrer\" target='_blank' >{text}</a>,\n          ...this.getColumnSearchProps('category_url'),\n          \n\n  \n        },\n        {\n          title: 'Активна',\n          dataIndex: 'category_is_active',\n          key: 'category_is_active',\n          filters: [{ text: 'Да', value: '1' }, { text: 'Нет', value: '0' }],\n          filterMultiple: false\n  \n        },\n    ];\n    render() {\n      return (\n        <div>\n        {\n          token ?\n        <div>\n        <BackTop />\n        <Breadcrumb>\n          <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n          <Breadcrumb.Item>\n            Краулер\n          </Breadcrumb.Item>\n          <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/filter-pages/'>Категории</Link>\n          </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div> \n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\n\nexport default categoryListView;","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, BackTop, Menu, Icon, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/categories/'>Категории</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\nclass FilterpageListView extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchPFSID: '',\n      searchPFSURL: '',\n      filters: {},\n    };\n  \n    componentDidMount() {\n      this.fetch();\n    }\n      //---------------------ПОИСК----------------------\n      getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div style={{ padding: 8 }}>\n            <Input\n              ref={node => {\n                this.searchInput = node;\n              }}\n              placeholder={`${dataIndex} начинается с...`}\n              value={selectedKeys[0]}\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n              icon=\"search\"\n              size=\"small\"\n              style={{ width: 90, marginRight: 8 }}\n            >\n              Search\n            </Button>\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n              Reset\n            </Button>\n          </div>\n        ),\n        filterIcon: filtered => (\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n        ),\n        render: text => (text\n        ),\n      });\n  \n      handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm(); \n        if (dataIndex === 'filterpage_id') {\n          this.setState({ searchPFSID: selectedKeys[0] });\n        } else if (dataIndex === 'filterpage_url'){\n          this.setState({ searchPFSURL: selectedKeys[0] });\n        }\n        var pagination = this.state.pagination\n        var filters = this.state.filters\n        this.handleTableChange(pagination,filters)\n      };\n      \n  \n      handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n      };\n  /////////////////////////////////////////ПОИСК/////////////////////////  \n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        filterpage_url: this.state.searchPFSURL,\n        filterpage_is_active: filters.filterpage_is_active ? filters.filterpage_is_active.toString() : '',\n        filterpage_id: this.state.searchPFSID\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/filterpage/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n  \n    columns = [\n      {\n        title: 'Название',\n        dataIndex: 'filterpage_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/filter-pages/${record.filterpage_id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n      },\n      {\n          title: 'URL',\n          dataIndex: 'filterpage_url',\n          key: 'filterpage_url',\n          render: text => <a href={`https://sima-land.ru/${text}`} rel=\"noopener noreferrer\" target='_blank' >{text}</a>,\n          ...this.getColumnSearchProps('filterpage_url'),\n\n        },\n        {\n          title: 'Активна',\n          dataIndex: 'filterpage_is_active',\n          key: 'filterpage_is_active',\n          filters: [{ text: 'Да', value: '1' }, { text: 'Нет', value: '0' }],\n          filterMultiple: false\n  \n        },\n    ];\n\n    render() {\n      return (\n        <div>\n        {\n            token ?\n            <div>\n        <BackTop />\n        <Breadcrumb>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Краулер\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/filter-pages/'>ПФС</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\n\nexport default FilterpageListView;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass CategoryRetrieveView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.categoryID !== prevProps.match.params.categoryID) {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n        }\n    }\n    componentWillMount() {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        return(\n            <div>\n            {\n            token ?\n            <div>\n                <Descriptions title={this.state.data.category_name} bordered layout='vertical'>\n                    <Descriptions.Item className=\"selectable\" label=\"ID\">{this.state.data.category_id}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Уровень вложенности\">{this.state.data.category_lvl}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Категория активна\">{this.state.data.category_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Путь по ID\">{this.state.data.category_path}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"URL\" span={2}>\n                        {<a href={`https://sima-land.ru/${this.state.data.category_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {this.state.data.category_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Full_name\" span={1}>\n                        {this.state.data.category_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Title\">{this.state.data.category_title}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Description\" span={1}>{this.state.data.category_description}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"SEO текст\" span={3}>{this.state.data.category_seo_text}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Дата обновления\" span ={1}>{this.state.data.category_data_updated}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Canonical URL\" span ={1}>{this.state.data.category_canonical_url}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Родительская категория\" span ={1}>{\n                        this.state.data.category_parent_id !== 0 ? <Link to={`/crowler/categories/${this.state.data.category_parent_id}/`}>\n                        {this.state.data.category_parent_id}\n                        </Link> : 'Не имеет'}\n                    </Descriptions.Item>\n                </Descriptions>\n                </div>\n                :\n                <div>Только для авторизованных пользователей</div>}\n            </div>\n        )\n    }\n}\n\nexport default CategoryRetrieveView;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions, Breadcrumb, Menu, Icon, BackTop } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\nconst menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to='/crowler/categories/'>Категории</Link>   \n      </Menu.Item>\n    </Menu>)\n\n\nclass FilterpageRetrieveView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidMount() {\n        const filterpageID = this.props.match.params.filterpageID; \n        axios.get(`${backendURL}/crowler/filterpage/${filterpageID}`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        return(\n            <div>\n            {\n            token ?\n            <div>\n                 <BackTop />\n                    <Breadcrumb style={{marginBottom: '20px'}}>\n                        <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n                        <Breadcrumb.Item>\n                            Краулер\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item overlay={menu}>\n                            <Link to='/crowler/filter-pages/'>ПФС</Link>\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item>{this.state.data.filterpage_id}</Breadcrumb.Item>\n                    </Breadcrumb>\n                <Descriptions title={this.state.data.filterpage_name} bordered layout='vertical'>\n                    <Descriptions.Item className=\"selectable\" label=\"ID\">{this.state.data.filterpage_id}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"ПФС активна\">{this.state.data.filterpage_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Причина отключения\">{this.state.data.filterpage_disabling_reason}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Выводится под листингом\">\n                    {this.state.data.filterpage_is_top === true ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"URL\" span={2}>\n                        {<a href={`https://sima-land.ru/${this.state.data.filterpage_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {this.state.data.filterpage_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Full_name\" span={1}>\n                        {this.state.data.filterpage_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Title\">{this.state.data.filterpage_title}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Description\" span={1}>{this.state.data.filterpage_description}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"SEO текст\" span={3}>{this.state.data.filterpage_text}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Дата обновления\" span ={1}>{this.state.data.filterpage_data_updated}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Canonical URL\" span ={1}>{this.state.data.filterpage_canonical_url}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Впервые появилась\" span ={1}>\n                        {this.state.data.filterpage_created_at}\n                    </Descriptions.Item>\n                    </Descriptions>\n                </div>\n                :\n                <div>Только для авторизованных пользователей</div>\n                }\n                </div>\n        )\n    }\n}\n\nexport default FilterpageRetrieveView;","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, Menu, Icon, BackTop, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/changes/categories/'>Изменения категорий</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\nclass FilterpageChangesList extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchText: '',\n      filters: {},\n    };\n  \n    componentDidMount() {\n      this.fetch();\n    }\n      //---------------------ПОИСК----------------------\n      getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div style={{ padding: 8 }}>\n            <Input\n              ref={node => {\n                this.searchInput = node;\n              }}\n              placeholder={`Search ${dataIndex}`}\n              value={selectedKeys[0]}\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\n              icon=\"search\"\n              size=\"small\"\n              style={{ width: 90, marginRight: 8 }}\n            >\n              Search\n            </Button>\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n              Reset\n            </Button>\n          </div>\n        ),\n        filterIcon: filtered => (\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n        ),\n        render: text => (text\n        ),\n      });\n  \n      handleSearch = (selectedKeys, confirm) => {\n        confirm(); \n        this.setState({ searchText: selectedKeys[0] });\n        var pagination = this.state.pagination\n        var filters = this.state.filters\n        this.handleTableChange(pagination,filters)\n      };\n  \n      handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n      };\n  /////////////////////////////////////////ПОИСК/////////////////////////\n    handleTableChange = (pagination, filters, sorter) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        changed_fields: filters.changed_fields ? filters.changed_fields.toString() : '',\n        filterpage_id: this.state.searchText\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/changes/filterpage/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n    columns = [\n      {\n        title: 'Название до изменения',\n        dataIndex: 'old_filterpage_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/changes/filter-pages/${record.id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n      },\n      {\n        title: 'Изменённые поля',\n        dataIndex: 'changed_fields',\n        key: 'changed_fields',\n        render: (text) => <span>{\n          text\n          .replace('filterpage_disabling_reason','Причина отключения |')\n          .replace('filterpage_is_active_changed_at','Статус изменен (дата) |')\n          .replace('filterpage_is_active', 'Статус |')\n          .replace('filterpage_url','URL |')\n          .replace('filterpage_title','Title |')\n          .replace('filterpage_description','Description |')\n          .replace('filterpage_full_name','FN  |')\n          .replace('filterpage_text','SEO текст |')\n          .replace('filterpage_name','Название |')\n          .replace('filterpage_canonical_url','Canonical URL |')\n          .replace('filterpage_is_top','Под листингом |')\n        }</span>,\n        filters: [\n          { text: 'ПФС | Статус', value: 'is_active' },\n          { text: 'ПФС | Причина отключения', value: 'filterpage_disabling_reason' },\n          { text: 'ПФС | Статус изменён(дата)', value: 'filterpage_is_active_changed_at' },\n          { text: 'ПФС | URL', value: 'filterpage_url' },\n          { text: 'ПФС | Title', value: 'filterpage_title' },\n          { text: 'ПФС | Description', value: 'filterpage_description' },\n          { text: 'ПФС | FN', value: 'filterpage_full_name' },\n          { text: 'ПФС | SEO текст', value: 'filterpage_text' },\n          { text: 'ПФС | Название', value: 'filterpage_name' },\n          { text: 'ПФС | Canonical URL', value: 'filterpage_canonical_url' },\n          { text: 'ПФС | Под листингом', value: 'filterpage_is_top' },\n\n        ],\n        filterMultiple: false\n  \n      },\n    ];\n    render() {\n      return (\n        <div>\n        {\n            token ?\n            <div>\n        <BackTop />\n        <Breadcrumb style={{marginBottom: '20px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Краулер\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/filter-pages/'>Изменения ПФС</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\n\nexport default FilterpageChangesList;","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, Menu, Icon, BackTop, Input, Button, Spin } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/changes/filter-pages/'>Изменения ПФС</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\nclass CategoryChangesList extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchText: '',\n      filters: {},\n    };\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n      this.fetch()\n\n      }\n  }\n    componentDidMount() {\n      this.fetch();\n    }\n  \n    //---------------------ПОИСК----------------------\n    getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </div>\n      ),\n      filterIcon: filtered => (\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n      ),\n      render: text => (text\n      ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n      confirm(); \n      this.setState({ searchText: selectedKeys[0] });\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n    };\n\n    handleReset = clearFilters => {\n      clearFilters();\n      this.setState({ searchText: '' });\n    };\n/////////////////////////////////////////ПОИСК/////////////////////////\n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        changed_fields: filters.changed_fields ? filters.changed_fields.toString() : '',\n        category_id: this.state.searchText\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/changes/category/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n\n    columns = [\n      {\n        title: 'Название до изменения',\n        dataIndex: 'old_category_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/changes/categories/${record.id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'category_id',\n        key: 'id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n        title: 'Изменённые поля',\n        dataIndex: 'changed_fields',\n        key: 'changed_fields',\n        render: (text) => <span>{\n          text\n          .replace('category_lvl','Уровень |')\n          .replace('category_is_active', 'Статус |')\n          .replace('category_url' ,'URL |')\n          .replace('category_title','Title |')\n          .replace('category_description','Description |')\n          .replace('category_full_name','FN  |')\n          .replace('category_seo_text','SEO текст |')\n          .replace('category_name','Название |')\n          .replace('category_canonical_url','Canonical URL |')\n          .replace('category_path','Путь к категории |')\n        }</span>,\n        filters: [\n          { text: 'Категория | Статус', value: 'is_active' },\n          { text: 'Категория | Уровень', value: 'category_lvl' },\n          { text: 'Категория | URL', value: 'category_url' },\n          { text: 'Категория | Title', value: 'category_title' },\n          { text: 'Категория | Description', value: 'category_description' },\n          { text: 'Категория | FN', value: 'category_full_name' },\n          { text: 'Категория | SEO текст', value: 'category_seo_text' },\n          { text: 'Категория | Название', value: 'category_name' },\n          { text: 'Категория | Canonical URL', value: 'category_canonical_url' },\n          { text: 'Категория | Путь к категории', value: 'category_path' },\n\n        ],\n        filterMultiple: false\n\n  \n      },\n    ];\n  \n    render() {\n      return (\n        <div>\n                {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} /> : token ?\n            <div>\n        <BackTop />\n        <Breadcrumb style={{marginBottom: '20px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Краулер\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/categories/'>Изменения категорий</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default CategoryChangesList;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions, Alert, Breadcrumb, Menu, Icon, BackTop } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\nconst menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to='/crowler/changes/categories/'>Категории</Link>   \n      </Menu.Item>\n      <Menu.Item>\n        <Link to='/crowler/changes/filter-pages/'>ПФС</Link>\n      </Menu.Item>\n    </Menu>)\n\nclass FilterpageChangesView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.categoryID !== prevProps.match.params.categoryID) {\n        const filterpageID = this.props.match.params.filterpageID; \n        axios.get(`${backendURL}/crowler/changes/filterpage/${filterpageID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n        }\n    }\n    componentDidMount() {\n        const filterpageID = this.props.match.params.filterpageID; \n        axios.get(`${backendURL}/crowler/changes/filterpage/${filterpageID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        let response = this.state.data\n        return(\n            <div>\n            {\n            token ?\n            <div>\n                <BackTop />\n                <Breadcrumb style={{marginBottom: '20px'}}>\n                    <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                    Краулер\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item overlay={menu}>\n                    <Link to='/crowler/changes/filter-pages/'>Изменения</Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>{response.filterpage_id}</Breadcrumb.Item>\n                </Breadcrumb>\n                <Descriptions title={response.filterpage_id} bordered layout='vertical'>\n                    <Descriptions.Item className=\"selectable\" label=\"Дата и время проверки\"span={1}>\n                        {response.filterpage_data_changed ? response.filterpage_data_changed.replace('T', ' ') : ''}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Поля изменены\" span ={2}>{response.changed_fields}</Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старое название\"span={1}>\n                        {response.old_filterpage_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новое название\"span={2}>\n                        {response.new_filterpage_name !== response.old_filterpage_name ? \n                        <Alert message={response.new_filterpage_name} type='error'></Alert> : \n                        response.new_filterpage_name}\n                    </Descriptions.Item>\n\n                    \n                    <Descriptions.Item className=\"selectable\" label=\"Старое 'ПФС активна'\" span={1}>{response.old_filterpage_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новое 'ПФС активна'\" span={2}>\n                        {response.new_filterpage_is_active !== response.old_filterpage_is_active ? \n                        <Alert message={response.new_filterpage_is_active === 1 ? 'Да' : 'Нет'} type='error'></Alert> : \n                        response.new_filterpage_is_active === 1 ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n                    \n                    <Descriptions.Item className=\"selectable\" label=\"Старая причина отключения\"span={1}>\n                        {response.old_filterpage_disabling_reason !== undefined ? response.old_filterpage_disabling_reason :\n                        'Отсутствует'}\n                        </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новая причина отключения\"span={2}>\n                        {response.new_filterpage_url !== undefined ?\n                            response.new_filterpage_disabling_reason !== response.old_filterpage_disabling_reason ? \n                            <Alert message={response.new_filterpage_disabling_reason} type='error'></Alert> : \n                            response.new_filterpage_disabling_reason :\n                        'Отсутствует'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старое 'Выводится под листингом'\"span={1}>\n                        {response.old_filterpage_is_top === true ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новое 'Выводится под листингом'\"span={2}>\n                        {response.new_filterpage_is_top !== response.old_filterpage_is_top ? \n                        <Alert message={response.new_filterpage_is_top === true ? 'Да' : 'Нет'} type='error'></Alert> : \n                        response.new_filterpage_is_top === true ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый URL\" span={1}>\n                        {response.old_filterpage_url !== undefined ? \n                        <a href={`https://sima-land.ru/${response.old_filterpage_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {response.old_filterpage_url}\n                        </a>\n                        :\n                        'Отсутствует'}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый URL\" span={2}>\n                        {response.new_filterpage_url !== undefined ?\n                        <a href={`https://sima-land.ru/${response.new_filterpage_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_filterpage_url !== response.old_filterpage_url ? \n                            <Alert message={response.new_filterpage_url} type='error'></Alert> : \n                            response.new_filterpage_url}\n                        </a>\n                        :\n                        'Удалён'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Full_name\" span={1}>\n                        {response.old_filterpage_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Full_name\" span={2}>\n                        {response.new_filterpage_full_name !== response.old_filterpage_full_name ? \n                        <Alert message={response.new_filterpage_full_name} type='error'></Alert> : \n                        response.new_filterpage_full_name}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Title\" span={1}>{response.old_filterpage_title}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Title\" span={2}>\n                        {response.new_filterpage_title !== response.old_filterpage_title ? \n                        <Alert message={response.new_filterpage_title} type='error'></Alert> : \n                        response.new_filterpage_title}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Description\" span={1}>{response.old_filterpage_description}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Description\" span={2}>\n                        {response.new_filterpage_description !== response.old_filterpage_description ? \n                        <Alert message={response.new_filterpage_description} type='error'></Alert> : \n                        response.new_filterpage_description}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый SEO текст\" span={3}>{response.old_filterpage_text}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый SEO текст\" span={3}>\n                        {response.new_filterpage_text !== response.old_filterpage_text ? \n                        <Alert message={response.new_filterpage_text} type='error'></Alert> : \n                        response.new_filterpage_text}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Canonical URL\" span ={1}>\n                        {<a href={`https://sima-land.ru/${response.old_filterpage_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.old_filterpage_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Canonical URL\" span ={2}>\n                        {<a href={`https://sima-land.ru/${response.new_filterpage_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_filterpage_canonical_url !== response.old_filterpage_canonical_url ? \n                            <Alert message={response.new_filterpage_canonical_url} type='error'></Alert> : response.new_filterpage_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старое 'Впервые появилась'\" span ={1}>\n                        {response.old_filterpage_created_at}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новое 'Впервые появилась'\" span ={2}>\n                        {response.new_filterpage_created_at !== response.old_filterpage_created_at ? \n                        <Alert message={response.new_filterpage_created_at} type='error'></Alert> : response.new_filterpage_created_at}\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n            :\n            <div>Только для авторизованных пользователей</div>\n            }\n            </div>\n        )\n    }\n}\n\nexport default FilterpageChangesView;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions, Alert, Breadcrumb, Menu, Icon, BackTop, Spin } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\nconst menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to='/crowler/changes/categories/'>Категории</Link>   \n      </Menu.Item>\n      <Menu.Item>\n        <Link to='/crowler/changes/filter-pages/'>ПФС</Link>\n      </Menu.Item>\n    </Menu>)\n\nclass CategoryChangesView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.categoryID !== prevProps.match.params.categoryID) {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/changes/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n        }\n    }\n    componentDidMount() {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/changes/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        let response = this.state.data\n        return(\n            <div>\n                            {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} /> : token ?\n            <div>\n                <BackTop />\n                <Breadcrumb style={{marginBottom: '20px'}}>\n                    <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        Краулер \n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item overlay={menu}>\n                        <Link to='/crowler/changes/filter-pages/'>Изменения</Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>{response.category_id}</Breadcrumb.Item>\n                </Breadcrumb>\n                <Descriptions title={response.category_id} bordered layout='vertical'>\n                    <Descriptions.Item className=\"selectable\" label=\"Дата и время проверки\"span={1}>\n                        {response.category_data_changed ? response.category_data_changed.replace('T', ' ') : ''}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Поля изменены\" span ={2}>{response.changed_fields}</Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старое название\"span={1}>\n                        {response.old_category_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новое название\"span={2}>\n                        {response.new_category_name !== response.old_category_name ? \n                        <Alert message={response.new_category_name} type='error'></Alert> : \n                        response.new_category_name}\n                    </Descriptions.Item>\n\n                    \n                    <Descriptions.Item className=\"selectable\" label=\"Старое 'Категория активна'\" span={1}>{response.old_category_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новое 'Категория активна'\" span={2}>\n                        {response.new_category_is_active !== response.old_category_is_active ? \n                        <Alert message={response.new_category_is_active === 1 ? 'Да' : 'Нет'} type='error'></Alert> : \n                        response.new_category_is_active === 1 ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый URL\" span={1}>\n                        {response.old_category_url !== undefined ? \n                        <a href={`https://sima-land.ru/${response.old_category_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {response.old_category_url}\n                        </a>\n                        :\n                        'Отсутствует'}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый URL\" span={2}>\n                        {response.new_category_url !== undefined ?\n                        <a href={`https://sima-land.ru/${response.new_category_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_category_url !== response.old_category_url ? \n                            <Alert message={response.new_category_url} type='error'></Alert> : \n                            response.new_category_url}\n                        </a>\n                        :\n                        'Удалён'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Full_name\" span={1}>\n                        {response.old_category_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Full_name\" span={2}>\n                        {response.new_category_full_name !== response.old_category_full_name ? \n                        <Alert message={response.new_category_full_name} type='error'></Alert> : \n                        response.new_category_full_name}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Title\" span={1}>{response.old_category_title}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Title\" span={2}>\n                        {response.new_category_title !== response.old_category_title ? \n                        <Alert message={response.new_category_title} type='error'></Alert> : \n                        response.new_category_title}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Description\" span={1}>{response.old_category_description}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Description\" span={2}>\n                        {response.new_category_description !== response.old_category_description ? \n                        <Alert message={response.new_category_description} type='error'></Alert> : \n                        response.new_category_description}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый SEO текст\" span={3}>{response.old_category_seo_text}</Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый SEO текст\" span={3}>\n                        {response.new_category_seo_text !== response.old_category_text ? \n                        <Alert message={response.new_category_seo_text} type='error'></Alert> : \n                        response.new_category_seo_text}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старый Canonical URL\" span ={1}>\n                        {<a href={`https://sima-land.ru/${response.old_category_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.old_category_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новый Canonical URL\" span ={2}>\n                        {<a href={`https://sima-land.ru/${response.new_category_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_category_canonical_url !== response.old_category_canonical_url ? \n                            <Alert message={response.new_category_canonical_url} type='error'></Alert> : response.new_category_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item className=\"selectable\" label=\"Старая родительская категория\" span ={1}>\n                    {response.old_category_parent_id !== 0 ? <Link to={`/crowler/categories/${response.old_category_parent_id}/`}>\n                        {response.old_category_parent_id}\n                        </Link> : 'Не имеет'}\n                    </Descriptions.Item>\n                    <Descriptions.Item className=\"selectable\" label=\"Новая родительская категория\" span ={2}>\n                        {response.new_category_parent_id !== response.old_category_parent_id ? \n                        <Alert message={response.new_category_parent_id !== 0 ? <Link to={`/crowler/categories/${response.new_category_parent_id}/`}>\n                        {response.new_category_parent_id}\n                        </Link> : 'Не имеет'} type='error'></Alert> : response.new_category_parent_id}\n                    </Descriptions.Item>\n                </Descriptions>\n                </div> :\n                            <div>Только для авторизованных пользователей</div> }\n            </div>\n        )\n    }\n}\n\nexport default CategoryChangesView;","import React from 'react'\nimport { BackTop, Menu, Table, Breadcrumb, Icon, Divider, Button, message, Modal, Input } from 'antd';\nimport axios from 'axios'\nimport { Link }  from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport backendURL from '../../../consts'\n\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token \n  }\n}\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/notifications/is-read/'>Прочитанные</Link>\n    </Menu.Item>\n  </Menu>)\n\n\n\n\nclass NotifyPopup extends React.Component {\n    state = {\n      data: [],\n      pagination: {current: 1},\n      loading: false,\n      searchCatID: '',\n      searchPFSID: '',\n      filters: {},\n    };\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n        this.fetch()\n\n      }\n  }\n  componentDidMount() {\n    if (this.props.user_id){ \n      this.fetch()\n    }\n  }\n  info() {\n    Modal.info({\n      title: 'Уведомления',\n      content: (<div>\n        <p>Это - уведомления. Они появляются, когда краулер регистриует изменения на сайте</p>\n        <p>Нажатие на ID ПФС записи переведёт вас на страницу подфильтровой страницы в общем списке. Полезно, когда действие - \"Создано\"</p>\n        <p>Если \"Действие\" у записи - \"Изменено\", значит изменилась страница, ранее зарегестрированная краулером. В этом случае нажатие на текст \"Изменено\" отправит вас к изменениям страницы</p>\n        <p>Вы можете отфильтровать список по действию или по изменённым полям(Это особенно полезно тем, что краулер также регистриует появляние или исчезновение товара на странице)</p>\n        <p>Для того, чтобы перенести уведомление в прочитанные - нажмите синюю кнопку \"Прочитать\"</p>\n        <p>Для того, чтобы удалить уведомления без возможности его прочтения в будущем - нажмите кнопку \"Удалить\"</p>\n        <p>К прочитанным уведомлениям можно попасть при помощи хлебных крошек, нажав на \"Непрочитанные\" --> \"Прочитанные\"</p>\n        <p>Новых уведомлений не появится, если вы не подписаны на разделы сайта. Для управления подписками есть специальная кнопка слева от этой</p>\n        <p>Справа от этой кнопки находится кнопка \"Прочесть всё\". Она переносит все непрочитанные сообщения в \"Прочитанные\". Это может занять некоторое время.</p>\n      </div>),\n      onOk() {},\n    });\n  }\n\n//---------------------ПОИСК----------------------\ngetColumnSearchProps = dataIndex => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          this.searchInput = node;\n        }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        icon=\"search\"\n        size=\"small\"\n        style={{ width: 90, marginRight: 8 }}\n      >\n        Search\n      </Button>\n      <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n        Reset\n      </Button>\n    </div>\n  ),\n  filterIcon: filtered => (\n    <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n  ),\n  render: text => (text\n  ),\n});\n\nhandleSearch = (selectedKeys, confirm, dataIndex) => {\n  confirm(); \n  if (dataIndex === 'filterpage_id') {\n    this.setState({ searchPFSID: selectedKeys[0] });\n  } else if (dataIndex === 'category_id'){\n    this.setState({ searchCatID: selectedKeys[0] });\n  }\n  var pagination = this.state.pagination\n  var filters = this.state.filters\n  this.handleTableChange(pagination,filters)\n};\n\nhandleReset = clearFilters => {\n  clearFilters();\n  this.setState({ searchPFSID: '',\n                  searchCatID: '',\n});\n};\n/////////////////////////////////////////ПОИСК/////////////////////////\n    columns = [\n      {\n        title: 'ID категории',\n        dataIndex: 'category_id',\n        key: 'category_id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n        title: 'ID ПФС',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n\n\n      },\n      {\n          title: 'Действие',\n          dataIndex: 'action_is',\n          key: 'action_is',\n          render: (text, record) => <span>{text === 'created'? <div>Создано</div> : <div><Link rel=\"noopener noreferrer\" target='_blank' to={record.filterpage_id ? `/crowler/changes/filter-pages/${record.action_id}`: `/crowler/changes/categories/${record.action_id}`}>Изменено</Link></div>}</span>,\n          filters: [{ text: 'Создано', value: 'created' }, { text: 'Изменено', value: 'changed' }],\n          filterMultiple: false\n  \n        },\n        {\n          title: 'Изменённые поля',\n          dataIndex: 'action_subjects',\n          key: 'action_subjects',\n          render: (text) => <span>{\n            text\n            .replace('filterpage_disabling_reason','Причина отключения |')\n            .replace('filterpage_is_active_changed_at','Статус изменен (дата) |')\n            .replace('filterpage_is_active', 'Статус |')\n            .replace('filterpage_url','URL |')\n            .replace('filterpage_title','Title |')\n            .replace('filterpage_description','Description |')\n            .replace('filterpage_full_name','FN  |')\n            .replace('filterpage_text','SEO текст |')\n            .replace('filterpage_name','Название |')\n            .replace('filterpage_canonical_url','Canonical URL |')\n            .replace('filterpage_is_top','Под листингом |')\n            .replace('category_lvl','Уровень |')\n            .replace('category_is_active', 'Статус |')\n            .replace('category_url' ,'URL |')\n            .replace('category_title','Title |')\n            .replace('category_description','Description |')\n            .replace('category_full_name','FN  |')\n            .replace('category_seo_text','SEO текст |')\n            .replace('category_name','Название |')\n            .replace('category_canonical_url','Canonical URL |')\n            .replace('category_path','Путь к категории |')\n          }</span>,\n          filters: [\n            { text: 'ПФС | Статус', value: 'is_active' },\n            { text: 'ПФС | Причина отключения', value: 'filterpage_disabling_reason' },\n            { text: 'ПФС | Статус изменён(дата)', value: 'filterpage_is_active_changed_at' },\n            { text: 'ПФС | URL', value: 'filterpage_url' },\n            { text: 'ПФС | Title', value: 'filterpage_title' },\n            { text: 'ПФС | Description', value: 'filterpage_description' },\n            { text: 'ПФС | FN', value: 'filterpage_full_name' },\n            { text: 'ПФС | SEO текст', value: 'filterpage_text' },\n            { text: 'ПФС | Название', value: 'filterpage_name' },\n            { text: 'ПФС | Canonical URL', value: 'filterpage_canonical_url' },\n            { text: 'ПФС | Под листингом', value: 'filterpage_is_top' },\n            { text: 'Категория | Статус', value: 'is_active' },\n            { text: 'Категория | Уровень', value: 'category_lvl' },\n            { text: 'Категория | URL', value: 'category_url' },\n            { text: 'Категория | Title', value: 'category_title' },\n            { text: 'Категория | Description', value: 'category_description' },\n            { text: 'Категория | FN', value: 'category_full_name' },\n            { text: 'Категория | SEO текст', value: 'category_seo_text' },\n            { text: 'Категория | Название', value: 'category_name' },\n            { text: 'Категория | Canonical URL', value: 'category_canonical_url' },\n            { text: 'Категория | Путь к категории', value: 'category_path' },\n  \n          ],\n          filterMultiple: false\n  \n        },\n        { \n          title: 'Действия',\n          dataIndex: 'id',\n          key: 'actions',\n          render: (text, row) => (\n          <span>\n          <span className=\"custom-links\" onClick={() => this.read(row.id)}>Прочитать</span>\n          <Divider type=\"vertical\" />\n          <span style={{'color': 'red', 'cursor': 'pointer'}} onClick={() => this.delete(row.id)}>Удалить</span>\n          </span>\n          )\n  \n        },\n    ];\n\n    read = (id) => {\n      this.setState({ loading: true });\n      axios.post(`${backendURL}/crowler/notify/read/`, {notification_id: id})\n      message\n      .loading('Помечаем прочитанным. Это может занять некоторое время.', 2.5)\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n      this.setState({ loading: false });\n\n    }\n    delete = (id) => {\n      this.setState({ loading: true });\n      axios.post(`${backendURL}/crowler/notify/delete/`, {notification_id: id})\n      message\n      .loading('Удаляем из базы. Это может занять некоторое время.', 2.5)\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n      this.setState({ loading: false });\n    }\n\n\n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n        filters: filters,\n      });\n      this.fetch({\n        page: pagination.current,\n        action_is: filters.action_is ? filters.action_is.toString() : '',\n        action_subjects: filters.action_subjects ? filters.action_subjects.toString() : '',\n        filterpage_id: this.state.searchPFSID,\n        category_id: this.state.searchCatID,\n      });\n    };\n\n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/notify/?not_read=${this.props.user_id}`,{\n        params: {\n          ...params,\n          \n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n  \n    render() {\n      return (\n        <div>\n        {this.props.user_id ?\n        <div>\n        <BackTop />\n        <Button type=\"default\" size=\"small\" style={{'position': 'absolute', 'right': '20%'}}><Link to=\"/notifications/subscriptions/\">Управление подписками</Link></Button>\n        <Button type=\"danger\" size=\"small\" style={{'position': 'absolute', 'right': '2%'}} onClick={() => this.read('all')}>Прочесть всё</Button>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%'}} onClick={this.info}></Button>\n        \n        <Breadcrumb style={{marginBottom: '10px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Уведомления\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/notifications/'>Непрочитанные</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n          rowKey=\"id\"\n          style={{marginTop: '20px'}}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.notificationsReducer.count,\n        user_id: state.authReducer.user_id,\n    }\n}\n\nexport default connect(mapStateToProps)(NotifyPopup);","import React from 'react'\nimport { BackTop, Menu, Table, Breadcrumb, Icon, Button, message, Modal, Input } from 'antd';\nimport axios from 'axios'\nimport { Link }  from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport backendURL from '../../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/notifications/'>Непрочитанные</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\n\n\nclass NotificationsRead extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchPFSID: '',\n      searchCatID: '',\n      filters: {},\n    };\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n      this.fetch()\n\n      }\n  }\n  componentDidMount() {\n    if (this.props.user_id){ \n      this.fetch()\n    }\n  }\n  info() {\n    Modal.info({\n      title: 'Прочитанные уведомления',\n      content: (<div>\n        <p>Это - прочитанные уведомления. Склад уведомлений, которые вы отложили на потом.</p>\n        <p>Все элементы навигации и функци те же, что и в непрочитанных за малыми изменениями</p>\n        <p>Доступно только действие \"Удалить\". Оно удаляет уведомление без возможности прочтения в будущем.</p>\n        <p>Справа от этой кнопки находится кнопка \"Удалить всё\". Она удаляет все уведомления без возможности их прочтения в дальнейшем. Это может занять некоторое время.</p>\n      </div>),\n      onOk() {},\n    });\n  }\n\n//---------------------ПОИСК----------------------\ngetColumnSearchProps = dataIndex => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          this.searchInput = node;\n        }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        icon=\"search\"\n        size=\"small\"\n        style={{ width: 90, marginRight: 8 }}\n      >\n        Search\n      </Button>\n      <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n        Reset\n      </Button>\n    </div>\n  ),\n  filterIcon: filtered => (\n    <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n  ),\n  render: text => (text\n  ),\n});\n\nhandleSearch = (selectedKeys, confirm, dataIndex) => {\n  confirm(); \n  if (dataIndex === 'filterpage_id') {\n    this.setState({ searchPFSID: selectedKeys[0] });\n  } else if (dataIndex === 'category_id'){\n    this.setState({ searchCatID: selectedKeys[0] });\n  }\n  var pagination = this.state.pagination\n  var filters = this.state.filters\n  this.handleTableChange(pagination,filters)\n};\n\nhandleReset = clearFilters => {\n  clearFilters();\n  this.setState({ searchPFSID: '',\n                  searchCatID: '',\n});\n};\n/////////////////////////////////////////ПОИСК/////////////////////////\n\n    columns = [\n      {\n        title: 'ID категории',\n        dataIndex: 'category_id',\n        key: 'category_id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n        title: 'ID ПФС',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n      },\n      {\n          title: 'Действие',\n          dataIndex: 'action_is',\n          key: 'action_is',\n          render: (text, record) => <span>{text === 'created'? <div>Создано</div> : <div><Link rel=\"noopener noreferrer\" target='_blank' to={record.filterpage_id ? `/crowler/changes/filter-pages/${record.action_id}`: `/crowler/changes/categories/${record.action_id}`}>Изменено</Link></div>}</span>,\n          filters: [{ text: 'Создано', value: 'created' }, { text: 'Изменено', value: 'changed' }],\n          filterMultiple: false\n  \n        },\n        {\n          title: 'Изменённые поля',\n          dataIndex: 'action_subjects',\n          key: 'action_subjects',\n          render: (text) => <span>{\n            text\n            .replace('filterpage_disabling_reason','Причина отключения |')\n            .replace('filterpage_is_active_changed_at','Статус изменен (дата) |')\n            .replace('filterpage_is_active', 'Статус |')\n            .replace('filterpage_url','URL |')\n            .replace('filterpage_title','Title |')\n            .replace('filterpage_description','Description |')\n            .replace('filterpage_full_name','FN  |')\n            .replace('filterpage_text','SEO текст |')\n            .replace('filterpage_name','Название |')\n            .replace('filterpage_canonical_url','Canonical URL |')\n            .replace('filterpage_is_top','Под листингом |')\n          }</span>,\n          filters: [\n            { text: 'ПФС | Статус', value: 'is_active' },\n            { text: 'ПФС | Причина отключения', value: 'filterpage_disabling_reason' },\n            { text: 'ПФС | Статус изменён(дата)', value: 'filterpage_is_active_changed_at' },\n            { text: 'ПФС | URL', value: 'filterpage_url' },\n            { text: 'ПФС | Title', value: 'filterpage_title' },\n            { text: 'ПФС | Description', value: 'filterpage_description' },\n            { text: 'ПФС | FN', value: 'filterpage_full_name' },\n            { text: 'ПФС | SEO текст', value: 'filterpage_text' },\n            { text: 'ПФС | Название', value: 'filterpage_name' },\n            { text: 'ПФС | Canonical URL', value: 'filterpage_canonical_url' },\n            { text: 'ПФС | Под листингом', value: 'filterpage_is_top' },\n  \n          ],\n          filterMultiple: false\n  \n        },\n        { \n          title: 'Действия',\n          dataIndex: 'id',\n          key: 'actions',\n          render: (text, row) => (\n          <span>\n          <span style={{'color': 'red', 'cursor': 'pointer'}} onClick={() => this.delete(row.id)}>Удалить</span>\n          </span>\n          )\n  \n        },\n    ];\n\n    delete = (id) => {\n      this.setState({ loading: true });\n      axios.post(`${backendURL}crowler/notify/delete/`, {notification_id: id})\n      message\n      .loading('Удаляем из базы. Это может занять некоторое время.', 2.5)\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n      this.setState({ loading: false });\n    }\n\n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        action_is: filters.action_is ? filters.action_is.toString() : '',\n        action_subjects: filters.action_subjects ? filters.action_subjects.toString() : '',\n        filterpage_id: this.state.searchPFSID,\n        category_id: this.state.searchCatID\n      });\n    };\n\n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/notify/?is_actual=${this.props.user_id}`,{\n        params: {\n          ...params,\n          \n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n  \n    render() {\n      return (\n        <div>\n        {this.props.user_id ?\n        <div>\n        <BackTop />\n        <Button type=\"default\" size=\"small\" style={{'position': 'absolute', 'right': '20%'}}><Link to=\"/notifications/subscriptions/\">Управление подписками</Link></Button>\n        <Button type=\"danger\" size=\"small\" style={{'position': 'absolute', 'right': '2%'}} onClick={() => this.delete('all')}>Удалить всё</Button>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%'}} onClick={this.info}></Button>\n        <Breadcrumb style={{marginBottom: '10px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Уведомления\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/notifications/is-read/'>Прочитанные</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n          rowKey=\"id\"\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.notificationsReducer.count,\n        user_id: state.authReducer.user_id,\n    }\n}\n\nexport default connect(mapStateToProps)(NotificationsRead);","import React from 'react';\nimport { Button, Select, Alert } from 'antd'\nimport axios from 'axios'\nimport backendURL from '../../../consts'\n\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + token \n    }\n}\n\nclass NotificationSubsciptions extends React.Component {\n    state = {\n        selectedItems: [],\n        options: [],\n        success: undefined,\n        error: undefined,\n    };\n    componentDidMount() {\n        axios.get(`${backendURL}/crowler/notify/categories/`)\n            .then(res => {\n                this.setState({\n                    options: res.data\n                })\n            })\n        axios.get(`${backendURL}/crowler/notify/subscriptions/`)\n            .then(res => {\n                this.setState({\n                    selectedItems: res.data\n                })\n            })\n    }\n\n    handleChange = selectedItems => {\n        this.setState({ selectedItems });\n    };\n\n    updateSubscriptions = () => {\n        axios.post(`${backendURL}/crowler/notify/subscriptions/update/`, {\n            responsibilities: this.state.selectedItems\n        })\n            .then(res => {\n                this.setState({\n                    success: res.data\n                })\n            })\n            .catch(error => {\n                this.setState({\n                    error: error.data\n                })\n            })\n            \n    }\n    render() {\n        const { selectedItems } = this.state;\n        const filteredOptions = this.state.options.filter(o => !selectedItems.includes(o));\n        let errorMessage = null;\n        let successMessage = null;\n\n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n        return (\n          <div>\n          {\n          token ?\n        <div>\n          <div>\n          {errorMessage}\n          {successMessage}\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Выберите категории для получения уведомлений\"\n                    value={selectedItems}\n                    onChange={this.handleChange}\n                    style={{ width: '30%'}}\n                >\n                    {filteredOptions.map(item => (\n                    <Select.Option key={item} value={item}>\n                        {item}\n                    </Select.Option>\n                    ))}\n                </Select>\n                </div>\n            <Button type=\"primary\" style={{'marginLeft': '20%', 'marginTop': '2%'}} onClick={this.updateSubscriptions}>Обновить подписки</Button>\n            <div>\n                <h1>Управление подписками</h1>\n                <p>Этот интерфейс отвечает за то, уведомления об изменениях в каких категориях вы будете получать.</p>\n                <p>Вы будете получать уведомления только для тех категорий, которые есть в поле.</p>\n                <p>При нажатии на поле, откроется список категорий в транслитерированом виде.</p>\n                <p>Для упрощения поиска категории в списке вы можете начать вводить транслитерированное название категории</p>\n                <p>Для подтверждения и записи изменений в базу, нажмите кнопку \"Обновить подписки\".</p>\n                <p>Этот список можно изменить в любой момент</p>\n                <p>Изменения вступят в силу моментально и вы начнёте получать новые уведомления</p>\n                <p>Это не влияет на уже полученные изменения. Только на будущие.</p>\n                <p>При нажатии на кнопку \"Получить все уведомления по подписанным категориям\"(если я её запилю) в ваш список непрочитанного будут добавлены АБСОЛЮТНО ВСЕ уведомления\n                по выбранным категориям (не забудьте сначала нажать \"Обновить подписки\").</p>\n                <p>Это может занять ОЧЕНЬ длительное время. В зависимости от того, сделает разработчик очистку старых записей в БД или нет.</p>\n\n            </div>\n            </div>\n            :\n            <div>Только для авторизованных пользователей</div>\n            }\n          </div>\n        );\n      }\n}\n\nexport default NotificationSubsciptions;","import React from 'react'\nimport axios from 'axios'\nimport { Form, Icon, Input, Button, Modal, Radio, Alert, Select } from 'antd';\nimport backendURL from '../../consts'\n\n\n\nconst token = localStorage.getItem('token');\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass GroupsManagement extends React.Component {\n    state ={\n        groupsRadio: 'add',\n        groupsSelected: [],\n        groupsOptions: [],\n        success: '',\n        error: ''\n    }\n\n    componentDidMount() {\n        axios.get(`${backendURL}/api/admin/groups/`)\n            .then(res => {\n                this.setState({\n                    groupsOptions: res.data\n                })\n            })\n    }\n\n    updatingInfo() {\n        Modal.info({\n          title: 'Управление группами',\n          content: (<div>\n            <p>При регистрации пользователя, у него нет ни одной группы</p>\n            <p>Основная функция сейчас - присвоение или лишение прав администратора другому пользователю, на случай если кто-то уйдёт. </p>\n            <p>Права администратора нужны для редактирования списка категорий в базе и для активации пользователей.</p>\n            <p>Управлять группами могут только члены группы admin. Например, руководители.</p>\n            <p>Это, как и весь раздел \"Управление\" сделано для обеспечения высокой автономности сервиса без квалифицированного администратора и обеспечения безопасности данных. </p>\n            <p></p>\n          </div>),\n          onOk() {},\n        });\n      }\n    handleGroupsChange = groupsSelected => {\n        this.setState({ groupsSelected });\n    };\n\n    groupsRadioChanger = e => {\n        this.setState({\n            groupsRadio: e.target.value,\n        });\n      };\n      \n    handleGroupsUpdate = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios.post(`${backendURL}/api/admin/groups/update/`, {\n              updating_user: values.groupsUsername,\n              action: this.state.groupsRadio,\n              groups_to_update: this.state.groupsSelected\n            })\n            .then(res => {\n                this.setState({\n                    success: res.data,\n                    error: '',\n                })\n            })\n        \n            .catch(error => {\n                this.setState({\n                    error: error.response.data,\n                    success: '',\n                })\n            \n        })\n            \n          }\n        });\n      };\n    \n\n    render() {\n        let errorMessage = null\n        let successMessage = null\n\n    if (this.state.error) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n        );\n    }\n    if (this.state.success) {\n        successMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n        );\n    }\n    const { getFieldDecorator } = this.props.form;\n\n    const { groupsSelected } = this.state;\n    const filteredOptions = this.state.groupsOptions.filter(o => !groupsSelected.includes(o));\n        return(\n            <div>\n            {errorMessage}\n            {successMessage}\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Выберите группу для назначения пользователю\"\n                    value={groupsSelected}\n                    onChange={this.handleGroupsChange}\n                    style={{ width: '30%'}}\n                >\n                    {filteredOptions.map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n\n                    ))}\n                </Select>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.updatingInfo}></Button>\n\n                <Form onSubmit={this.handleGroupsUpdate} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                        {getFieldDecorator('groupsUsername', {\n                            rules: [{ required: true, message: 'Введите имя пользователя, к которому применить изменения' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Имя пользователя\"\n                            />,\n                        )}\n                    </Form.Item>\n\n                    <Radio.Group onChange={this.groupsRadioChanger} value={this.state.groupsRadio}>\n                        <Radio value={'add'}>Добавить</Radio>\n                        <Radio value={'remove'}>Удалить</Radio>\n                    </Radio.Group>\n\n                    <Form.Item>\n                        <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Подтвердить\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n          )\n      }\n  }\n  const WrappedGroupsManagement = Form.create({ name: 'normal_login' })(GroupsManagement);\n\n  export default WrappedGroupsManagement;","import { Form, Icon, Input, Button, Modal, Radio, Alert } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport backendURL from '../../consts'\n\n\n\n\nconst token = localStorage.getItem('token');\n\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass UserVerification extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleVerification = this.handleVerification.bind(this);\n     }\n\n    state = {\n        verificationRadio: 'verificate',\n        success: '',\n        error: ''\n    }\n    \n\n    handleVerification = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios.post(`${backendURL}/api/admin/verificate_user/`, {\n              verificating_user: values.username,\n              action: this.state.verificationRadio\n            })\n            .then(res => {\n                this.setState({\n                    success: res.data,\n                    error: '',\n                })\n            })\n        \n            .catch(error => {\n                this.setState({\n                    error: error.response.data,\n                    success: '',\n                })\n            \n        })\n            \n          }\n        });\n      };\n    \n      verificationRadioChanger = e => {\n        this.setState({\n            verificationRadio: e.target.value,\n        });\n      };\n    \n      verificationInfo() {\n        Modal.info({\n          title: 'Активация пользователя',\n          content: (<div>\n            <p>При регистрации пользователя он должен быть активирован администратором. Только после активации он может авторизовываться и пользоваться сервисом.</p>\n            <p>Для (де)активации пользователя введите его username в поле \"Имя пользователя\", выберите действие и нажмите кнопку \"Подтвердить\"</p>\n            <p>Деактивация нужна для того, чтобы пользователь, утративший доверие (например, его данные были скомпрометированы) не получил доступа к данным.</p>\n            <p>Активировать пользователя могут только члены группы admin. Например, руководители.</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n    render() {\n        let errorMessage = null;\n        let successMessage = null;\n\n\n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n\n    \n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div>\n                {errorMessage}\n                {successMessage}\n            <h1>Активация пользователя</h1>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.verificationInfo}></Button>\n\n                <Form onSubmit={this.handleVerification} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите имя пользователя, которого хотите активировать' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Имя пользователя\"\n                        />,\n                    )}\n                    </Form.Item>\n\n                <Radio.Group onChange={this.verificationRadioChanger} value={this.state.verificationRadio}>\n                    <Radio value={'verificate'}>Активировать</Radio>\n                    <Radio value={'deactivate'}>Деактивировать</Radio>\n                </Radio.Group>\n\n                <Form.Item>\n                    <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Подтвердить\n                    </Button>\n                </Form.Item>\n        </Form>\n      </div>\n        )\n    }\n}\nconst WrappedUserVerification = Form.create({ name: 'normal_login' })(UserVerification);\n\nexport default WrappedUserVerification","import { Form, Icon, Input, Button, Modal, Radio, Alert } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\n\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass CategoriesUpdate extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleVerification = this.handleVerification.bind(this);\n     }\n\n    state = {\n        categoriesRadio: 'add',\n        success: '',\n        error: ''\n    }\n\n    handleVerification = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios\n                .post(`${backendURL}/crowler/notify/categories/update/`, {\n                    category: values.username,\n                    action: this.state.categoriesRadio\n                    })\n                .then(res => {\n                    this.setState({\n                        success: res.data,\n                        error: '',\n                    })\n                })\n            \n                .catch(error => {\n                    this.setState({\n                        error: error.response.data,\n                        success: '',\n                    })\n                \n            })\n            \n          }\n        });\n      };\n    \n      verificationRadioChanger = e => {\n        this.setState({\n            categoriesRadio: e.target.value,\n        });\n      };\n    \n      verificationInfo() {\n        Modal.info({\n          title: 'Управление категориями',\n          content: (<div>\n            <p>Панель отвечает за управление списком категорий, при изменениях в которых могут приходить уведомления.</p>\n            <p>Для добавления или удаления категории, введите её относительный URL(без крайнего левого и крайнего правого слешей) в поле, выберите действие и нажмите \"Подтвердить\"</p>\n            <p>Например: \"kanctovary\" или \"kanctovary/shkolnye-tovary\" или \"kanctovary/shkolnye-tovary/globusy\" (без кавычек)</p>\n            <p>Изменять список категорий могут только пользователи, состоящие в группе admin.</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n    render() {\n        let errorMessage = null;\n        let successMessage = null;\n\n        \n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n\n    \n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div>\n                {errorMessage}\n                {successMessage}\n            <h1>Управление категориями для подписки</h1>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.verificationInfo}></Button>\n\n                <Form onSubmit={this.handleVerification} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите относительную ссылку на категорию, к которой хотите применить действие' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Относительная ссылка на категорию\"\n                        />,\n                    )}\n                    </Form.Item>\n\n                <Radio.Group onChange={this.verificationRadioChanger} value={this.state.categoriesRadio}>\n                    <Radio value={'add'}>Добавить</Radio>\n                    <Radio value={'remove'}>Удалить</Radio>\n                </Radio.Group>\n\n                <Form.Item>\n                    <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Подтвердить\n                    </Button>\n                </Form.Item>\n        </Form>\n      </div>\n        )\n    }\n}\nconst CategoriesUpdateForm = Form.create({ name: 'normal_login' })(CategoriesUpdate);\n\nexport default CategoriesUpdateForm","import { Form, Icon, Input, Button, Modal, Radio, Alert } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\n\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass MetricsCategoriesUpdate extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleVerification = this.handleVerification.bind(this);\n     }\n\n    state = {\n        categoriesRadio: 'add',\n        success: '',\n        error: ''\n    }\n\n    handleVerification = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios\n                .post(`${backendURL}/metrics/categories/list/update/`, {\n                    category: values.username,\n                    action: this.state.categoriesRadio\n                    })\n                .then(res => {\n                    this.setState({\n                        success: res.data,\n                        error: '',\n                    })\n                })\n            \n                .catch(error => {\n                    this.setState({\n                        error: error.response.data,\n                        success: '',\n                    })\n                \n            })\n            \n          }\n        });\n      };\n    \n      verificationRadioChanger = e => {\n        this.setState({\n            categoriesRadio: e.target.value,\n        });\n      };\n    \n      verificationInfo() {\n        Modal.info({\n          title: 'Управление категориями',\n          content: (<div>\n            <p>Панель отвечает за управление списком категорий для метрики, по которым будет сниматься статистика.</p>\n            <p>Для добавления или удаления категории, введите её относительный URL(без крайнего левого и крайнего правого слешей) в поле, выберите действие и нажмите \"Подтвердить\"</p>\n            <p>Например: \"kanctovary\" или \"kanctovary/shkolnye-tovary\" или \"kanctovary/shkolnye-tovary/globusy\" (без кавычек)</p>\n            <p>Изменять список категорий могут только пользователи, состоящие в группе admin.</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n    render() {\n        let errorMessage = null;\n        let successMessage = null;\n\n        \n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n\n    \n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div>\n                {errorMessage}\n                {successMessage}\n            <h1>Управление категориями для метрики</h1>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.verificationInfo}></Button>\n\n                <Form onSubmit={this.handleVerification} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите относительную ссылку на категорию, к которой хотите применить действие' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Относительная ссылка на категорию\"\n                        />,\n                    )}\n                    </Form.Item>\n\n                <Radio.Group onChange={this.verificationRadioChanger} value={this.state.categoriesRadio}>\n                    <Radio value={'add'}>Добавить</Radio>\n                    <Radio value={'remove'}>Удалить</Radio>\n                </Radio.Group>\n\n                <Form.Item>\n                    <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Подтвердить\n                    </Button>\n                </Form.Item>\n        </Form>\n      </div>\n        )\n    }\n}\nconst MetricsCategoriesUpdateForm = Form.create({ name: 'normal_login' })(MetricsCategoriesUpdate);\n\nexport default MetricsCategoriesUpdateForm","import { Form, Icon, Button, Tabs, Modal, Spin } from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux'\n\nimport WrappedGroupsManagement from '../../components/auth/groups_management'\nimport WrappedUserVerification from '../../components/auth/user_verification'\nimport CategoriesUpdateForm from '../../components/auth/categoies_list'\nimport MetricsCategoriesUpdateForm from '../../components/auth/metrics_categoies_list'\n\n\nconst { TabPane } = Tabs;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\n\nclass Management extends React.Component {\n\n\n    managementInfo() {\n        Modal.info({\n          title: 'Панель управления пользователями и данными.',\n          content: (<div>\n            <p>Панель позволяет (де)активировать пользователей, добавить их в группы, добавить/удалить категории для отслеживания и пр.</p>\n            <p>Для получения доступа требуется быть членом группы admin</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n  render() {\n    return (  \n        <div>\n        {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} /> :\n            this.props.token && (this.props.user_groups[0] === '2' || this.props.user_groups[1] === 2 || this.props.user_groups[3] === 2 || this.props.user_groups[4] === 2) ?\n        <div>\n        <h1>Панель управления пользователями и данными</h1>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10.2%', 'top': '7%', marginBottom: '20px'}} onClick={this.managementInfo}></Button>\n        <div>\n\n        <Tabs defaultActiveKey=\"1\" >\n        <TabPane tab=\"Активация пользователя\" key=\"1\">\n        <WrappedUserVerification />\n\n        </TabPane>\n        <TabPane tab=\"Назначение групп пользователям\" key=\"2\">\n            <WrappedGroupsManagement />\n\n        </TabPane>\n        <TabPane tab=\"Управление списком категорий\" key=\"3\">\n          <CategoriesUpdateForm />\n        </TabPane>\n        <TabPane tab = \"Управление категорями для метрики\" key=\"4\">\n          <MetricsCategoriesUpdateForm />\n        </TabPane>\n      </Tabs>\n      </div>\n      </div> \n      :\n                <div>Вы не авторизованы или у вас недостаточно прав для просмотра страницы.</div>}\n      </div>\n      \n    );\n  }\n}\n\nconst WrappedNormalManagement = Form.create({ name: 'normal_login' })(Management);\n\nconst mapStateToProps = (state) => {\n    return {\n        user_error: state.authReducer.user_error,\n        user_groups: state.authReducer.user_groups,\n        token : state.authReducer.token,\n        user_loading: state.authReducer.user_loading,\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(WrappedNormalManagement);","import React from 'react';\n\n\nclass Feedback extends React.Component {\n\n    render() {\n        return(\n            <div>\n                <h1>Спасибо за пользование сервисом!</h1>\n                <p>Я приложил усилия, чтобы обеспечить отказоустойчивость, автономность и некоторую расширяемость сервиса</p>\n                <p>Однако, нельзя предусмотреть все. Вещи, которые стоило бы покрыть тестами, не покрыты. О некоторых полезных паттернах я, возможно, даже не догадываюсь.</p>\n                <p>К тому же, у меня нет собственной команды QA, чтобы свести возможные баги к абсолютному минимуму</p>\n                <p>А проект мне всё ещё интересен. Поэтому, какое-то время я точно буду его поддерживать. В свободное время и в качестве хобби. Хотя и возможности у меня будут ограничены</p>\n                <p>Баг-репорты и фич-реквесты оформлять в виде тикетов по <a href=\"https://gitlab.sima-land.ru/oleg_kotov/marketing_automation/issues\" rel=\"noopener noreferrer\" target=\"blank\">ссылке</a></p>\n                <p>Прочий фидбек можно слать в скайп <span style={{color: 'green'}}>live:kotov_or_sima</span> или на почту <span style={{color: 'green'}}>tesfnatic123@gmail.com</span></p>\n            </div>\n        )\n    }\n}\n\nexport default Feedback;","\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Table, Input, Button, Form, DatePicker, Statistic, Col, Row, Modal, InputNumber } from 'antd';\nimport axios from 'axios'\nimport backendURL from '../../consts'\nimport { Link } from 'react-router-dom'\n\nconst EditableContext = React.createContext();\nconst {MonthPicker} = DatePicker;\nconst token = localStorage.getItem('token');\n\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\n\nconst pagination = {\n  pageSize: 100,\n  defaultCurrent: 1}\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  state = {\n    editing: false,\n  };\n\n  toggleEdit = () => {\n    const editing = !this.state.editing;\n    this.setState({ editing }, () => {\n      if (editing) {\n        this.input.focus();\n      }\n    });\n  };\n\n  save = e => {\n    const { record, handleSave } = this.props;\n    this.form.validateFields((error, values) => {\n      if (error && error[e.currentTarget.id]) {\n        return;\n      }\n      this.toggleEdit();\n      handleSave({ ...record, ...values });\n    });\n  };\n\n  renderCell = form => {\n    this.form = form;\n    const { children, dataIndex, record, title } = this.props;\n    const { editing } = this.state;\n    return editing ? (\n      <Form.Item style={{ margin: 0 }}>\n        {form.getFieldDecorator(dataIndex, {\n          rules: [\n            {\n              required: true,\n              message: `${title} не должен быть пустым.`,\n            },\n          ],\n          initialValue: record[dataIndex],\n        })(<Input ref={node => (this.input = node)} onPressEnter={this.save} onBlur={this.save} />)}\n      </Form.Item>\n    ) : (\n      <div\n        className=\"editable-cell-value-wrap\"\n        style={{ paddingRight: 24 }}\n        onClick={this.toggleEdit}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  render() {\n    const {\n      editable,\n      dataIndex,\n      title,\n      record,\n      index,\n      handleSave,\n      children,\n      ...restProps\n    } = this.props;\n    return (\n      <td {...restProps}>\n        {editable ? (\n          <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\n        ) : (\n          children\n        )}\n      </td>\n    );\n  }\n}\n\n\nclass MetricsTest extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [\n      {\n        title: 'Название категории',\n        dataIndex: 'name',\n        'key': 'name',\n        render: (text, record) => <Link to={`/metrics/third_level_categories/${record.id}`}>{text}</Link>,\n      },\n      {\n        title: 'План по траффику',\n        dataIndex: 'category_plan',\n        key: 'category_plan',\n        editable: true,\n      },\n\n      {\n        title: 'Первая неделя',\n        dataIndex: 'weeks_data[0].weekly_traffic',\n        key: 'first_week_col',\n        render: (text) => <span>{text}</span>,\n      },\n\n      {\n          title: 'Вторая неделя',\n          dataIndex: 'weeks_data[1].weekly_traffic',\n          key: 'second_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Третья неделя',\n          dataIndex: 'weeks_data[2].weekly_traffic',\n          key: 'third_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Четвёртая неделя',\n          dataIndex: 'weeks_data[3].weekly_traffic',\n          key: 'fourth_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Пятая неделя',\n          dataIndex: 'weeks_data[4].weekly_traffic',\n          key: 'fifth_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Суммарно за месяц',\n          dataIndex: 'category_factual',\n          key: 'monthly_sum',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Процент выполнения',\n          dataIndex: 'percentage',\n          key: 'percentage',\n          render: (text) => <span>{text + '%'}</span>,\n  \n        },\n    ];\n\n    this.state = {\n        data: [],\n        month: '',\n        monthly_target: 0,\n        site_target: 0,\n        monthly_factual: 0,\n        site_factual: 0,\n        new_site_target: '',\n        new_monthly_factual: '',\n        first_week: 'Первая неделя',\n        second_week: 'Вторая неделя',\n        third_weeek: 'Третья неделя',\n        fourth_week: 'Четвёртая неделя',\n        fifth_week: 'Пятая неделя',\n    };\n  }\n\n  info() {\n    Modal.info({\n      title: 'Прочитанные уведомления',\n      content: (<div>\n        <p>Это - статистика из Яндекс.Метрика.</p>\n        <p>Для просмотра статистики выберите месяц и нажмите кнопку \"OK\"</p>\n        <p>План по траффику на сайте и суммарный по категориям - редактируется при помощи соответсвующих полей с надписью \"Новая цель\".</p>\n        <p>План по траффику для отдельных категорий редактируется нажатием на соответствующую ячейку.</p>\n        <p>Данные в полях и ячейках применяются нажатием клавиши Enter.</p>\n        <p>Временные интервалы формируются автоматически. Сбор данных из метрики происходит автоматически и ежедневно.</p>\n        <p>Список категорий для снятия статистики можно изменить во вкладке Пользователь --> Управление.</p>\n      </div>),\n      onOk() {},\n    });\n  }\n\n  fetchcats = (params = {}) => {\n    this.setState({ loading: true });\n    axios.post(`${backendURL}/metrics/month/`, {\n        month: this.state.month,\n  })\n      .then(res => {\n      const pagination = { ...this.state.pagination };\n      pagination.total = res.data.count;\n      pagination.pageSize = 100\n      pagination.position = 'both'\n      this.setState({\n        loading: false,\n        data: res.data.categories,\n        monthly_target: res.data.monthly_target,\n        site_target: res.data.site_target,\n        monthly_factual: res.data.monthly_factual,\n        site_factual: res.data.site_factual,\n        multiplier: res.data.multiplier,\n        first_week: res.data.categories[0].weeks_data[0].first_day + '-' + res.data.categories[0].weeks_data[0].last_day,\n        second_week: res.data.categories[0].weeks_data[1].first_day + '-' + res.data.categories[0].weeks_data[1].last_day,\n        third_week: res.data.categories[0].weeks_data[2].first_day + '-' + res.data.categories[0].weeks_data[2].last_day,\n        fourth_week: res.data.categories[0].weeks_data[3].first_day + '-' + res.data.categories[0].weeks_data[3].last_day,\n      });\n    });\n  };\n  addcats = (params = {}) => {\n    axios.post(`${backendURL}/metrics/add/category/`, {\n        ...params\n    })\n    setTimeout(this.fetchcats, 500)\n  }\n\n  onChangeMonth = (date, dateString) => {\n    this.setState({\n        month: dateString,\n    })\n  }\n\n  handleNewTarget = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        axios.post(`${backendURL}/metrics/add/monthly/`, {\n          month: this.state.month,\n          site_target: values.site_target,\n        })  \n        setTimeout(this.fetchcats, 500)\n      }\n    });\n  };\n\n  handleSave = row => {\n    const newData = [...this.state.data];\n    const index = newData.findIndex(item => row.key === item.key);\n    const item = newData[index];\n    const params = {\n        'month': this.state.month,\n        'updating_category': row.name,\n        'new_plan': row.category_plan,\n    }\n    this.addcats(params)\n    newData.splice(index, 1, {\n      ...item,\n      ...row,\n    });\n  };\n  render() {\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columns = this.columns.map(col => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave,\n        }),\n      };\n    });\n    const { getFieldDecorator } = this.props.form;\n    return (\n            <div>\n                        {\n            token ?\n            <div>\n        <Button type=\"default\" size=\"small\" style={{'position': 'absolute', 'right': '20%'}}><Link to=\"/metrics/third_level_categories/\">Категории 3-го уровня</Link></Button>\n        <MonthPicker onChange={this.onChangeMonth} placeholder=\"Выберите месяц\" />\n        <Button type=\"primary\" style={{'marginLeft': '20px', 'marginBottom': '20px'}} onClick={this.fetchcats}>OK</Button>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%'}} onClick={this.info}></Button>\n\n        <Row gutter={16}>\n            <Col span={3}>\n                <Statistic title=\"Цель траффика на сайте\" value={this.state.site_target} />\n                <Statistic title=\"Траффик на сайте\" value={this.state.site_factual} />\n                <Statistic title=\"Процент выполнения\" value={Math.round(this.state.site_factual / this.state.site_target * 100)+ '%'} />\n            </Col>\n            <Col span={7}>\n            \n            <Form onSubmit={this.handleNewTarget} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    <span className=\"ant-form-text\">к предыдущему периоду: {this.state.multiplier}</span>\n                    {getFieldDecorator('site_target', {\n                        rules: [{ required: true, message: 'Введите цель для сайта' }],\n                    })(\n                        \n                        <InputNumber\n                        formatter={value => `${value}%`}\n                        placeholder=\"Новая цель\"\n                        value={this.state.site_target}\n                        />,\n                        <span className=\"ant-form-text\">к предыдущему периоду</span>\n                        \n                    )}\n                    </Form.Item>\n                    </Form>\n            </Col>\n            <Col span={9}>\n                <Statistic title=\"Цель по отслеживаемым категориям\" value={this.state.monthly_target} />\n                <Statistic title=\"Траффик по отслеживаемым категориям\" value={this.state.monthly_factual} />\n                <Statistic title=\"Процент выполнения\" value={Math.round(this.state.monthly_factual / this.state.monthly_target * 100)+ '%'} />\n            </Col>\n        </Row>\n        <Table\n          components={components}\n          rowClassName={() => 'editable-row'}\n          bordered\n          pagination={pagination}\n          dataSource={this.state.data}\n          columns={columns}\n        />\n              </div>\n                :\n                <div>Только для авторизованных пользователей</div>\n                }\n                </div>\n    );\n  }\n}\nconst WrappedMetricsTest = Form.create({ name: 'normal_login' })(MetricsTest);\n\nexport default WrappedMetricsTest;","import React from 'react';\nimport { Form, Icon, Input, Button, Modal, Radio, Alert, Select, Breadcrumb } from 'antd';\nimport axios from 'axios';\nimport backendURL from '../../consts';\nimport { Link } from 'react-router-dom';\n\nconst token = localStorage.getItem('token');\nconst { Option } = Select;\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass MetricsThirdLeveCategories extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleCategoriesUpdate = this.handleCategoriesUpdate.bind(this);\n     }\n\n    state = {\n        categoriesRadio: 'add',\n        success: '',\n        error: '',\n        head_category: '',\n        head_category_list: [],\n    }\n    componentDidMount() {\n        axios.get(`${backendURL}/metrics/categories/list/`)\n            .then(res => {\n                this.setState({\n                    head_category_list: res.data\n                })\n            })\n    }\n\n    handleCategoriesUpdate = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios\n                .post(`${backendURL}/metrics/categories/third_level/update/`, {\n                    category: values.username,\n                    action: this.state.categoriesRadio,\n                    head_category: this.state.head_category,\n                    })\n                .then(res => {\n                    this.setState({\n                        success: res.data,\n                        error: '',\n                    })\n                })\n            \n                .catch(error => {\n                    this.setState({\n                        error: error.response.data,\n                        success: '',\n                    })\n                \n            })\n            \n          }\n        });\n      };\n\n      handleHeadCategoryChange = item => {\n        this.setState({head_category: item});\n    };\n      handeRadioChanger = e => {\n        this.setState({\n            categoriesRadio: e.target.value,\n        });\n      };\n    \n      verificationInfo() {\n        Modal.info({\n          title: 'Управление категориями',\n          content: (<div>\n            <p>Панель отвечает за управление списком вложенных категорий для метрики, по которым будет сниматься статистика.</p>\n            <p>Для добавления или удаления категории, выберите родительскую категорию из выпадающего списка, затем введите её относительный URL(без крайнего левого и крайнего правого слешей) в поле, выберите действие и нажмите \"Подтвердить\"</p>\n            <p>Например: \"kanctovary/shkolnye-tovary\" или \"kanctovary/shkolnye-tovary/globusy\" (без кавычек)</p>\n            <p>Изменять список категорий могут только пользователи, состоящие в группе admin.</p>\n            <p>Новые категории появятся в отчёте в следующем месяце. Если вам они нужны прямо сейчас - нажмите кнопку \"Принудительно обновить список категорий...\"</p>\n            <p>Если вам нужна статистика на текущий час, нажмите кнопку: \"Принудительно снять статистику по категорям\".</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n    forcedates = () => {\n        axios.post(`${backendURL}/metrics/run-tasks/create-dates/`, {\n            force: 'True',\n        })\n        .then(res => {\n            this.setState({\n                success: res.data,\n                error: '',\n            })\n        })\n    \n        .catch(error => {\n            this.setState({\n                error: error.response.data,\n                success: '',\n            })\n    })\n}\n\n    forcedata = () => {\n        axios.post(`${backendURL}/metrics/run-tasks/collect-data/`)\n        .then(res => {\n            this.setState({\n                success: res.data,\n                error: '',\n            })\n        })\n    \n        .catch(error => {\n            this.setState({\n                error: error.response.data,\n                success: '',\n            })\n        })\n    }\n    \n\n    render() {\n        let errorMessage = null\n        let successMessage = null\n\n    if (this.state.error) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n        );\n    }\n    if (this.state.success) {\n        successMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n        );\n    }\n    const { getFieldDecorator } = this.props.form;\n    const { head_category_list } = this.state;\n        return(\n            <div>\n            {errorMessage}\n            {successMessage}\n                        {\n            token ?\n            <div>\n            <Breadcrumb style={{marginBottom: '10px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            <Link to='/metrics/'>Метрика</Link>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>\n            {this.state.head_category}\n            </Breadcrumb.Item>\n        </Breadcrumb>\n            <h1>Управление вложенными категориями для метрики</h1>\n                <Select\n                    placeholder=\"Выберите родительскую категорию\"\n                    onChange={this.handleHeadCategoryChange}\n                    style={{ width: '30%'}}\n                >\n                    {head_category_list.map(head_category => (\n                        <Option key={head_category}>\n                            {head_category}\n                        </Option>\n\n                    ))}\n                </Select>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '10%', marginBottom: '20px'}} onClick={this.verificationInfo}></Button>\n\n                <Form onSubmit={this.handleCategoriesUpdate} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите относительную ссылку на категорию, к которой хотите применить действие' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Относительная ссылка на категорию(включая родительскую)\"\n                        />,\n                    )}\n                    </Form.Item>\n\n                <Radio.Group onChange={this.handeRadioChanger} value={this.state.categoriesRadio}>\n                    <Radio value={'add'}>Добавить</Radio>\n                    <Radio value={'remove'}>Удалить</Radio>\n                </Radio.Group>\n\n                <Form.Item>\n                    <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Подтвердить\n                    </Button>\n                </Form.Item>\n        </Form>\n        <Button style={{marginTop: '50px'}}type=\"primary\" className=\"login-form-button\" onClick={this.forcedates}>Принудительно обновить список категорий в отчёте и снять по ним статистику</Button>\n        <Button style={{marginTop: '10px', marginLeft: '30px'}} type=\"primary\"  className=\"login-form-button\" onClick={this.forcedata}>Принудительно снять статистику по категорям, которые сейчас в списке</Button>\n        </div>\n                :\n                <div>Только для авторизованных пользователей</div>\n                }\n                </div>\n        )\n    }\n}\nconst MetricsThirdLeveCategoriesForm = Form.create({ name: 'normal_login' })(MetricsThirdLeveCategories);\n\nexport default MetricsThirdLeveCategoriesForm","import React from 'react'\nimport { BackTop, Menu, Table, Breadcrumb, Icon, Divider, Button, message, Modal, Input } from 'antd';\nimport axios from 'axios'\nimport { Link }  from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport backendURL from '../../consts'\n\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token \n  }\n}\n\n\n\n\nclass MetricsRetrieve extends React.Component {\n    state = {\n      data: [],\n      head_category: '',\n    };\n\n    componentWillMount() {\n        const categoryDataID = this.props.match.params.categoryDataID; \n        axios.get(`${backendURL}/metrics/category_data/${categoryDataID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data.third_level,\n                    head_category: res.category_name,\n                })\n            })\n    }\n\n\n    columns = [\n      {\n        title: 'Путь категории',\n        dataIndex: 'child_category',\n        key: 'child_category',\n      },\n      {\n        title: 'Первая неделя',\n        dataIndex: 'weeks[0].weekly_traffic',\n        key: 'first_week_col',\n        render: (text) => <span>{text}</span>,\n      },\n\n      {\n          title: 'Вторая неделя',\n          dataIndex: 'weeks[1].weekly_traffic',\n          key: 'second_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Третья неделя',\n          dataIndex: 'weeks[2].weekly_traffic',\n          key: 'third_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Четвёртая неделя',\n          dataIndex: 'weeks[3].weekly_traffic',\n          key: 'fourth_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Пятая неделя',\n          dataIndex: 'weeks[4].weekly_traffic',\n          key: 'fifth_week',\n          render: (text) => <span>{text}</span>,\n  \n        },\n\n        {\n          title: 'Суммарно за месяц',\n          dataIndex: 'child_category_traffic',\n          key: 'monthly_sum',\n          render: (text) => <span>{text}</span>,\n  \n        },\n    ];\n  \n    render() {\n      return (\n        <div>\n        {\n                    token ?\n            <div>\n        <BackTop />\n        <h1>{this.state.head_category}</h1>\n        <Breadcrumb style={{marginBottom: '10px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            <Link to='/metrics/'>Метрика</Link>\n            </Breadcrumb.Item>\n            <Breadcrumb.Item>\n            {this.state.head_category}\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n          rowKey=\"id\"\n          style={{marginTop: '20px'}}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.notificationsReducer.count,\n        user_id: state.authReducer.user_id,\n    }\n}\n\nexport default connect(mapStateToProps)(MetricsRetrieve);","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Combinator from './containers/combinator/combinator-infields';\nimport Login from './containers/auth/Login';\nimport Signup from './containers/auth/signup';\nimport Mainpage from './components/mainpage';\nimport VerificationSent from './containers/auth/email_verification_sent';\nimport UserProfile from './containers/auth/user_profile';\nimport CategoryListView from './containers/crowler/CategoryListView';\nimport FilterpageListView from './containers/crowler/FilterpageListView';\nimport CategoryRetrieveView from './containers/crowler/CategoryRetrieveView';\nimport FilterpageRetrieveView from './containers/crowler/FilterpageRetrieveView';\nimport FilterpageChangesList from './containers/crowler/FilterpageChangesList'\nimport CategoryChangesList from './containers/crowler/CategoryChangesList'\nimport FilterpageChangesView from './containers/crowler/FilterpageChangesView'\nimport CategoryChangesView from './containers/crowler/CategoryChangesView'\nimport NotifyPopup from './containers/crowler/notifications/NotifyPopup'\nimport NotificationsRead from './containers/crowler/notifications/NotificationsRead'\nimport NotificationSubsciptions from './containers/crowler/notifications/Subscriptions'\nimport WrappedNormalManagement from './containers/auth/management'\nimport Feedback from './containers/feedback'\nimport MetricsMain from './containers/metrics/metrics_main'\nimport MetricsThirdLeveCategoriesForm from './containers/metrics/metrics_cats'\nimport MetricsRetrieve from './containers/metrics/metrics_retrieve'\n\n\n\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/combinator/' component={Combinator} /> {\"\"}\n        <Route exact path='/login/' component={Login} /> {\"\"}\n        <Route exact path=\"/signup/\" component={Signup} />{\" \"}\n        <Route exact path='/' component={Mainpage} /> {\"\"}\n        <Route exact path='/signup/verification_sent/' component={VerificationSent} /> {\"\"}\n        <Route exact path='/profile/' component={UserProfile} /> {\"\"}\n        <Route exact path='/crowler/categories/' component = {CategoryListView} /> {\"\"}\n        <Route exact path='/crowler/filter-pages/' component = {FilterpageListView} /> {\"\"}\n        <Route exact path='/crowler/categories/:categoryID' component = {CategoryRetrieveView} /> {\"\"}\n        <Route exact path='/crowler/filter-pages/:filterpageID' component = {FilterpageRetrieveView} /> {\"\"}\n        <Route exact path='/crowler/changes/filter-pages/' component = {FilterpageChangesList} /> {\"\"}\n        <Route exact path='/crowler/changes/categories/' component = {CategoryChangesList} /> {\"\"}\n        <Route exact path='/crowler/changes/filter-pages/:filterpageID' component = {FilterpageChangesView} /> {\"\"}\n        <Route exact path='/crowler/changes/categories/:categoryID' component = {CategoryChangesView} /> {\"\"}\n        <Route exact path='/notifications/' component = {NotifyPopup} /> {\"\"}\n        <Route exact path='/notifications/is-read/' component = {NotificationsRead} /> {\"\"}\n        <Route exact path='/notifications/subscriptions/' component = {NotificationSubsciptions} /> {\"\"}\n        <Route exact path='/management/' component = {WrappedNormalManagement} /> {\"\"}\n        <Route exact path='/feedback/' component = {Feedback} /> {\"\"}\n        <Route exact path='/metrics/' component = {MetricsMain} /> {\"\"}\n        <Route exact path='/metrics/third_level_categories/' component = {MetricsThirdLeveCategoriesForm} /> {\"\"}\n        <Route exact path='/metrics/third_level_categories/:categoryDataID' component= {MetricsRetrieve} /> {\"\"}\n\n\n\n    </div>\n);\n\n\nexport default BaseRouter;","import React, { Component } from 'react';\nimport * as actions from '../store/actions/auth';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon, Popconfirm, Badge, } from 'antd';\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\nclass CustomLayout extends Component {\n    state = {\n      collapsed: false,\n      visible: false\n    };\n\n    showDrawer = () => {\n      this.setState({\n        visible: true,\n      });\n    };\n    closeDrawer = () => {\n      this.setState({\n        visible: false,\n      });\n    };\n  \n\n    onCollapse = collapsed => {\n      this.setState({ collapsed });\n    };\n    render() {\n\n      return (\n        <Layout className=\"unselectable\" style={{ minHeight: '100vh' }}>\n          <Sider className=\"unselectable\" collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu  className=\"unselectable\" theme=\"dark\" defaultSelectedKeys={['5']} defaultOpenKeys ={['sub1']}mode=\"inline\">\n\n              <Menu.Item className=\"unselectable\" key=\"1\">\n                <Link icon={<Icon type=\"desktop\" />} className=\"unselectable\"  to=\"/\" style={{color: 'white'}}><Icon className=\"unselectable\" type=\"desktop\" /><span style={{color: 'white'}}>Главная</span></Link>\n              </Menu.Item>\n              <SubMenu className=\"unselectable\"\n              key=\"sub1\"\n              title={\n                <span>\n                  <Icon type=\"user\" />\n                  <span>Пользователь</span>\n                </span>\n              }\n            > {this.props.user_name ?\n              <Menu.Item key=\"3\"><Link to=\"/profile/\"><div>{this.props.user_name}</div></Link></Menu.Item>\n            :\n              <Menu.Item key=\"3\"><Link to=\"/profile/\"><div>Профиль</div></Link></Menu.Item>\n            }\n              <Menu.Item key=\"4\"><Link to=\"/management/\">Управление</Link></Menu.Item>\n              {\n                this.props.isAuthenticated ?\n                \n                <Menu.Item key=\"5\">\n                <Popconfirm \n                title=\"Вы действительно хотите выйти?\"\n                onConfirm={this.props.logout}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n              >\n                  <div style={{width: '100%'}}>Выход</div> \n                  {/* Такое расположение. Типа div и ширина, чтобы триггер срабатывал при нажатии в любом месте кнопки */}\n                  </Popconfirm>\n                </Menu.Item>\n\n                :\n\n                <Menu.Item key=\"5\">\n                <Link to=\"/login/\">Вход</Link>\n                </Menu.Item>\n\n            }\n\n            </SubMenu>\n              <SubMenu\n                key=\"sub2\"\n                title={\n                  <span>\n                    <Icon type=\"appstore\" />\n                    <span>Приложения</span>\n                  </span>\n                }\n              >\n                <Menu.Item key=\"6\"><Link to=\"/combinator/\">Пересекатор</Link></Menu.Item>\n                <Menu.Item key=\"8\"><Link to=\"/metrics/\">Метрика</Link></Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"sub3\"\n                title={\n                  <span>\n                    <Icon type=\"interaction\" />\n                    <span>Краулер</span>\n                  </span>\n                }\n              >\n                <Menu.Item key=\"10\"><Link to=\"/crowler/categories/\">Категории</Link></Menu.Item>\n                <Menu.Item key=\"11\"><Link to=\"/crowler/filter-pages/\">ПФС</Link></Menu.Item>\n                <SubMenu\n                  key=\"sub4\"\n                  title={\n                    <span>\n                      <Icon type=\"fork\" />\n                      <span>Изменения</span>\n                    </span>\n                  }\n              >\n                  <Menu.Item key=\"15\"><Link to=\"/crowler/changes/categories/\">Категории</Link></Menu.Item>\n                  <Menu.Item key=\"16\"><Link to=\"/crowler/changes/filter-pages/\">ПФС</Link></Menu.Item>\n              </SubMenu>\n              </SubMenu>\n              <Menu.Item key=\"14\">\n                <Link to=\"/feedback/\">\n                  <Icon type=\"file\" />\n                  <span>Обратная связь</span>\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n          <Header className=\"header\" style={{height: '46px'}}>\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              defaultSelectedKeys={['2']}\n              style={{ lineHeight: '46px' }}\n            >\n              <Menu.Item key=\"1\"><Link to=\"/combinator/\">Пересекатор</Link></Menu.Item>\n              <Menu.Item key=\"2\"><Link to=\"/notifications/\"><Badge count={this.props.notificationsCount} dot>Уведомления</Badge></Link></Menu.Item>\n            </Menu>\n          </Header>\n            <Content id=\"selectable\" style={{ margin: '30px 30px' }}>\n              <div>{this.props.children}</div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Олег Котов. 2019</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n  }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      logout: () => dispatch(actions.authLogout()) \n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CustomLayout);","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\nimport * as notificationActions from './store/actions/notifications';\n\nimport CustomLayout from './containers/layout';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n    this.props.onGetNotificationsCount();\n    // this.props.isAuthenticated ? this.props.onGetNotificationsCount() :\n    // this.props.onNotificationsLogout() ;\n  }\n\n  render() {\n      return (\n        <div>\n          <Router>\n            <CustomLayout {...this.props}>\n              <BaseRouter />\n            </CustomLayout>\n          </Router>\n        </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.authReducer.token !== null,\n    user_name: state.authReducer.user_name,\n    user_id: state.authReducer.user_id,\n    notificationsCount: state.notificationsReducer.count\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    onGetNotificationsCount: (user_id) => dispatch(notificationActions.notificationsGetAction(user_id)),\n    onNotificationsLogout: () => dispatch(notificationActions.notificationsLogout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../utility';\n\n\n// ИЗНАЧАЛЬНОЕ СОСТОЯНИЕ\nconst initialState = {\n    token: null,\n    error: null, \n    loading: false,\n    confirmation_await: false,\n    success: false,\n    confirmation_success: false,\n    confirmation_error: null,\n    user_loading: false,\n    user_error: null,\n    user_groups: null,\n    user_email: null,\n    user_name: null,\n\n}\n\n// АУТЕНТИФИКАЦИЯ\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false,\n        success: true\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        success: false\n    });\n}\n\n// Подтверждение емейла\nconst emailConfirmation = (state, action) => {\n    return updateObject(state, {\n        confirmation_await: true,\n        confirmation_success: false,\n        confirmation_error: null\n    });\n}\nconst emailConfirmationSuccess = (state, action) => {\n    return updateObject(state, {\n        confirmation_await: false,\n        confirmation_success: true,\n        confirmation_error: null\n    });\n}\nconst emailConfirmationError = (state, action) => {\n    return updateObject(state, {\n        confirmation_await: false,\n        confirmation_success: false,\n        confirmation_error: action.confirmation_error\n    });\n}\n\n// ПОЛУЧЕНИЕ ПРОФИЛЯ ПОЛЬЗОВАТЕЛЯ\nconst userProfileGet = (state, action) => {\n    return updateObject(state, {\n        user_loading: true,\n        user_error: null\n    })\n}\n\nconst userProfileGetSuccess = (state, action) => {\n    return updateObject(state, {\n        user_groups: action.user_groups,\n        user_name: action.user_name,\n        user_email: action.user_email,\n        user_loading: false,\n        user_id: action.user_id,\n        user_error: null\n\n    })\n}\nconst userProfileGetFail = (state, action) => {\n    return updateObject(state, {\n        user_loading: false,\n        user_error: state.user_error\n\n    })\n}\n// ЛОГАУТ\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        success: false,\n        user_groups: null,\n        user_email: null,\n        user_name: null,\n        user_id: null,\n        user_loading: false,\n    });\n}\n\n\n// ТУТ ВСЁ ПОНЯТНО ЭТО REDUCER\nconst authReducer = (state=initialState, action) => {\n    switch (action.type) {\n        // СООТВЕТСТВЕННО АУТЕНТИФИКАЦИЯ\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        // Соответственно подтверждение емейла\n        case actionTypes.EMAIL_CONFIRMATION_REQUEST: return emailConfirmation(state, action);\n        case actionTypes.EMAIL_CONFIRMATION_REQUEST_SUCCESS: return emailConfirmationSuccess(state, action);\n        case actionTypes.EMAIL_CONFIRMATION_REQUEST_ERROR: return emailConfirmationError(state, action);\n        // Соответственно получение профиля пользователя\n        case actionTypes.USER_PROFILE_GET: return userProfileGet(state, action);\n        case actionTypes.USER_PROFILE_GET_SUCCESS: return userProfileGetSuccess(state, action);\n        case actionTypes.USER_PROFILE_GET_FAIL: return userProfileGetFail(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../utility';\n\n\n\nconst initialState = {\n    combinator_result: null,\n    combinator_error: null, \n    combinator_loading: false\n}\n\nconst combinatorStart = (state, action) => {\n    return updateObject(state, {\n        combinator_error: null,\n        combinator_loading: true\n    });\n}\nconst combinatorSuccess = (state, action) => {\n    return updateObject(state, {\n        combinator_result: action.result,\n        combinator_loading: false,\n        combinator_error: false\n    })\n}\n\nconst combinatorFail = (state, action) => {\n    return updateObject(state, {\n        combinator_error: action.combinator_error,\n        combinator_loading: false\n    });\n}\n\nconst combinatorClear = (state, action) => {\n    return updateObject(state, {\n        combinator_result: ''\n    })\n}\n\nconst combinatorReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.COMBINATOR_START: return combinatorStart(state, action);\n        case actionTypes.COMBINATOR_SUCCESS: return combinatorSuccess(state, action);\n        case actionTypes.COMBINATOR_FAIL: return combinatorFail(state, action);\n        case actionTypes.COMBINATOR_CLEAR: return combinatorClear(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default combinatorReducer;","import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../utility';\n\n\nconst initialState = {\n    count: null,\n    error: null,\n    loading: false\n}\n\nconst notificationsGetStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\nconst notificationsGetSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false,\n        count: action.count\n    });\n}\nconst notificationsGetFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\nconst notificationsLogout = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false,\n        count: 0\n    });\n}\n\nconst notificationsReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NOTIFICATIONS_GET: return notificationsGetStart(state, action);\n        case actionTypes.NOTIFICATIONS_GET_SUCCESS: return notificationsGetSuccess(state, action);\n        case actionTypes.NOTIFICATIONS_GET_FAIL: return notificationsGetFail(state, action);\n        case actionTypes.NOTIFICATIONS_LOGOUT: return notificationsLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default notificationsReducer;","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport combinatorReducer from './combinator'\nimport notificationsReducer from './notifications'\n\n\n\nexport default combineReducers({\n    authReducer,\n    combinatorReducer,\n    notificationsReducer\n\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware,} from 'redux';\nimport reducer from './store/reducers/index'\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n//import CustomLayout from './containers/layout';\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nconst composeEnhances =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n));\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n\n)\n\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}