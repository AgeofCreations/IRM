{"version":3,"sources":["consts.js","components/combinator/combinator-settings.js","containers/combinator/combinator-infields.js","store/actions/combinator.js","store/actionTypes.js","store/actions/notifications.js","store/actions/auth.js","containers/auth/Login.js","containers/auth/signup.js","components/mainpage.js","containers/auth/email_verification_sent.js","components/accessDenied/notLoggedIn.js","containers/auth/user_profile.js","containers/crowler/CategoryListView.js","containers/crowler/FilterpageListView.js","containers/crowler/CategoryRetrieveView.js","containers/crowler/FilterpageRetrieveView.js","containers/crowler/FilterpageChangesList.js","containers/crowler/CategoryChangesList.js","containers/crowler/FilterpageChangesView.js","containers/crowler/CategoryChangesView.js","containers/crowler/notifications/NotifyPopup.js","containers/crowler/notifications/NotificationsRead.js","containers/crowler/notifications/Subscriptions.js","components/auth/groups_management.js","components/auth/user_verification.js","components/auth/categoies_list.js","containers/auth/management.js","containers/feedback.js","containers/metrics/metrics_main.js","routes.js","containers/layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/combinator.js","store/reducers/notifications.js","store/reducers/index.js","index.js"],"names":["backendURL","Panel","Collapse","CombinatorSettings","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","combinateDoubles","deteleTabs","deleteSpaces","ignoreEmptyRows","handleCheckboxChange","bind","assertThisInitialized","e","target","value","type","checked","name","setState","defineProperty","react_default","a","createElement","collapse","bordered","defaultActiveKey","header","key","style","width","es_checkbox","onChange","marginLeft","React","Component","TextArea","Input","antIcon","icon","fontSize","spin","CombinatorForm","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","allLength","warning","onSubmit","col1","value1","col2","value2","col3","value3","col4","value4","col5","value5","col6","value6","col7","value7","col8","value8","copyText","document","getElementById","select","execCommand","handleColumnClear","clearFields","resetFields","onClear","saveTXT","FileSaver","require","blob","Blob","combinator_result","saveAs","saveCSV","length1","length2","length3","length4","length5","length6","length7","length8","target8","onChangeColumn","Modal","info","title","content","onOk","len","endsWith","slice","split","length","allLengthVal","_this2","getFieldDecorator","user_loading","indicator","token","className","es_button","position","right","top","onClick","combinator_settings","marginTop","es_form","placeholder","id","allowclear","height","resize","ref","el","todoTextElem","htmlType","size","popover","shape","disabled","autosize","minRows","maxRows","WrappedRCombinatorForm","Form","create","connect","user_error","authReducer","user_groups","combinatorReducer","combinator_loading","dispatch","user_name","axios","post","concat","first_column","second_column","third_column","fourth_column","fifth_column","sixth_column","seventh_column","eighth_column","account_owner","then","res","result4","data","result","toString","replace","combinatorSuccess","catch","actions","localStorage","getItem","defaults","headers","Content-Type","Authorization","notificationsGetStart","notificationsGetAction","user_id","get","notifications_count","count","notificationsGetSuccess","authSuccess","success","authFail","error","authLogout","removeItem","checkAuthTimeout","expirationTime","setTimeout","userProfileGetAction","username","email","groups","pk","user_email","userProfileGetSuccess","notificationsActions","userProfileGetFail","authLogin","password","expirationDate","Date","getTime","setItem","response","NormalLoginForm","validateFields","onAuth","errorMessage","es_alert","marginBottom","message","non_field_errors","loading","history","push","Item","rules","required","input","prefix","color","marginRight","react_router_dom","to","WrappedNormalLoginForm","RegistrationForm","confirmDirty","autoCompleteResult","confirm","signupSucessRedirect","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","hasFeedback","min","validator","Password","onBlur","WrappedRegistrationForm","password1","password2","console","Mainpage","Step","Steps","VerificationSent","steps","status","description","NotLoggedIn","loginNotification","notification","visibility","pStyle","lineHeight","display","DescriptionItem","_ref","UserProfile","visible","showDrawer","onClose","objectSpread","es_row","col","span","user_profile_DescriptionItem","divider","notLoggedIn","menu","categoryListView","pagination","searchCatID","searchCatURL","filters","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","padding","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","undefined","handleTableChange","searchText","sorter","pager","current","fetch","page","category_url","category_is_active","category_id","params","arguments","total","pageSize","results","columns","render","text","record","href","rel","filterMultiple","prevProps","back_top","breadcrumb","overlay","table","dataSource","FilterpageListView","searchPFSID","searchPFSURL","filterpage_url","filterpage_is_active","filterpage_id","CategoryRetrieveView","match","categoryID","_this3","descriptions","category_name","layout","label","category_lvl","category_path","category_full_name","category_title","category_description","category_seo_text","category_data_updated","category_canonical_url","category_parent_id","FilterpageRetrieveView","filterpageID","filterpage_name","filterpage_disabling_reason","filterpage_is_top","filterpage_full_name","filterpage_title","filterpage_description","filterpage_text","filterpage_data_updated","filterpage_canonical_url","filterpage_created_at","FilterpageChangesList","changed_fields","CategoryChangesList","FilterpageChangesView","filterpage_data_changed","old_filterpage_name","new_filterpage_name","old_filterpage_is_active","new_filterpage_is_active","old_filterpage_disabling_reason","new_filterpage_url","new_filterpage_disabling_reason","old_filterpage_is_top","new_filterpage_is_top","old_filterpage_url","old_filterpage_full_name","new_filterpage_full_name","old_filterpage_title","new_filterpage_title","old_filterpage_description","new_filterpage_description","old_filterpage_text","new_filterpage_text","old_filterpage_canonical_url","new_filterpage_canonical_url","old_filterpage_created_at","new_filterpage_created_at","CategoryChangesView","category_data_changed","old_category_name","new_category_name","old_category_is_active","new_category_is_active","old_category_url","new_category_url","old_category_full_name","new_category_full_name","old_category_title","new_category_title","old_category_description","new_category_description","old_category_seo_text","new_category_seo_text","old_category_text","old_category_canonical_url","new_category_canonical_url","old_category_parent_id","new_category_parent_id","NotifyPopup","action_id","row","read","cursor","delete","notification_id","action_is","action_subjects","rowKey","notificationsReducer","NotificationsRead","NotificationSubsciptions","selectedItems","options","handleChange","updateSubscriptions","responsibilities","filteredOptions","filter","o","includes","successMessage","es_select","mode","map","item","Option","GroupsManagement","groupsRadio","groupsSelected","groupsOptions","handleGroupsChange","groupsRadioChanger","handleGroupsUpdate","updating_user","groupsUsername","action","groups_to_update","updatingInfo","es_radio","Group","WrappedGroupsManagement","UserVerification","verificationRadio","handleVerification","verificating_user","verificationRadioChanger","verificationInfo","WrappedUserVerification","CategoriesUpdate","categoriesRadio","category","CategoriesUpdateForm","TabPane","Tabs","Management","managementInfo","tabs","tab","user_verification","groups_management","categoies_list","WrappedNormalManagement","Feedback","MonthPicker","DatePicker","MetricsMain","month","onChangeMonth","date","dateString","log","test","BaseRouter","react_router","exact","path","component","Combinator","Login","Signup","CategoryListView","SubMenu","Menu","Header","Layout","Content","Footer","Sider","CustomLayout","collapsed","closeDrawer","onCollapse","minHeight","collapsible","theme","defaultSelectedKeys","defaultOpenKeys","isAuthenticated","popconfirm","onConfirm","logout","okText","cancelText","badge","notificationsCount","dot","margin","children","textAlign","App","onTryAutoSignup","onGetNotificationsCount","containers_layout","routes","notificationActions","onNotificationsLogout","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","updateObject","oldObject","updatedProperties","initialState","confirmation_await","confirmation_success","confirmation_error","authStart","emailConfirmation","emailConfirmationSuccess","emailConfirmationError","userProfileGet","combinator_error","combinatorStart","combinatorFail","combinatorClear","notificationsGetFail","notificationsLogout","combineReducers","URL","process","origin","addEventListener","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","app","es","src_App_0","ReactDOM"],"mappings":"sXAEeA,EAFI,oCCGbC,EAAQC,IAASD,MA8CRE,cAzCb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,kBAAkB,EAClBC,YAAY,EACZC,cAAc,EACdC,iBAAiB,GAEnBX,EAAKY,qBAAuBZ,EAAKY,qBAAqBC,KAA1BZ,OAAAa,EAAA,EAAAb,CAAAD,IARXA,oFAWEe,GAEnB,IAAMC,EAASD,EAAEC,OACXC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DG,EAAOJ,EAAOI,KAClBjB,KAAKkB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GACGmB,EAAOH,qCAMZ,OACIM,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,UAAU,EAAMC,iBAAkB,CAAC,KAC3CL,EAAAC,EAAAC,cAAC7B,EAAD,CAAOiC,OAAO,0GAAqBC,IAAI,KACrCP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,QAClBT,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,mBAAmBD,QAAShB,KAAKI,MAAMC,iBAAkB0B,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAAjJ,+FACAZ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,aAAaD,QAAShB,KAAKI,MAAME,WAAYyB,SAAU/B,KAAKS,sBAA3F,qGACAW,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,eAAeD,QAAShB,KAAKI,MAAMG,aAAcwB,SAAU/B,KAAKS,sBAA/F,8HACAW,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,kBAAkBD,QAAShB,KAAKI,MAAMI,gBAAiBuB,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAA/I,iKAjCiBC,IAAMC,WCD/BC,EAAaC,IAAbD,SACFE,EAAUjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,UAAUa,MAAO,CAAEW,SAAU,IAAMC,MAAI,IAE5DC,cACF,SAAAA,EAAY7C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACf5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMJ,KAiDV8C,aAAe,SAAA9B,GACXA,EAAE+B,iBACF9C,EAAKD,MAAMgD,KAAKC,wBAAwB,SAACC,EAAKC,GAC1ClD,EAAKO,MAAM4C,UAAY,KACnBnD,EAAKoD,UAENH,GACDjD,EAAKD,MAAMsD,SACPrD,EAAKO,MAAM+C,KAAOJ,EAAOK,OAAS,IAClCvD,EAAKO,MAAMiD,KAAON,EAAOO,OAAS,IAClCzD,EAAKO,MAAMmD,KAAOR,EAAOS,OAAS,IAClC3D,EAAKO,MAAMqD,KAAOV,EAAOW,OAAS,IAClC7D,EAAKO,MAAMuD,KAAOZ,EAAOa,OAAS,IAClC/D,EAAKO,MAAMyD,KAAOd,EAAOe,OAAS,IAClCjE,EAAKO,MAAM2D,KAAOhB,EAAOiB,OAAS,IAClCnE,EAAKO,MAAM6D,KAAOlB,EAAOmB,OAAS,QAjE7BrE,EAwEnBsE,SAAW,SAAAvD,GACQwD,SAASC,eAAe,UAC9BC,SACTF,SAASG,YAAY,SA3EN1E,EA8EnBY,qBAAuB,SAAAG,GACnB,IAAMC,EAASD,EAAEC,OACXC,EAAwB,aAAhBD,EAAOE,KAAsBF,EAAOG,QAAUH,EAAOC,MAC7DG,EAAOJ,EAAOI,KAClBpB,EAAKqB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GACGmB,EAAOH,KAnFGjB,EAqHnB2E,kBAAoB,SAAA5D,GAChB,IAAMC,EAASD,EAAEC,OACa,WAAhBA,EAAOE,MAAyBF,EAAOC,MACxCD,EAAOI,MAxHLpB,EA4HnB4E,YAAc,WACV5E,EAAKD,MAAMgD,KAAK8B,cAChB7E,EAAKqB,SAAS,CAAC8B,UAAW,IAC1BnD,EAAKD,MAAM+E,WA/HI9E,EAkInB+E,QAAU,WACN,IAAIC,EAAYC,EAAQ,KACpBC,EAAO,IAAIC,KAAK,CAACnF,EAAKD,MAAMqF,mBAAoB,CAAClE,KAAM,6BAC3D8D,EAAUK,OAAOH,EAAM,0BArIRlF,EAuInBsF,QAAU,WACN,IAAIN,EAAYC,EAAQ,KACpBC,EAAO,IAAIC,KAAK,CAACnF,EAAKD,MAAMqF,mBAAoB,CAAClE,KAAM,6BAC3D8D,EAAUK,OAAOH,EAAM,0BAxIvBlF,EAAKO,MAAQ,CACX+C,MAAM,EACNE,MAAM,EACNE,MAAM,EACNE,MAAM,EACNE,MAAM,EACNE,MAAM,EACNE,MAAM,EACNE,MAAM,EACNjB,UAAW,EACXoC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,EACTC,QAAS,QAGX/F,EAAKY,qBAAuBZ,EAAKY,qBAAqBC,KAA1BZ,OAAAa,EAAA,EAAAb,CAAAD,IAC5BA,EAAKgG,eAAiBhG,EAAKgG,eAAenF,KAApBZ,OAAAa,EAAA,EAAAb,CAAAD,IAxBPA,sEA4BfiG,IAAMC,KAAK,CACTC,MAAO,8FACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,8QACAF,EAAAC,EAAAC,cAAA,iWACAF,EAAAC,EAAAC,cAAA,osBACAF,EAAAC,EAAAC,cAAA,mXACAF,EAAAC,EAAAC,cAAA,wWACAF,EAAAC,EAAAC,cAAA,6nCACAF,EAAAC,EAAAC,cAAA,w0BAEF4E,KAXS,iDAgBXJ,IAAM7C,QAAQ,CACZ+C,MAAO,oSACPC,QAAS,8sBAyCArF,GACX,IAAMC,EAASD,EAAEC,OAEbsF,EAAMtF,EAAOC,MAAMsF,SAAS,MAAQvF,EAAOC,MAAMuF,MAAM,GAAI,GAAKxF,EAAOC,MAEvEsE,EAA0B,YAAhBvE,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMgF,QAC1EC,EAA0B,YAAhBxE,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMiF,QAC1EC,EAA0B,YAAhBzE,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMkF,QAC1EC,EAA0B,YAAhB1E,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMmF,QAC1EC,EAA0B,YAAhB3E,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMoF,QAC1EC,EAA0B,YAAhB5E,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMqF,QAC1EC,EAA0B,YAAhB7E,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMsF,QAC1EC,EAA0B,YAAhB9E,EAAOI,KAAqBkF,EAAIG,MAAM,MAAMC,OAASvG,KAAKI,MAAMuF,QAExEa,EACFpB,EAAUC,EAAUC,EAAUC,EAAUC,EACxCC,EAAUC,EAAUC,EAEZ3F,KAAKkB,SAAS,CACV8B,UAAWwD,EACXpB,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,qCA6BpB,IAAAc,EAAAzG,KACG0G,EAAsB1G,KAAKJ,MAAMgD,KAAjC8D,kBACR,OACItF,EAAAC,EAAAC,cAAA,WAEAtB,KAAKJ,MAAM+G,aACXvF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMoE,UAAWvE,IACfrC,KAAKJ,MAAMiH,MACTzF,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,aACf1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,MAAOC,IAAK,OAAQC,QAASnH,KAAK+F,OACtG3E,EAAAC,EAAAC,cAAC8F,EAAD,CAAoBxF,MAAO,CAACyF,UAAW,QAASP,UAAU,iBAC1D1F,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOpE,SAAUlD,KAAK0C,cAClBtB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAM+C,KAAMpB,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,KAAMqF,UAAW,SAA1I,gDACAjG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,SAASE,KAAK,UAAUqB,KAAK,QAAQ6E,QAASnH,KAAKS,uBAChEW,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAMiD,KAAMtB,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAASqF,UAAW,SAA7I,gDACAjG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAMmD,KAAMxB,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAASqF,UAAW,SAA7I,gDACAjG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAMqD,KAAM1B,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAASqF,UAAW,SAA7I,iDAGPX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYC,GAAG,iBAAiBvG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAIhNX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYC,GAAG,SAASvG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAIxMX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYtG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAI5LX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYtG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAG7LjG,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAMuD,KAAM5B,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,KAAMqF,UAAW,SAA1I,gDACDjG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAMyD,KAAM9B,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAASqF,UAAW,SAA7I,gDACAjG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAM2D,KAAMhC,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAASqF,UAAW,SAA7I,gDACAjG,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAUf,KAAK,WAAWE,KAAK,OAAOD,QAAShB,KAAKI,MAAM6D,KAAMlC,SAAU/B,KAAKS,qBAAsBmB,MAAO,CAACI,WAAY,QAASqF,UAAW,SAA7I,iDAGHX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYtG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAI5LX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYtG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAG5LX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,+CAAYtG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,UAI5LX,EAAkB,SAAlBA,CACGtF,EAAAC,EAAAC,cAACa,EAAD,CAAUyF,IAAM,SAAAC,GAAE,OAAIpB,EAAKqB,aAAeD,GAAIN,YAAY,+CAAYtG,KAAK,UAAUc,SAAU/B,KAAK6F,eAAgB4B,WAAW,OAAO7F,MAAO,CAAE8F,OAAQ,QAAS7F,MAAO,MAAO8F,OAAQ,OAAQ3F,WAAY,OAAQqF,UAAW,QAAUrH,KAAKI,MAAMwF,UAIlPxE,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUgH,SAAS,SAASnG,MAAO,CAACyF,UAAW,OAAQK,OAAQ,OAAQ7F,MAAO,QAA3F,wFAAmH7B,KAAKI,MAAM4C,UAA9H,8BACA5B,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUiH,KAAK,QAAQb,QAASnH,KAAKmE,SAAUvC,MAAO,CAACoF,SAAU,SAAUhF,WAAY,MAAOH,MAAO,QAAlH,6HACAT,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACyF,UAAW,OAAQrF,WAAY,QAC5CZ,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAShC,QAAQ,0DACb7E,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUoG,QAASnH,KAAK4E,QAASsD,MAAM,SAAS5F,KAAK,WAAW0F,KAAM,aAFvF,IAIA5G,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAShC,QAAQ,0DACb7E,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUoG,QAASnH,KAAKmF,QAAS+C,MAAM,SAAS5F,KAAK,WAAW0F,KAAM,UAAWpG,MAAO,CAACI,WAAY,WAGtHZ,EAAAC,EAAAC,cAACa,EAAD,CAAUoF,YAAY,2GAAsBY,UAAU,EAAOX,GAAG,SAAS1G,MAAOd,KAAKI,MAAM4C,UAAY,IAAShD,KAAKJ,MAAMqF,kBAAoB,qSAAgEmD,SAAU,CAACC,QAAS,EAAGC,QAAS,GAAI1G,MAAO,CAACyF,UAAW,UACtQjG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,SAASiH,KAAK,QAAQb,QAASnH,KAAKyE,YAAa7C,MAAO,CAACoF,SAAU,SAAUhF,WAAY,MAAOH,MAAO,MAAOwF,UAAW,SAAtI,+EAORjG,EAAAC,EAAAC,cAAA,kPAlOaW,IAAMC,WAyO7BqG,EAAyBC,IAAKC,OAAO,CAAExH,KAAM,YAApBuH,CAAkC/F,GAmBlDiG,cAjBS,SAACtI,GACrB,MAAO,CACHuI,WAAYvI,EAAMwI,YAAYD,WAC9BE,YAAazI,EAAMwI,YAAYC,YAC/BhC,MAAQzG,EAAMwI,YAAY/B,MAC1BF,aAAcvG,EAAMwI,YAAYjC,aAChC1B,kBAAmB7E,EAAM0I,kBAAkB7D,kBAC3C8D,mBAAoB3I,EAAM0I,kBAAkBC,qBAGzB,SAAAC,GACvB,MAAO,CACH9F,SAAU,SAACE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQ2C,GAAjE,OAA2EmC,EC7N7D,SAAC5F,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQ+E,EAAWpC,GASxG,OARSzD,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC3BE,EAATA,GAAoC,GAC7B,SAAA8E,GACHA,EAnCG,CACHjI,KCQwB,qBD2BxBmI,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,gBAAwC,CACpC6J,aAAcjG,EACdkG,cAAehG,EACfiG,aAAc/F,EACdgG,cAAe9F,EACf+F,aAAc7F,EACd8F,aAAc5F,EACd6F,eAAgB3F,EAChB4F,cAAe1F,EACf2F,cAAeZ,IAElBa,KAAK,SAAAC,GACF,IAKIC,EALiBD,EAAIE,KAAKC,OAAOC,WAAWC,QAAQ,KAAM,IAAIA,QAAQ,KAAM,MAEtDA,QAAQ,QAAS,KACtBA,QAAQ,QAAS,KAChBA,QAAQ,QAAS,KACjBA,QAAQ,QAAS,KACvCpB,EAjDqB,SAACkB,GAC9B,MAAO,CACHnJ,KCG0B,qBDF1BmJ,OAAQA,GA8CKG,CAAkBL,MAG9BM,MAAM,SAAA3B,GACCA,EAAWoB,KACXf,EA9CL,CACHjI,KCHuB,kBDIvB4H,WA4CgCA,EAAWoB,IAAIE,UD2L+CM,CAAyBnH,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQE,EAAQ2C,KACvLlC,QAAS,kBAAMqE,ECnOZ,CACHjI,KCTwB,wBF+OjB2H,CAA4CH,YGjQrD1B,EAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,IACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,IAGzB,IAAMiE,EAAwB,WACjC,MAAM,CACF/J,KDYyB,sBCUpBgK,EAAyB,SAACC,GACnC,OAAO,SAAAhC,GACHA,EAAS8B,GACT5B,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,8BAAA4J,OAAoD4B,IAC9ClB,KAAM,SAAAC,GACH,IAAMmB,EAAsBnB,EAAIE,KAAKkB,MACrCnC,EAxBsB,SAACkC,GACpC,MAAO,CACHnK,KDOiC,4BCNjCoK,MAAOD,GAqBWE,CAAwBF,QC3BrCG,EAAc,SAAAxE,GACvB,MAAO,CACH9F,KFdoB,eEepB8F,MAAOA,EACPyE,SAAS,IAIJC,EAAW,SAAAC,GACpB,MAAO,CACHzK,KFrBiB,YEsBjByK,MAAOA,EACPF,SAAS,IAIJG,EAAa,WAGtB,OAFAjB,aAAakB,WAAW,SACxBlB,aAAakB,WAAW,kBACjB,CACH3K,KF9BmB,gBEwEd4K,EAAmB,SAAAC,GAC5B,OAAO,SAAA5C,GACH6C,WAAW,WACP7C,EAASyC,MACO,IAAjBG,KAmBJ,IAAME,EAAuB,SAACjF,GACjC,OAAO,SAAAmC,GACHA,EA7CG,CACHjI,KF3CwB,qBEwFX,MAAT8F,IACJqC,IAAMwB,SAASC,QAAU,CACrBC,eAAgB,mBAChBC,cAAe,SAAWhE,IAG9BqC,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,qBACCsK,KAAK,SAAAC,GACF,IAAMgC,EAAWhC,EAAIE,KAAK8B,SACpBC,EAAQjC,EAAIE,KAAK+B,MACjBC,EAASlC,EAAIE,KAAKgC,OAClBzE,EAAKuC,EAAIE,KAAKiC,GACpBlD,EArDyB,SAAC+C,EAAUC,EAAOC,EAAQzE,GAC3D,MAAO,CACHzG,KFhDgC,2BEiDhCkI,UAAW8C,EACXI,WAAYH,EACZnD,YAAaoD,EACbjB,QAASxD,GA+CI4E,CAAsBL,EAAUC,EAAOC,EAAQzE,IACxDwB,EAASqD,EAA4C7E,MAExD8C,MAAM,SAAA3B,GACCA,EAAWoB,KACXf,EAjDkB,SAACL,GAC/B,MAAO,CACH5H,KFxD6B,wBEyD7B4H,WAAYA,GA8CK2D,CAAmB3D,EAAWoB,IAAIE,WAM9CsC,EAAY,SAACR,EAAUS,GAChC,OAAO,SAAAxD,GACHA,EAvHG,CACHjI,KFRkB,eE+HlBmI,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,qBAA6C,CACzCuM,SAAUA,EACVS,SAAUA,IAGb1C,KAAK,SAAAC,GACF,IAAMlD,EAAQkD,EAAIE,KAAKtI,IACjB8K,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDnC,aAAaoC,QAAQ,QAAS/F,GAC9B2D,aAAaoC,QAAQ,iBAAkBH,GACvCzD,EAASqC,EAAYxE,IACrBmC,EAAS8C,EAAqBjF,IAC9BmC,EAAS2C,EAAiB,SAG7BrB,MAAM,SAAAkB,GACAA,EAAMqB,UACL7D,EAASuC,EAASC,EAAMqB,SAAS5C,WC3I3C5H,EAAUjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,UAAUa,MAAO,CAAEW,SAAU,IAAMC,MAAI,IAG5DsK,6MACJpK,aAAe,SAAA9B,GACbA,EAAE+B,iBACF9C,EAAKD,MAAMgD,KAAKmK,eAAe,SAACjK,EAAKC,GAC9BD,GACHjD,EAAKD,MAAMoN,OAAOjK,EAAOgJ,SAAUhJ,EAAOyJ,qFAQ9C,IAAIS,EAAe,KACfjN,KAAKJ,MAAM4L,QACXyB,EACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKJ,MAAM4L,MAAM6B,iBAAkBtM,KAAK,WALxF,IAQC2F,EAAsB1G,KAAKJ,MAAMgD,KAAjC8D,kBACR,OACItF,EAAAC,EAAAC,cAAA,WACK2L,EAGGjN,KAAKJ,MAAM0N,QAEXlM,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMoE,UAAWvE,IAEM,OAArBrC,KAAKJ,MAAMiH,MACb7G,KAAKJ,MAAM2N,QAAQC,KAAK,aAIxBpM,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMpE,SAAUlD,KAAK0C,aAAcoE,UAAU,cACzC1F,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACC/G,EAAkB,WAAY,CAC3BgH,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,6IADtC1G,CAGGtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC1CvG,YAAY,kGAIhBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACC/G,EAAkB,WAAY,CAC3BgH,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,sFADtC1G,CAGGtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC1C/M,KAAK,WACLwG,YAAY,2CAIhBnG,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACIrM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUgH,SAAS,SAASnG,MAAO,CAACmM,YAAa,SAA9D,kCADJ,qBAGI3M,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAASpM,MAAO,CAACmM,YAAa,QAASE,GAAG,YAA1C,4HA3DMhM,IAAMC,WAwE9BgM,EAAyB1F,IAAKC,OAAO,CAAExH,KAAM,gBAApBuH,CAAsCsE,GAiBtDpE,cAfS,SAACtI,GACrB,MAAO,CACHkN,QAASlN,EAAMwI,YAAY0E,QAC3BzG,MAAOzG,EAAMwI,YAAY/B,MACzB2E,MAAOpL,EAAMwI,YAAY4C,MACzBF,QAASlL,EAAMwI,YAAY0C,UAIR,SAAAtC,GACvB,MAAO,CACHgE,OAAQ,SAACjB,EAAUS,GAAX,OAAwBxD,EAASuB,EAAkBwB,EAAUS,OAI9D9D,CAA6CwF,GCzFpDC,6MACJ/N,MAAQ,CACNgO,cAAc,EACdC,mBAAoB,MAEtB3L,aAAe,SAAA9B,GACbA,EAAE+B,iBACF9C,EAAKD,MAAMgD,KAAKC,wBAAwB,SAACC,EAAKC,GACvCD,GACDjD,EAAKD,MAAMoN,OACPjK,EAAOgJ,SACPhJ,EAAOiJ,MACPjJ,EAAOyJ,SACPzJ,EAAOuL,SAGfzO,EAAK0O,4BAITC,kBAAoB,SAAA5N,GAClB,IAAME,EAAQF,EAAEC,OAAOC,MACvBjB,EAAKqB,SAAS,CAAEkN,aAAcvO,EAAKO,MAAMgO,gBAAkBtN,OAG7D2N,uBAAyB,SAACC,EAAM5N,EAAO6N,GACrC,IAAM/L,EAAO/C,EAAKD,MAAMgD,KACpB9B,GAASA,IAAU8B,EAAKgM,cAAc,YACxCD,EAAS,6GAETA,OAIJE,uBAAyB,SAACH,EAAM5N,EAAO6N,GACrC,IAAM/L,EAAO/C,EAAKD,MAAMgD,KACpB9B,GAASjB,EAAKO,MAAMgO,cACtBxL,EAAKmK,eAAe,CAAC,WAAY,CAAE+B,OAAO,IAE5CH,6EAGO,IACCjI,EAAsB1G,KAAKJ,MAAMgD,KAAjC8D,kBACJuG,EAAe,KAiBnB,OAhBIjN,KAAKJ,MAAM4L,QACTxL,KAAKJ,MAAM4L,MAAMO,SACrBkB,EACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKJ,MAAM4L,MAAMO,SAAUhL,KAAK,UAE1Ef,KAAKJ,MAAM4L,MAAMQ,MAC1BiB,EACE7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKJ,MAAM4L,MAAMQ,MAAOjL,KAAK,UAErEf,KAAKJ,MAAM4L,MAAMgB,WAC1BS,EACE7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKJ,MAAM4L,MAAMgB,SAAUzL,KAAK,YAMjFK,EAAAC,EAAAC,cAAA,WACG2L,GAEwB,IAAvBjN,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM2N,QAAQC,KAAK,8BAI5BpM,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMpE,SAAUlD,KAAK0C,cAEjBtB,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACC/G,EAAkB,WAAY,CAC3BgH,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,6IADtC1G,CAGGtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAClCvG,YAAY,kGAK1BnG,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACG/G,EAAkB,QAAS,CAC1BgH,MAAO,CACL,CACE3M,KAAM,QACNqM,QAAS,mKAEX,CACEO,UAAU,EACVP,QAAS,kLARd1G,CAWEtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CAAOC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBACpDvG,YAAY,YAGdnG,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,CAAWsB,aAAW,GACnBrI,EAAkB,WAAY,CAC7BgH,MAAO,CACL,CACEC,UAAU,EACVP,QAAS,oFAEX,CAAE4B,IAAK,EAAG5B,QAAS,mOACnB,CACE6B,UAAWjP,KAAK6O,0BARrBnI,CAWEtF,EAAAC,EAAAC,cAACsM,EAAA,EAAMsB,SAAP,CAAgBrB,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC7DvG,YAAY,2CAGdnG,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,CAAWsB,aAAW,GACnBrI,EAAkB,UAAW,CAC5BgH,MAAO,CACL,CACEC,UAAU,EACVP,QAAS,4GAEX,CACE6B,UAAWjP,KAAKyO,0BAPrB/H,CAUEtF,EAAAC,EAAAC,cAACsM,EAAA,EAAMsB,SAAP,CAAgBrB,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC7DvG,YAAY,uCAAS4H,OAAQnP,KAAKwO,sBAGpCpN,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACIrM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUgH,SAAS,SAASnG,MAAO,CAACmM,YAAa,SAA9D,gHADJ,qBAGI3M,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAASpM,MAAO,CAACmM,YAAa,QAASE,GAAG,WAA1C,8MArImBhM,IAAMC,WAkJjCkN,EAA0B5G,IAAKC,OAAO,CAAExH,KAAM,YAApBuH,CAAkC2F,GAiBnDzF,cAdS,SAACtI,GACrB,MAAO,CACHkN,QAASlN,EAAMwI,YAAY0E,QAC3B9B,MAAOpL,EAAMwI,YAAY4C,MACzBF,QAASlL,EAAMwI,YAAY0C,UAIR,SAAAtC,GACvB,MAAO,CACHgE,OAAQ,SAACjB,EAAUC,EAAOqD,EAAWC,GAA7B,OAA2CtG,EFjBjC,SAAC+C,EAAUC,EAAOqD,EAAWC,GACnD,OAAO,SAAAtG,GACHA,EAjJG,CACHjI,KFRkB,eEyJlBmI,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,4BAAoD,CAChDuM,SAAUA,EACVC,MAAOA,EACPqD,UAAWA,EACXC,UAAWA,IAEdxF,KAAK,SAAAC,GACF,IAAMlD,EAAQkD,EAAIE,KAAKtI,IACjB8K,EAAiB,IAAIC,MAAK,IAAIA,MAAOC,UAAY,MACvDnC,aAAaoC,QAAQ,QAAS/F,GAC9B2D,aAAaoC,QAAQ,iBAAkBH,GACvCzD,EAASqC,EAAYxE,IACrBmC,EAAS2C,EAAiB,SAG7BrB,MAAM,SAAAkB,GACAA,EAAMqB,WACL7D,EAASuC,EAASC,EAAMqB,SAAS5C,OACjCsF,QAAQ/D,MAAMA,EAAMqB,SAAS5C,UEJuBM,CAAmBwB,EAAUC,EAAOqD,EAAWC,OAIpG5G,CAA6C0G,GCzI7CI,mLA9BP,OACIpO,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,0BACLF,EAAAC,EAAAC,cAAA,wbACAF,EAAAC,EAAAC,cAAA,+VACAF,EAAAC,EAAAC,cAAA,0lBACAF,EAAAC,EAAAC,cAAA,6lBAEAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,ksBACAF,EAAAC,EAAAC,cAAA,uwBACAF,EAAAC,EAAAC,cAAA,oMACAF,EAAAC,EAAAC,cAAA,wDACAF,EAAAC,EAAAC,cAAA,sZACAF,EAAAC,EAAAC,cAAA,uOACAF,EAAAC,EAAAC,cAAA,kjBACAF,EAAAC,EAAAC,cAAA,0bACAF,EAAAC,EAAAC,cAAA,2aACAF,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,wlBACAF,EAAAC,EAAAC,cAAA,y3BACAF,EAAAC,EAAAC,cAAA,2dACAF,EAAAC,EAAAC,cAAA,4FACAF,EAAAC,EAAAC,cAAA,wmBAAqHF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,oBAAlI,2LAxBWL,IAAMC,qBCErBuN,GAASC,KAATD,KACFE,oLAEE,OACIvO,EAAAC,EAAAC,cAAA,YAE2B,IAAvBtB,KAAKJ,MAAM0L,QACXtL,KAAKJ,MAAM2N,QAAQC,KAAK,KAI5BpM,EAAAC,EAAAC,cAACsO,GAAA,EAAD,CAAOhO,MAAO,CAACC,MAAO,MAAOG,WAAY,QACrCZ,EAAAC,EAAAC,cAACmO,GAAD,CAAMI,OAAO,SAAS7J,MAAM,qEAAc8J,YAAY,yRACAxN,KAAMlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACvEK,EAAAC,EAAAC,cAACmO,GAAD,CAAMI,OAAO,WAAW7J,MAAM,0GAAqB8J,YAAY,idAC8BxN,KAAMlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,cAC9GK,EAAAC,EAAAC,cAACmO,GAAD,CAAMI,OAAO,OAAO7J,MAAM,kCAAS8J,YAAY,ybACqCxN,KAAMlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,qBAhBtFkB,IAAMC,WAqCtBwG,eAbS,SAACtI,GACrB,MAAO,CACHyG,MAAOzG,EAAMwI,YAAY/B,MACzByE,QAASlL,EAAMwI,YAAY0C,UAIR,SAAAtC,GACvB,MAAO,CACHgE,OAAQ,SAACjB,EAAUS,GAAX,OAAwBxD,EAASuB,EAAkBwB,EAAUS,OAI9D9D,CAA6CiH,uBCzCtDtN,GAAUjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,UAAUa,MAAO,CAAEW,SAAU,IAAMC,MAAI,IAgCnDuN,8MA7BXC,kBAAoB,WACS,OAArBnQ,EAAKD,MAAMiH,OACfoJ,KAAazE,MAAM,CACf4B,QAAS,qGACT0C,YACI,udACJlO,MAAO,CACHC,MAAO,IACPG,YAAY,OAGpBnC,EAAKD,MAAM2N,QAAQC,KAAK,YAExB3N,EAAKD,MAAM2N,QAAQC,KAAK,sFAKxB,OACIpM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACsO,WAAY,WAAYlQ,KAAKgQ,qBAC1C5O,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMoE,UAAWvE,KACjBjB,EAAAC,EAAAC,cAAA,2IAvBcW,IAAMC,yCCE1BiO,GAAS,CACb5N,SAAU,GACVuL,MAAO,mBACPsC,WAAY,OACZC,QAAS,QACTlD,aAAc,IAGVmD,GAAkB,SAAAC,GAAA,IAAGvK,EAAHuK,EAAGvK,MAAOC,EAAVsK,EAAUtK,QAAV,OACtB7E,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLW,SAAU,GACV6N,WAAY,OACZjD,aAAc,EACdW,MAAO,qBAGT1M,EAAAC,EAAAC,cAAA,KACEM,MAAO,CACLmM,YAAa,EACbsC,QAAS,eACTvC,MAAO,qBAGR9H,EAPH,KASCC,IAMCuK,8MACFpQ,MAAQ,CAAEqQ,SAAS,KAEnBC,WAAa,WACX7Q,EAAKqB,SAAS,CACZuP,SAAS,OAIbE,QAAU,WACR9Q,EAAKqB,SAAS,CACZuP,SAAS,6EAIT,OACIrP,EAAAC,EAAAC,cAAA,WAEItB,KAAKJ,MAAMiH,MACXzF,EAAAC,EAAAC,cAAA,WACiBF,EAAAC,EAAAC,cAAA,KAAGM,MAAK9B,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAOqQ,GAAP,CAAehD,aAAc,MAArC,uHACf/L,EAAAC,EAAAC,cAAA,KAAGM,MAAOuO,IAAV,6EACA/O,EAAAC,EAAAC,cAACuP,GAAA,EAAD,KACEzP,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CAAKC,KAAM,IACT3P,EAAAC,EAAAC,cAAC0P,GAAD,CAAiBhL,MAAM,qBAAMC,QAASjG,KAAKJ,MAAMqJ,YAAc,MAInE7H,EAAAC,EAAAC,cAACuP,GAAA,EAAD,KACEzP,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CAAKC,KAAM,IACT3P,EAAAC,EAAAC,cAAC0P,GAAD,CACEhL,MAAM,uCACNC,QAAQ,iDAId7E,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,MACA7P,EAAAC,EAAAC,cAAA,KAAGM,MAAOuO,IAAV,2DACA/O,EAAAC,EAAAC,cAACuP,GAAA,EAAD,KAEEzP,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CAAKC,KAAM,IACT3P,EAAAC,EAAAC,cAAC0P,GAAD,CAAiBhL,MAAM,kHAAwBC,QAASjG,KAAKJ,MAAMiJ,gBAGvEzH,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,MACA7P,EAAAC,EAAAC,cAAA,KAAGM,MAAOuO,IAAV,oDACA/O,EAAAC,EAAAC,cAACuP,GAAA,EAAD,KACEzP,EAAAC,EAAAC,cAACwP,GAAA,EAAD,CAAKC,KAAM,IACT3P,EAAAC,EAAAC,cAAC0P,GAAD,CAAiBhL,MAAM,QAAQC,QAASjG,KAAKJ,MAAMuM,gBAOzD/K,EAAAC,EAAAC,cAAC4P,GAAgBlR,KAAKJ,eAvDZqC,IAAMC,WAyEjBwG,eAVS,SAACtI,GACrB,MAAO,CACHuI,WAAYvI,EAAMwI,YAAYD,WAC9BE,YAAazI,EAAMwI,YAAYC,YAC/BhC,MAAOzG,EAAMwI,YAAY/B,MACzBF,aAAcvG,EAAMwI,YAAYjC,aAChCsC,UAAW7I,EAAMwI,YAAYK,UAC7BkD,WAAY/L,EAAMwI,YAAYuD,aAGvBzD,CAAyB8H,2CCzGlC3J,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACFqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAE9B,IAAMsK,GACJ/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,0BAAT,wBA4KSmD,8MAtKXhR,MAAQ,CACN6J,KAAM,GACNoH,WAAY,GACZ/D,SAAS,EACTgE,YAAa,GACbC,aAAc,GACdC,QAAS,MAcXC,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,gBAAiBC,EAApBtB,EAAoBsB,aAAcvD,EAAlCiC,EAAkCjC,QAASwD,EAA3CvB,EAA2CuB,aAA3C,OACd1Q,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEmQ,QAAS,IACrB3Q,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACEhG,IAAK,SAAAoK,GACHnS,EAAKoS,YAAcD,GAErBzK,YAAW,GAAA6B,OAAKsI,EAAL,2EACX5Q,MAAO+Q,EAAa,GACpB9P,SAAU,SAAAnB,GAAC,OAAIgR,EAAgBhR,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KACnEoR,aAAc,kBAAMrS,EAAKsS,aAAaN,EAAcvD,EAASoD,IAC7D9P,MAAO,CAAEC,MAAO,IAAKsL,aAAc,EAAGkD,QAAS,WAEjDjP,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEhG,KAAK,UACLoG,QAAS,kBAAMtH,EAAKsS,aAAaN,EAAcvD,EAASoD,IACxDpP,KAAK,SACL0F,KAAK,QACLpG,MAAO,CAAEC,MAAO,GAAIkM,YAAa,IALnC,UASA3M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQI,QAAS,kBAAMtH,EAAKuS,YAAYN,IAAe9J,KAAK,QAAQpG,MAAO,CAAEC,MAAO,KAApF,WAKJwQ,WAAY,SAAAC,GAAQ,OAClBlR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SAASa,MAAO,CAAEkM,MAAOwE,EAAW,eAAYC,UAI/DJ,aAAe,SAACN,EAAcvD,EAASoD,GACrCpD,IACkB,gBAAdoD,EACF7R,EAAKqB,SAAS,CAAEoQ,YAAaO,EAAa,KACnB,iBAAdH,GACT7R,EAAKqB,SAAS,CAAEqQ,aAAcM,EAAa,KAE7C,IAAIR,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,MAGpCY,YAAc,SAAAN,GACZA,IACAjS,EAAKqB,SAAS,CAAEuR,WAAY,QAI9BD,kBAAoB,SAACnB,EAAYG,EAASkB,GACxC,IAAMC,EAAK7S,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAC9BsB,EAAMC,QAAUvB,EAAWuB,QAC3B/S,EAAKqB,SAAS,CACZmQ,WAAYsB,IAEd9S,EAAKgT,MAAM,CACTC,KAAMzB,EAAWuB,QACjBG,aAAclT,EAAKO,MAAMmR,aACzByB,mBAAoBxB,EAAQwB,mBAAqBxB,EAAQwB,mBAAmB7I,WAAa,GACzF8I,YAAapT,EAAKO,MAAMkR,iBAI5BuB,MAAQ,WAAiB,IAAhBK,EAAgBC,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAP,GAChBtT,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,sBAA4C,CAC1C0T,OAAOpT,OAAA8Q,GAAA,EAAA9Q,CAAA,GACFoT,KAEJpJ,KAAK,SAAAC,GACN,IAAMsH,EAAUvR,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YACnCA,EAAW+B,MAAQrJ,EAAIE,KAAKkB,MAC5BkG,EAAWgC,SAAW,GACtBhC,EAAWrK,SAAW,OACtBnH,EAAKqB,SAAS,CACZoM,SAAS,EACTrD,KAAMF,EAAIE,KAAKqJ,QACfjC,oBAINkC,QAAU,CACR,CACEvN,MAAO,mDACP0L,UAAW,gBACX/P,IAAK,OACL6R,OAAQ,SAACC,EAAMC,GAAP,OAAkBtS,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,uBAAA7E,OAAyBsK,EAAOT,cAAgBQ,KAL5E3T,OAAA8Q,GAAA,EAAA9Q,CAAA,CAQNkG,MAAO,KACP0L,UAAW,cACX/P,IAAK,MACF9B,EAAK4R,qBAAqB,gBAXvB3R,OAAA8Q,GAAA,EAAA9Q,CAAA,CAcJkG,MAAO,MACP0L,UAAW,eACX/P,IAAK,eACL6R,OAAQ,SAAAC,GAAI,OAAIrS,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0BqK,GAAQG,IAAI,sBAAsB/S,OAAO,UAAW4S,KAClG5T,EAAK4R,qBAAqB,iBAK/B,CACEzL,MAAO,6CACP0L,UAAW,qBACX/P,IAAK,qBACL6P,QAAS,CAAC,CAAEiC,KAAM,eAAM3S,MAAO,KAAO,CAAE2S,KAAM,qBAAO3S,MAAO,MAC5D+S,gBAAgB,uFAxHpB7T,KAAK6S,mDAEaiB,GACd9T,KAAKJ,MAAMoL,UAAY8I,EAAU9I,SACrChL,KAAK6S,yCAyHL,OACEzR,EAAAC,EAAAC,cAAA,WAEEuF,GACFzF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,KACE5S,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IACxB/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,4DAGJ7M,EAAAC,EAAAC,cAAC4S,GAAA,EAAD,CACEX,QAASvT,KAAKuT,QACdY,WAAYnU,KAAKI,MAAM6J,KACvBoH,WAAYrR,KAAKI,MAAMiR,WACvB/D,QAAStN,KAAKI,MAAMkN,QACpBvL,SAAU/B,KAAKwS,qBAIjBpR,EAAAC,EAAAC,cAAA,kPAhKuBW,IAAMC,WCd/B2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACFqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAE9B,IAAMsK,GACJ/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,wBAAT,4DAuKSmG,8MAjKXhU,MAAQ,CACN6J,KAAM,GACNoH,WAAY,GACZ/D,SAAS,EACT+G,YAAa,GACbC,aAAc,GACd9C,QAAS,MAOTC,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,gBAAiBC,EAApBtB,EAAoBsB,aAAcvD,EAAlCiC,EAAkCjC,QAASwD,EAA3CvB,EAA2CuB,aAA3C,OACd1Q,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEmQ,QAAS,IACrB3Q,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACEhG,IAAK,SAAAoK,GACHnS,EAAKoS,YAAcD,GAErBzK,YAAW,GAAA6B,OAAKsI,EAAL,2EACX5Q,MAAO+Q,EAAa,GACpB9P,SAAU,SAAAnB,GAAC,OAAIgR,EAAgBhR,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KACnEoR,aAAc,kBAAMrS,EAAKsS,aAAaN,EAAcvD,EAASoD,IAC7D9P,MAAO,CAAEC,MAAO,IAAKsL,aAAc,EAAGkD,QAAS,WAEjDjP,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEhG,KAAK,UACLoG,QAAS,kBAAMtH,EAAKsS,aAAaN,EAAcvD,EAASoD,IACxDpP,KAAK,SACL0F,KAAK,QACLpG,MAAO,CAAEC,MAAO,GAAIkM,YAAa,IALnC,UASA3M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQI,QAAS,kBAAMtH,EAAKuS,YAAYN,IAAe9J,KAAK,QAAQpG,MAAO,CAAEC,MAAO,KAApF,WAKJwQ,WAAY,SAAAC,GAAQ,OAClBlR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SAASa,MAAO,CAAEkM,MAAOwE,EAAW,eAAYC,MAE7DiB,OAAQ,SAAAC,GAAI,OAAKA,OAInBtB,aAAe,SAACN,EAAcvD,EAASoD,GACrCpD,IACkB,kBAAdoD,EACF7R,EAAKqB,SAAS,CAAEmT,YAAaxC,EAAa,KACnB,mBAAdH,GACT7R,EAAKqB,SAAS,CAAEoT,aAAczC,EAAa,KAE7C,IAAIR,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,MAIpCY,YAAc,SAAAN,GACZA,IACAjS,EAAKqB,SAAS,CAAEuR,WAAY,QAGhCD,kBAAoB,SAACnB,EAAYG,GAC/B,IAAMmB,EAAK7S,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAC9BsB,EAAMC,QAAUvB,EAAWuB,QAC3B/S,EAAKqB,SAAS,CACZmQ,WAAYsB,IAEd9S,EAAKgT,MAAM,CACTC,KAAMzB,EAAWuB,QACjB2B,eAAgB1U,EAAKO,MAAMkU,aAC3BE,qBAAsBhD,EAAQgD,qBAAuBhD,EAAQgD,qBAAqBrK,WAAa,GAC/FsK,cAAe5U,EAAKO,MAAMiU,iBAI9BxB,MAAQ,WAAiB,IAAhBK,EAAgBC,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAP,GAChBtT,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,wBAA8C,CAC5C0T,OAAOpT,OAAA8Q,GAAA,EAAA9Q,CAAA,GACFoT,KAEJpJ,KAAK,SAAAC,GACN,IAAMsH,EAAUvR,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YACnCA,EAAW+B,MAAQrJ,EAAIE,KAAKkB,MAC5BkG,EAAWgC,SAAW,GACtBhC,EAAWrK,SAAW,OACtBnH,EAAKqB,SAAS,CACZoM,SAAS,EACTrD,KAAMF,EAAIE,KAAKqJ,QACfjC,oBAKNkC,QAAU,CACR,CACEvN,MAAO,mDACP0L,UAAW,kBACX/P,IAAK,OACL6R,OAAQ,SAACC,EAAMC,GAAP,OAAkBtS,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,yBAAA7E,OAA2BsK,EAAOe,gBAAkBhB,KALhF3T,OAAA8Q,GAAA,EAAA9Q,CAAA,CAQNkG,MAAO,KACP0L,UAAW,gBACX/P,IAAK,iBACF9B,EAAK4R,qBAAqB,kBAXvB3R,OAAA8Q,GAAA,EAAA9Q,CAAA,CAcJkG,MAAO,MACP0L,UAAW,iBACX/P,IAAK,iBACL6R,OAAQ,SAAAC,GAAI,OAAIrS,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0BqK,GAAQG,IAAI,sBAAsB/S,OAAO,UAAW4S,KAClG5T,EAAK4R,qBAAqB,mBAG/B,CACEzL,MAAO,6CACP0L,UAAW,uBACX/P,IAAK,uBACL6P,QAAS,CAAC,CAAEiC,KAAM,eAAM3S,MAAO,KAAO,CAAE2S,KAAM,qBAAO3S,MAAO,MAC5D+S,gBAAgB,uFAlHpB7T,KAAK6S,yCAwHL,OACEzR,EAAAC,EAAAC,cAAA,WAEIuF,GACAzF,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,KACI5S,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IAC1B/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,wBAGJ7M,EAAAC,EAAAC,cAAC4S,GAAA,EAAD,CACEX,QAASvT,KAAKuT,QACdY,WAAYnU,KAAKI,MAAM6J,KACvBoH,WAAYrR,KAAKI,MAAMiR,WACvB/D,QAAStN,KAAKI,MAAMkN,QACpBvL,SAAU/B,KAAKwS,qBAIjBpR,EAAAC,EAAAC,cAAA,kPA3JyBW,IAAMC,qBCdjC2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,SAiEjB6N,8MA7DXtU,MAAQ,CACJ6J,KAAM,sFAEU6J,GAAW,IAAArN,EAAAzG,KAC3B,GAAIA,KAAKJ,MAAM+U,MAAMzB,OAAO0B,aAAed,EAAUa,MAAMzB,OAAO0B,WAAY,CAC9E,IAAMA,EAAa5U,KAAKJ,MAAM+U,MAAMzB,OAAO0B,WAC3C1L,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,sBAAA4J,OAA4CwL,EAA5C,MACK9K,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACV+I,KAAMF,EAAIE,uDAKL,IAAA4K,EAAA7U,KACX4U,EAAa5U,KAAKJ,MAAM+U,MAAMzB,OAAO0B,WAC3C1L,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,sBAAA4J,OAA4CwL,EAA5C,MACK9K,KAAK,SAAAC,GACF8K,EAAK3T,SAAS,CACV+I,KAAMF,EAAIE,0CAKtB,OACI7I,EAAAC,EAAAC,cAAA,WAEAuF,GACAzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwT,GAAA,EAAD,CAAc9O,MAAOhG,KAAKI,MAAM6J,KAAK8K,cAAevT,UAAQ,EAACwT,OAAO,YAChE5T,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,MAAMjV,KAAKI,MAAM6J,KAAKgJ,aAC/C7R,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,iHAAuBjV,KAAKI,MAAM6J,KAAKiL,cAChE9T,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qGAA4D,IAAvCjV,KAAKI,MAAM6J,KAAK+I,mBAA2B,eAAO,sBAChG5R,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,4CAAcjV,KAAKI,MAAM6J,KAAKkL,eACvD/T,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,MAAMlE,KAAM,GAChC3P,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0BpJ,KAAKI,MAAM6J,KAAK8I,aAA1C,KAA4Da,IAAI,sBAAsB/S,OAAO,UACpGb,KAAKI,MAAM6J,KAAK8I,eAGrB3R,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,YAAYlE,KAAM,GACtC/Q,KAAKI,MAAM6J,KAAKmL,oBAErBhU,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,SAASjV,KAAKI,MAAM6J,KAAKoL,gBAClDjU,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,cAAclE,KAAM,GAAI/Q,KAAKI,MAAM6J,KAAKqL,sBACjElU,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qCAAYlE,KAAM,GAAI/Q,KAAKI,MAAM6J,KAAKsL,mBAC/DnU,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,wFAAkBlE,KAAO,GAAI/Q,KAAKI,MAAM6J,KAAKuL,uBACtEpU,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,gBAAgBlE,KAAO,GAAI/Q,KAAKI,MAAM6J,KAAKwL,wBACpErU,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,kIAAyBlE,KAAO,GACd,IAAvC/Q,KAAKI,MAAM6J,KAAKyL,mBAA2BtU,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,uBAAA7E,OAAyBpJ,KAAKI,MAAM6J,KAAKyL,mBAAzC,MAClD1V,KAAKI,MAAM6J,KAAKyL,oBACP,iDAKlBtU,EAAAC,EAAAC,cAAA,kPAxDmBW,IAAMC,WCPnC2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAEhC,IAAMsK,GACF/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,wBAAT,4DAmEO0H,8MA7DXvV,MAAQ,CACJ6J,KAAM,uFAEU,IAAAxD,EAAAzG,KACV4V,EAAe5V,KAAKJ,MAAM+U,MAAMzB,OAAO0C,aAC7C1M,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,wBAAA4J,OAA8CwM,IACzC9L,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACV+I,KAAMF,EAAIE,0CAKtB,OACI7I,EAAAC,EAAAC,cAAA,WAEAuF,GACAzF,EAAAC,EAAAC,cAAA,WACKF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACG3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IACtB/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,0BAAT,uBAEJ7M,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAkBzN,KAAKI,MAAM6J,KAAKwK,gBAE1CrT,EAAAC,EAAAC,cAACwT,GAAA,EAAD,CAAc9O,MAAOhG,KAAKI,MAAM6J,KAAK4L,gBAAiBrU,UAAQ,EAACwT,OAAO,YAClE5T,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,MAAMjV,KAAKI,MAAM6J,KAAKwK,eAC/CrT,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,iEAAwD,IAAzCjV,KAAKI,MAAM6J,KAAKuK,qBAA6B,eAAO,sBAC5FpT,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2GAAsBjV,KAAKI,MAAM6J,KAAK6L,6BAC/D1U,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qIACc,IAAtCjV,KAAKI,MAAM6J,KAAK8L,kBAA6B,eAAO,sBACrD3U,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,MAAMlE,KAAM,GAChC3P,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0BpJ,KAAKI,MAAM6J,KAAKsK,eAA1C,KAA8DX,IAAI,sBAAsB/S,OAAO,UACtGb,KAAKI,MAAM6J,KAAKsK,iBAGrBnT,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,YAAYlE,KAAM,GACtC/Q,KAAKI,MAAM6J,KAAK+L,sBAErB5U,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,SAASjV,KAAKI,MAAM6J,KAAKgM,kBAClD7U,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,cAAclE,KAAM,GAAI/Q,KAAKI,MAAM6J,KAAKiM,wBACjE9U,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qCAAYlE,KAAM,GAAI/Q,KAAKI,MAAM6J,KAAKkM,iBAC/D/U,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,wFAAkBlE,KAAO,GAAI/Q,KAAKI,MAAM6J,KAAKmM,yBACtEhV,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,gBAAgBlE,KAAO,GAAI/Q,KAAKI,MAAM6J,KAAKoM,0BACpEjV,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,oGAAoBlE,KAAO,GAC/C/Q,KAAKI,MAAM6J,KAAKqM,yBAKzBlV,EAAAC,EAAAC,cAAA,kPAvDqBW,IAAMC,WCbrC2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACFqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAE9B,IAAMsK,GACJ/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gCAAT,mHAmLSsI,8MA7KXnW,MAAQ,CACN6J,KAAM,GACNoH,WAAY,GACZ/D,SAAS,EACTmF,WAAY,GACZjB,QAAS,MAOTC,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,gBAAiBC,EAApBtB,EAAoBsB,aAAcvD,EAAlCiC,EAAkCjC,QAASwD,EAA3CvB,EAA2CuB,aAA3C,OACd1Q,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEmQ,QAAS,IACrB3Q,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACEhG,IAAK,SAAAoK,GACHnS,EAAKoS,YAAcD,GAErBzK,YAAW,UAAA6B,OAAYsI,GACvB5Q,MAAO+Q,EAAa,GACpB9P,SAAU,SAAAnB,GAAC,OAAIgR,EAAgBhR,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KACnEoR,aAAc,kBAAMrS,EAAKsS,aAAaN,EAAcvD,IACpD1M,MAAO,CAAEC,MAAO,IAAKsL,aAAc,EAAGkD,QAAS,WAEjDjP,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEhG,KAAK,UACLoG,QAAS,kBAAMtH,EAAKsS,aAAaN,EAAcvD,IAC/ChM,KAAK,SACL0F,KAAK,QACLpG,MAAO,CAAEC,MAAO,GAAIkM,YAAa,IALnC,UASA3M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQI,QAAS,kBAAMtH,EAAKuS,YAAYN,IAAe9J,KAAK,QAAQpG,MAAO,CAAEC,MAAO,KAApF,WAKJwQ,WAAY,SAAAC,GAAQ,OAClBlR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SAASa,MAAO,CAAEkM,MAAOwE,EAAW,eAAYC,MAE7DiB,OAAQ,SAAAC,GAAI,OAAKA,OAInBtB,aAAe,SAACN,EAAcvD,GAC5BA,IACAzO,EAAKqB,SAAS,CAAEuR,WAAYZ,EAAa,KACzC,IAAIR,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,MAGpCY,YAAc,SAAAN,GACZA,IACAjS,EAAKqB,SAAS,CAAEuR,WAAY,QAGhCD,kBAAoB,SAACnB,EAAYG,EAASkB,GACxC,IAAMC,EAAK7S,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAC9BsB,EAAMC,QAAUvB,EAAWuB,QAC3B/S,EAAKqB,SAAS,CACZmQ,WAAYsB,IAEd9S,EAAKgT,MAAM,CACTC,KAAMzB,EAAWuB,QACjB4D,eAAgBhF,EAAQgF,eAAiBhF,EAAQgF,eAAerM,WAAa,GAC7EsK,cAAe5U,EAAKO,MAAMqS,gBAI9BI,MAAQ,WAAiB,IAAhBK,EAAgBC,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAP,GAChBtT,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,gCAAsD,CACpD0T,OAAOpT,OAAA8Q,GAAA,EAAA9Q,CAAA,GACFoT,KAEJpJ,KAAK,SAAAC,GACN,IAAMsH,EAAUvR,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAGnCA,EAAW+B,MAAQrJ,EAAIE,KAAKkB,MAC5BkG,EAAWgC,SAAW,GACtBhC,EAAWrK,SAAW,OACtBnH,EAAKqB,SAAS,CACZoM,SAAS,EACTrD,KAAMF,EAAIE,KAAKqJ,QACfjC,oBAINkC,QAAU,CACR,CACEvN,MAAO,uHACP0L,UAAW,sBACX/P,IAAK,OACL6R,OAAQ,SAACC,EAAMC,GAAP,OAAkBtS,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,iCAAA7E,OAAmCsK,EAAOlM,KAAOiM,KAL7E3T,OAAA8Q,GAAA,EAAA9Q,CAAA,CAQNkG,MAAO,KACP0L,UAAW,gBACX/P,IAAK,iBACF9B,EAAK4R,qBAAqB,kBAE/B,CACEzL,MAAO,wFACP0L,UAAW,iBACX/P,IAAK,iBACL6R,OAAQ,SAACC,GAAD,OAAUrS,EAAAC,EAAAC,cAAA,YAChBmS,EACCrJ,QAAQ,8BAA8B,6GACtCA,QAAQ,kCAAkC,gHAC1CA,QAAQ,uBAAwB,0CAChCA,QAAQ,iBAAiB,SACzBA,QAAQ,mBAAmB,WAC3BA,QAAQ,yBAAyB,iBACjCA,QAAQ,uBAAuB,SAC/BA,QAAQ,kBAAkB,wCAC1BA,QAAQ,kBAAkB,sDAC1BA,QAAQ,2BAA2B,mBACnCA,QAAQ,oBAAoB,iFAE/BoH,QAAS,CACP,CAAEiC,KAAM,4DAAgB3S,MAAO,aAC/B,CAAE2S,KAAM,+HAA4B3S,MAAO,+BAC3C,CAAE2S,KAAM,iIAA8B3S,MAAO,mCAC7C,CAAE2S,KAAM,2BAAa3S,MAAO,kBAC5B,CAAE2S,KAAM,6BAAe3S,MAAO,oBAC9B,CAAE2S,KAAM,mCAAqB3S,MAAO,0BACpC,CAAE2S,KAAM,0BAAY3S,MAAO,wBAC3B,CAAE2S,KAAM,0DAAmB3S,MAAO,mBAClC,CAAE2S,KAAM,wEAAkB3S,MAAO,mBACjC,CAAE2S,KAAM,qCAAuB3S,MAAO,4BACtC,CAAE2S,KAAM,iGAAuB3S,MAAO,sBAGxC+S,gBAAgB,uFAhIlB7T,KAAK6S,yCAqIL,OACEzR,EAAAC,EAAAC,cAAA,WAEIuF,GACAzF,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IAC1B/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,+EAGJ7M,EAAAC,EAAAC,cAAC4S,GAAA,EAAD,CACEX,QAASvT,KAAKuT,QACdY,WAAYnU,KAAKI,MAAM6J,KACvBoH,WAAYrR,KAAKI,MAAMiR,WACvB/D,QAAStN,KAAKI,MAAMkN,QACpBvL,SAAU/B,KAAKwS,qBAIjBpR,EAAAC,EAAAC,cAAA,kPAvK4BW,IAAMC,WCdpC2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACFqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAE9B,IAAMxE,GAAUjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,UAAUa,MAAO,CAAEW,SAAU,IAAMC,MAAI,IAC5D2O,GACJ/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,+EA2LSwI,8MArLXrW,MAAQ,CACN6J,KAAM,GACNoH,WAAY,GACZ/D,SAAS,EACTmF,WAAY,GACZjB,QAAS,MAaXC,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,gBAAiBC,EAApBtB,EAAoBsB,aAAcvD,EAAlCiC,EAAkCjC,QAASwD,EAA3CvB,EAA2CuB,aAA3C,OACd1Q,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEmQ,QAAS,IACrB3Q,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACEhG,IAAK,SAAAoK,GACHnS,EAAKoS,YAAcD,GAErBzK,YAAW,UAAA6B,OAAYsI,GACvB5Q,MAAO+Q,EAAa,GACpB9P,SAAU,SAAAnB,GAAC,OAAIgR,EAAgBhR,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KACnEoR,aAAc,kBAAMrS,EAAKsS,aAAaN,EAAcvD,IACpD1M,MAAO,CAAEC,MAAO,IAAKsL,aAAc,EAAGkD,QAAS,WAEjDjP,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEhG,KAAK,UACLoG,QAAS,kBAAMtH,EAAKsS,aAAaN,EAAcvD,IAC/ChM,KAAK,SACL0F,KAAK,QACLpG,MAAO,CAAEC,MAAO,GAAIkM,YAAa,IALnC,UASA3M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQI,QAAS,kBAAMtH,EAAKuS,YAAYN,IAAe9J,KAAK,QAAQpG,MAAO,CAAEC,MAAO,KAApF,WAKJwQ,WAAY,SAAAC,GAAQ,OAClBlR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SAASa,MAAO,CAAEkM,MAAOwE,EAAW,eAAYC,MAE7DiB,OAAQ,SAAAC,GAAI,OAAKA,OAInBtB,aAAe,SAACN,EAAcvD,GAC5BA,IACAzO,EAAKqB,SAAS,CAAEuR,WAAYZ,EAAa,KACzC,IAAIR,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,MAGpCY,YAAc,SAAAN,GACZA,IACAjS,EAAKqB,SAAS,CAAEuR,WAAY,QAG9BD,kBAAoB,SAACnB,EAAYG,GAC/B,IAAMmB,EAAK7S,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAC9BsB,EAAMC,QAAUvB,EAAWuB,QAC3B/S,EAAKqB,SAAS,CACZmQ,WAAYsB,IAEd9S,EAAKgT,MAAM,CACTC,KAAMzB,EAAWuB,QACjB4D,eAAgBhF,EAAQgF,eAAiBhF,EAAQgF,eAAerM,WAAa,GAC7E8I,YAAapT,EAAKO,MAAMqS,gBAI5BI,MAAQ,WAAiB,IAAhBK,EAAgBC,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAP,GAChBtT,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,8BAAoD,CAClD0T,OAAOpT,OAAA8Q,GAAA,EAAA9Q,CAAA,GACFoT,KAEJpJ,KAAK,SAAAC,GACN,IAAMsH,EAAUvR,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAGnCA,EAAW+B,MAAQrJ,EAAIE,KAAKkB,MAC5BkG,EAAWgC,SAAW,GACtBhC,EAAWrK,SAAW,OACtBnH,EAAKqB,SAAS,CACZoM,SAAS,EACTrD,KAAMF,EAAIE,KAAKqJ,QACfjC,oBAKNkC,QAAU,CACR,CACEvN,MAAO,uHACP0L,UAAW,oBACX/P,IAAK,OACL6R,OAAQ,SAACC,EAAMC,GAAP,OAAkBtS,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,+BAAA7E,OAAiCsK,EAAOlM,KAAOiM,KAL3E3T,OAAA8Q,GAAA,EAAA9Q,CAAA,CAQNkG,MAAO,KACP0L,UAAW,cACX/P,IAAK,MACF9B,EAAK4R,qBAAqB,gBAE/B,CACEzL,MAAO,wFACP0L,UAAW,iBACX/P,IAAK,iBACL6R,OAAQ,SAACC,GAAD,OAAUrS,EAAAC,EAAAC,cAAA,YAChBmS,EACCrJ,QAAQ,eAAe,gDACvBA,QAAQ,qBAAsB,0CAC9BA,QAAQ,eAAgB,SACxBA,QAAQ,iBAAiB,WACzBA,QAAQ,uBAAuB,iBAC/BA,QAAQ,qBAAqB,SAC7BA,QAAQ,oBAAoB,wCAC5BA,QAAQ,gBAAgB,sDACxBA,QAAQ,yBAAyB,mBACjCA,QAAQ,gBAAgB,8FAE3BoH,QAAS,CACP,CAAEiC,KAAM,gGAAsB3S,MAAO,aACrC,CAAE2S,KAAM,sGAAuB3S,MAAO,gBACtC,CAAE2S,KAAM,+DAAmB3S,MAAO,gBAClC,CAAE2S,KAAM,iEAAqB3S,MAAO,kBACpC,CAAE2S,KAAM,uEAA2B3S,MAAO,wBAC1C,CAAE2S,KAAM,8DAAkB3S,MAAO,sBACjC,CAAE2S,KAAM,8FAAyB3S,MAAO,qBACxC,CAAE2S,KAAM,4GAAwB3S,MAAO,iBACvC,CAAE2S,KAAM,yEAA6B3S,MAAO,0BAC5C,CAAE2S,KAAM,kJAAgC3S,MAAO,kBAGjD+S,gBAAgB,sFAvIAC,GACd9T,KAAKJ,MAAMoL,UAAY8I,EAAU9I,SACrChL,KAAK6S,oDAKL7S,KAAK6S,yCAuIL,OACEzR,EAAAC,EAAAC,cAAA,WAEItB,KAAKJ,MAAM+G,aACXvF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMoE,UAAWvE,KAAcwE,GAC/BzF,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IAC1B/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gCAAT,mHAGJ7M,EAAAC,EAAAC,cAAC4S,GAAA,EAAD,CACEX,QAASvT,KAAKuT,QACdY,WAAYnU,KAAKI,MAAM6J,KACvBoH,WAAYrR,KAAKI,MAAMiR,WACvB/D,QAAStN,KAAKI,MAAMkN,QACpBvL,SAAU/B,KAAKwS,qBAIjBpR,EAAAC,EAAAC,cAAA,kPA/K0BW,IAAMC,WCflC2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAEhC,IAAMsK,GACF/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gCAAT,2DAEF7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,wBAwKOyI,8MAnKXtW,MAAQ,CACJ6J,KAAM,sFAEU6J,GAAW,IAAArN,EAAAzG,KAC3B,GAAIA,KAAKJ,MAAM+U,MAAMzB,OAAO0B,aAAed,EAAUa,MAAMzB,OAAO0B,WAAY,CAC9E,IAAMgB,EAAe5V,KAAKJ,MAAM+U,MAAMzB,OAAO0C,aAC7C1M,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,gCAAA4J,OAAsDwM,EAAtD,MACK9L,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACV+I,KAAMF,EAAIE,sDAKN,IAAA4K,EAAA7U,KACV4V,EAAe5V,KAAKJ,MAAM+U,MAAMzB,OAAO0C,aAC7C1M,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,gCAAA4J,OAAsDwM,EAAtD,MACK9L,KAAK,SAAAC,GACF8K,EAAK3T,SAAS,CACV+I,KAAMF,EAAIE,0CAKtB,IAAI4C,EAAW7M,KAAKI,MAAM6J,KAC1B,OACI7I,EAAAC,EAAAC,cAAA,WAEAuF,GACAzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IAC1B/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,2DAEA7M,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAkBZ,EAAS4H,gBAE/BrT,EAAAC,EAAAC,cAACwT,GAAA,EAAD,CAAc9O,MAAO6G,EAAS4H,cAAejT,UAAQ,EAACwT,OAAO,YACzD5T,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,kHAAuBlE,KAAM,GACjDlE,EAAS8J,wBAA0B9J,EAAS8J,wBAAwBvM,QAAQ,IAAK,KAAO,IAE7FhJ,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,4EAAgBlE,KAAO,GAAIlE,EAAS2J,gBAE7DpV,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,wFAAiBlE,KAAM,GAC3ClE,EAAS+J,qBAEdxV,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,kFAAgBlE,KAAM,GAC1ClE,EAASgK,sBAAwBhK,EAAS+J,oBAC3CxV,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASgK,oBAAqB9V,KAAK,UACnD8L,EAASgK,qBAIbzV,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,uGAAuBlE,KAAM,GAA0C,IAAtClE,EAASiK,yBAAiC,eAAO,sBAC3G1V,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,iGAAsBlE,KAAM,GAChDlE,EAASkK,2BAA6BlK,EAASiK,yBAChD1V,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAA+C,IAAtCP,EAASkK,yBAAiC,eAAO,qBAAOhW,KAAK,UACvC,IAAtC8L,EAASkK,yBAAiC,eAAO,sBAGrD3V,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,+IAA2BlE,KAAM,QACRwB,IAA7C1F,EAASmK,gCAAgDnK,EAASmK,gCACnE,sEAEJ5V,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,yIAA0BlE,KAAM,QACpBwB,IAAhC1F,EAASoK,mBACNpK,EAASqK,kCAAoCrK,EAASmK,gCACtD5V,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASqK,gCAAiCnW,KAAK,UAC/D8L,EAASqK,gCACb,sEAGJ9V,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,0KAAkClE,KAAM,IACzB,IAAnClE,EAASsK,sBAAiC,eAAO,sBAEtD/V,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,oKAAiClE,KAAM,GAC3DlE,EAASuK,wBAA0BvK,EAASsK,sBAC7C/V,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,SAA4C,IAAnCP,EAASuK,sBAAiC,eAAO,qBAAOrW,KAAK,WAC1C,IAAnC8L,EAASuK,sBAAiC,eAAO,sBAGrDhW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2CAAalE,KAAM,QACPwB,IAAhC1F,EAASwK,mBACVjW,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAASwK,mBAAnC,KAA2DzD,IAAI,sBAAsB/S,OAAO,UAClGgM,EAASwK,oBAGV,sEAEJjW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qCAAYlE,KAAM,QACNwB,IAAhC1F,EAASoK,mBACV7V,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAASoK,mBAAnC,KAA2DrD,IAAI,sBAAsB/S,OAAO,UAC9FgM,EAASoK,qBAAuBpK,EAASwK,mBAC1CjW,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASoK,mBAAoBlW,KAAK,UAClD8L,EAASoK,oBAGb,wCAGJ7V,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,iDAAmBlE,KAAM,GAC7ClE,EAASyK,0BAEdlW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2CAAkBlE,KAAM,GAC5ClE,EAAS0K,2BAA6B1K,EAASyK,yBAChDlW,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAAS0K,yBAA0BxW,KAAK,UACxD8L,EAAS0K,0BAGbnW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,6CAAelE,KAAM,GAAIlE,EAAS2K,sBAC3DpW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,uCAAclE,KAAM,GACxClE,EAAS4K,uBAAyB5K,EAAS2K,qBAC5CpW,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAAS4K,qBAAsB1W,KAAK,UACpD8L,EAAS4K,sBAGbrW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,mDAAqBlE,KAAM,GAAIlE,EAAS6K,4BACjEtW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,6CAAoBlE,KAAM,GAC9ClE,EAAS8K,6BAA+B9K,EAAS6K,2BAClDtW,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAAS8K,2BAA4B5W,KAAK,UAC1D8L,EAAS8K,4BAGbvW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,0EAAmBlE,KAAM,GAAIlE,EAAS+K,qBAC/DxW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,oEAAkBlE,KAAM,GAC5ClE,EAASgL,sBAAwBhL,EAAS+K,oBAC3CxW,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASgL,oBAAqB9W,KAAK,UACnD8L,EAASgL,qBAGbzW,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qDAAuBlE,KAAO,GAClD3P,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAASiL,6BAAnC,KAAqElE,IAAI,sBAAsB/S,OAAO,UACzGgM,EAASiL,+BAGlB1W,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,+CAAsBlE,KAAO,GACjD3P,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAASkL,6BAAnC,KAAqEnE,IAAI,sBAAsB/S,OAAO,UACzGgM,EAASkL,+BAAiClL,EAASiL,6BACpD1W,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASkL,6BAA8BhX,KAAK,UAAmB8L,EAASkL,+BAIhG3W,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2IAA6BlE,KAAO,GACxDlE,EAASmL,2BAEd5W,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qIAA4BlE,KAAO,GACvDlE,EAASoL,4BAA8BpL,EAASmL,0BACjD5W,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASoL,0BAA2BlX,KAAK,UAAmB8L,EAASoL,6BAKjG7W,EAAAC,EAAAC,cAAA,kPA7JwBW,IAAMC,WCjBpC2E,GAAQ2D,aAAaC,QAAQ,SAC7BpI,GAAUjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,UAAUa,MAAO,CAAEW,SAAU,IAAMC,MAAI,IACrD,MAATqE,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAEhC,IAAMsK,GACF/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gCAAT,2DAEF7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,wBAsJOiK,8MAjJX9X,MAAQ,CACJ6J,KAAM,sFAEU6J,GAAW,IAAArN,EAAAzG,KAC3B,GAAIA,KAAKJ,MAAM+U,MAAMzB,OAAO0B,aAAed,EAAUa,MAAMzB,OAAO0B,WAAY,CAC9E,IAAMA,EAAa5U,KAAKJ,MAAM+U,MAAMzB,OAAO0B,WAC3C1L,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,8BAAA4J,OAAoDwL,EAApD,MACK9K,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACV+I,KAAMF,EAAIE,sDAKN,IAAA4K,EAAA7U,KACV4U,EAAa5U,KAAKJ,MAAM+U,MAAMzB,OAAO0B,WAC3C1L,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,8BAAA4J,OAAoDwL,EAApD,MACK9K,KAAK,SAAAC,GACF8K,EAAK3T,SAAS,CACV+I,KAAMF,EAAIE,0CAKtB,IAAI4C,EAAW7M,KAAKI,MAAM6J,KAC1B,OACI7I,EAAAC,EAAAC,cAAA,WAEAtB,KAAKJ,MAAM+G,aACXvF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMoE,UAAWvE,KAAcwE,GAC/BzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,mDAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IACtB/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,2DAEJ7M,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAkBZ,EAASoG,cAE/B7R,EAAAC,EAAAC,cAACwT,GAAA,EAAD,CAAc9O,MAAO6G,EAASoG,YAAazR,UAAQ,EAACwT,OAAO,YACvD5T,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,kHAAuBlE,KAAM,GACjDlE,EAASsL,sBAAwBtL,EAASsL,sBAAsB/N,QAAQ,IAAK,KAAO,IAEzFhJ,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,4EAAgBlE,KAAO,GAAIlE,EAAS2J,gBAE7DpV,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,wFAAiBlE,KAAM,GAC3ClE,EAASuL,mBAEdhX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,kFAAgBlE,KAAM,GAC1ClE,EAASwL,oBAAsBxL,EAASuL,kBACzChX,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASwL,kBAAmBtX,KAAK,UACjD8L,EAASwL,mBAIbjX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2IAA6BlE,KAAM,GAAwC,IAApClE,EAASyL,uBAA+B,eAAO,sBAC/GlX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qIAA4BlE,KAAM,GACtDlE,EAAS0L,yBAA2B1L,EAASyL,uBAC9ClX,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAA6C,IAApCP,EAAS0L,uBAA+B,eAAO,qBAAOxX,KAAK,UACvC,IAApC8L,EAAS0L,uBAA+B,eAAO,sBAGnDnX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2CAAalE,KAAM,QACTwB,IAA9B1F,EAAS2L,iBACVpX,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAAS2L,iBAAnC,KAAyD5E,IAAI,sBAAsB/S,OAAO,UAChGgM,EAAS2L,kBAGV,sEAEJpX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qCAAYlE,KAAM,QACRwB,IAA9B1F,EAAS4L,iBACVrX,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAAS4L,iBAAnC,KAAyD7E,IAAI,sBAAsB/S,OAAO,UAC5FgM,EAAS4L,mBAAqB5L,EAAS2L,iBACxCpX,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAAS4L,iBAAkB1X,KAAK,UAChD8L,EAAS4L,kBAGb,wCAGJrX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,iDAAmBlE,KAAM,GAC7ClE,EAAS6L,wBAEdtX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,2CAAkBlE,KAAM,GAC5ClE,EAAS8L,yBAA2B9L,EAAS6L,uBAC9CtX,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAAS8L,uBAAwB5X,KAAK,UACtD8L,EAAS8L,wBAGbvX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,6CAAelE,KAAM,GAAIlE,EAAS+L,oBAC3DxX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,uCAAclE,KAAM,GACxClE,EAASgM,qBAAuBhM,EAAS+L,mBAC1CxX,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASgM,mBAAoB9X,KAAK,UAClD8L,EAASgM,oBAGbzX,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,mDAAqBlE,KAAM,GAAIlE,EAASiM,0BACjE1X,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,6CAAoBlE,KAAM,GAC9ClE,EAASkM,2BAA6BlM,EAASiM,yBAChD1X,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASkM,yBAA0BhY,KAAK,UACxD8L,EAASkM,0BAGb3X,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,0EAAmBlE,KAAM,GAAIlE,EAASmM,uBAC/D5X,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,oEAAkBlE,KAAM,GAC5ClE,EAASoM,wBAA0BpM,EAASqM,kBAC7C9X,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASoM,sBAAuBlY,KAAK,UACrD8L,EAASoM,uBAGb7X,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,qDAAuBlE,KAAO,GAClD3P,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAASsM,2BAAnC,KAAmEvF,IAAI,sBAAsB/S,OAAO,UACvGgM,EAASsM,6BAGlB/X,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,+CAAsBlE,KAAO,GACjD3P,EAAAC,EAAAC,cAAA,KAAGqS,KAAI,wBAAAvK,OAA0ByD,EAASuM,2BAAnC,KAAmExF,IAAI,sBAAsB/S,OAAO,UACvGgM,EAASuM,6BAA+BvM,EAASsM,2BAClD/X,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAASP,EAASuM,2BAA4BrY,KAAK,UAAmB8L,EAASuM,6BAI9FhY,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,uKAAgClE,KAAO,GAC3B,IAApClE,EAASwM,uBAA+BjY,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,uBAAA7E,OAAyByD,EAASwM,uBAAlC,MAC5CxM,EAASwM,wBACA,+CAEdjY,EAAAC,EAAAC,cAACwT,GAAA,EAAarH,KAAd,CAAmBwH,MAAM,iKAA+BlE,KAAO,GAC1DlE,EAASyM,yBAA2BzM,EAASwM,uBAC9CjY,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOE,QAA6C,IAApCP,EAASyM,uBAA+BlY,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAE,uBAAA7E,OAAyByD,EAASyM,uBAAlC,MAC/DzM,EAASyM,wBACA,8CAAYvY,KAAK,UAAmB8L,EAASyM,0BAInDlY,EAAAC,EAAAC,cAAA,kPA5IMW,IAAMC,qBCdlC2E,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACFqC,IAAMwB,SAASC,QAAU,CACrBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAGhC,IAAMsK,GACJ/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,2BAAT,wEAOAsL,8MACFnZ,MAAQ,CACN6J,KAAM,GACNoH,WAAY,CAACuB,QAAS,GACtBtF,SAAS,EACTgE,YAAa,GACb+C,YAAa,GACb7C,QAAS,MA+BfC,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,gBAAiBC,EAApBtB,EAAoBsB,aAAcvD,EAAlCiC,EAAkCjC,QAASwD,EAA3CvB,EAA2CuB,aAA3C,OACd1Q,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEmQ,QAAS,IACrB3Q,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACEhG,IAAK,SAAAoK,GACHnS,EAAKoS,YAAcD,GAErBzK,YAAW,UAAA6B,OAAYsI,GACvB5Q,MAAO+Q,EAAa,GACpB9P,SAAU,SAAAnB,GAAC,OAAIgR,EAAgBhR,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KACnEoR,aAAc,kBAAMrS,EAAKsS,aAAaN,EAAcvD,EAASoD,IAC7D9P,MAAO,CAAEC,MAAO,IAAKsL,aAAc,EAAGkD,QAAS,WAEjDjP,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEhG,KAAK,UACLoG,QAAS,kBAAMtH,EAAKsS,aAAaN,EAAcvD,EAASoD,IACxDpP,KAAK,SACL0F,KAAK,QACLpG,MAAO,CAAEC,MAAO,GAAIkM,YAAa,IALnC,UASA3M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQI,QAAS,kBAAMtH,EAAKuS,YAAYN,IAAe9J,KAAK,QAAQpG,MAAO,CAAEC,MAAO,KAApF,WAKJwQ,WAAY,SAAAC,GAAQ,OAClBlR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SAASa,MAAO,CAAEkM,MAAOwE,EAAW,eAAYC,MAE7DiB,OAAQ,SAAAC,GAAI,OAAKA,OAInBtB,aAAe,SAACN,EAAcvD,EAASoD,GACrCpD,IACkB,kBAAdoD,EACF7R,EAAKqB,SAAS,CAAEmT,YAAaxC,EAAa,KACnB,gBAAdH,GACT7R,EAAKqB,SAAS,CAAEoQ,YAAaO,EAAa,KAE5C,IAAIR,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,MAGpCY,YAAc,SAAAN,GACZA,IACAjS,EAAKqB,SAAS,CAAEmT,YAAa,GACb/C,YAAa,QAI3BiC,QAAU,CAACzT,OAAA8Q,GAAA,EAAA9Q,CAAA,CAEPkG,MAAO,4DACP0L,UAAW,cACX/P,IAAK,eACF9B,EAAK4R,qBAAqB,gBALvB3R,OAAA8Q,GAAA,EAAA9Q,CAAA,CAQNkG,MAAO,wBACP0L,UAAW,gBACX/P,IAAK,iBACF9B,EAAK4R,qBAAqB,kBAI/B,CACIzL,MAAO,mDACP0L,UAAW,YACX/P,IAAK,YACL6R,OAAQ,SAACC,EAAMC,GAAP,OAAkBtS,EAAAC,EAAAC,cAAA,YAAgB,YAATmS,EAAoBrS,EAAAC,EAAAC,cAAA,yDAAqBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAM4F,IAAI,sBAAsB/S,OAAO,SAASoN,GAAIyF,EAAOe,cAAP,iCAAArL,OAAwDsK,EAAO8F,WAA/D,+BAAApQ,OAA2GsK,EAAO8F,YAAtK,uDAC/EhI,QAAS,CAAC,CAAEiC,KAAM,6CAAW3S,MAAO,WAAa,CAAE2S,KAAM,mDAAY3S,MAAO,YAC5E+S,gBAAgB,GAGlB,CACE7N,MAAO,wFACP0L,UAAW,kBACX/P,IAAK,kBACL6R,OAAQ,SAACC,GAAD,OAAUrS,EAAAC,EAAAC,cAAA,YAChBmS,EACCrJ,QAAQ,8BAA8B,6GACtCA,QAAQ,kCAAkC,gHAC1CA,QAAQ,uBAAwB,0CAChCA,QAAQ,iBAAiB,SACzBA,QAAQ,mBAAmB,WAC3BA,QAAQ,yBAAyB,iBACjCA,QAAQ,uBAAuB,SAC/BA,QAAQ,kBAAkB,wCAC1BA,QAAQ,kBAAkB,sDAC1BA,QAAQ,2BAA2B,mBACnCA,QAAQ,oBAAoB,iFAE/BoH,QAAS,CACP,CAAEiC,KAAM,4DAAgB3S,MAAO,aAC/B,CAAE2S,KAAM,+HAA4B3S,MAAO,+BAC3C,CAAE2S,KAAM,iIAA8B3S,MAAO,mCAC7C,CAAE2S,KAAM,2BAAa3S,MAAO,kBAC5B,CAAE2S,KAAM,6BAAe3S,MAAO,oBAC9B,CAAE2S,KAAM,mCAAqB3S,MAAO,0BACpC,CAAE2S,KAAM,0BAAY3S,MAAO,wBAC3B,CAAE2S,KAAM,0DAAmB3S,MAAO,mBAClC,CAAE2S,KAAM,wEAAkB3S,MAAO,mBACjC,CAAE2S,KAAM,qCAAuB3S,MAAO,4BACtC,CAAE2S,KAAM,iGAAuB3S,MAAO,sBAGxC+S,gBAAgB,GAGlB,CACE7N,MAAO,mDACP0L,UAAW,KACX/P,IAAK,UACL6R,OAAQ,SAACC,EAAMgG,GAAP,OACRrY,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,QAAMwF,UAAU,eAAeK,QAAS,kBAAMtH,EAAK6Z,KAAKD,EAAIjS,MAA5D,0DACApG,EAAAC,EAAAC,cAAC2P,GAAA,EAAD,CAASlQ,KAAK,aACdK,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACkM,MAAS,MAAO6L,OAAU,WAAYxS,QAAS,kBAAMtH,EAAK+Z,OAAOH,EAAIjS,MAAnF,oDAONkS,KAAO,SAAClS,GACN3H,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,yBAAiD,CAACqa,gBAAiBrS,IACnE4F,KACCE,QAAQ,qSAA2D,KACpE,IAAI+D,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,GAClC3R,EAAKqB,SAAS,CAAEoM,SAAS,OAG3BsM,OAAS,SAACpS,GACR3H,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,2BAAmD,CAACqa,gBAAiBrS,IACrE4F,KACCE,QAAQ,kQAAsD,KAC/D,IAAI+D,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,GAClC3R,EAAKqB,SAAS,CAAEoM,SAAS,OAI3BkF,kBAAoB,SAACnB,EAAYG,GAC/B,IAAMmB,EAAK7S,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAC9BsB,EAAMC,QAAUvB,EAAWuB,QAC3B/S,EAAKqB,SAAS,CACZmQ,WAAYsB,EACZnB,QAASA,IAEX3R,EAAKgT,MAAM,CACTC,KAAMzB,EAAWuB,QACjBkH,UAAWtI,EAAQsI,UAAYtI,EAAQsI,UAAU3P,WAAa,GAC9D4P,gBAAiBvI,EAAQuI,gBAAkBvI,EAAQuI,gBAAgB5P,WAAa,GAChFsK,cAAe5U,EAAKO,MAAMiU,YAC1BpB,YAAapT,EAAKO,MAAMkR,iBAI5BuB,MAAQ,WAAiB,IAAhBK,EAAgBC,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAP,GAChBtT,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,8BAAA4J,OAAoDvJ,EAAKD,MAAMoL,SAAU,CACvEkI,OAAOpT,OAAA8Q,GAAA,EAAA9Q,CAAA,GACFoT,KAGJpJ,KAAK,SAAAC,GACN,IAAMsH,EAAUvR,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YACnCA,EAAW+B,MAAQrJ,EAAIE,KAAKkB,MAC5BkG,EAAWgC,SAAW,GACtBhC,EAAWrK,SAAW,OACtBnH,EAAKqB,SAAS,CACZoM,SAAS,EACTrD,KAAMF,EAAIE,KAAKqJ,QACfjC,oGAlNcyC,GACd9T,KAAKJ,MAAMoL,UAAY8I,EAAU9I,SACnChL,KAAK6S,uCAKT/M,IAAMC,KAAK,CACTC,MAAO,qEACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,saACAF,EAAAC,EAAAC,cAAA,8nBACAF,EAAAC,EAAAC,cAAA,05BACAF,EAAAC,EAAAC,cAAA,s4BACAF,EAAAC,EAAAC,cAAA,scACAF,EAAAC,EAAAC,cAAA,uhBACAF,EAAAC,EAAAC,cAAA,2jBACAF,EAAAC,EAAAC,cAAA,ksBACAF,EAAAC,EAAAC,cAAA,8vBAEF4E,KAbS,2DAiBLlG,KAAKJ,MAAMoL,SACbhL,KAAK6S,yCA8LA,IAAApM,EAAAzG,KACP,OACEoB,EAAAC,EAAAC,cAAA,WACCtB,KAAKJ,MAAMoL,QACZ5J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUiH,KAAK,QAAQpG,MAAO,CAACoF,SAAY,WAAYC,MAAS,QAAQ7F,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,iCAAT,8HACrF7M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,SAASiH,KAAK,QAAQpG,MAAO,CAACoF,SAAY,WAAYC,MAAS,MAAOE,QAAS,kBAAMV,EAAKiT,KAAK,SAA5G,uEACAtY,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,OAAQE,QAASnH,KAAK+F,OAE9F3E,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,2EAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IAC1B/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,mBAAT,oFAGJ7M,EAAAC,EAAAC,cAAC4S,GAAA,EAAD,CACEX,QAASvT,KAAKuT,QACdY,WAAYnU,KAAKI,MAAM6J,KACvBoH,WAAYrR,KAAKI,MAAMiR,WACvB/D,QAAStN,KAAKI,MAAMkN,QACpBvL,SAAU/B,KAAKwS,kBACfwH,OAAO,KACPpY,MAAO,CAACyF,UAAW,WAIrBjG,EAAAC,EAAAC,cAAA,kPA9PkBW,IAAMC,WA2QjBwG,eAPS,SAACtI,GACrB,MAAO,CACH+K,MAAO/K,EAAM6Z,qBAAqB9O,MAClCH,QAAS5K,EAAMwI,YAAYoC,UAIpBtC,CAAyB6Q,IC7RlC1S,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACFqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,KAE9B,IAAMsK,GACJ/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,KACE/P,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,KACErM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,mBAAT,oFAOAiM,8MACF9Z,MAAQ,CACN6J,KAAM,GACNoH,WAAY,GACZ/D,SAAS,EACT+G,YAAa,GACb/C,YAAa,GACbE,QAAS,MA4BfC,qBAAuB,SAAAC,GAAS,MAAK,CACnCC,eAAgB,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,gBAAiBC,EAApBtB,EAAoBsB,aAAcvD,EAAlCiC,EAAkCjC,QAASwD,EAA3CvB,EAA2CuB,aAA3C,OACd1Q,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAAEmQ,QAAS,IACrB3Q,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACEhG,IAAK,SAAAoK,GACHnS,EAAKoS,YAAcD,GAErBzK,YAAW,UAAA6B,OAAYsI,GACvB5Q,MAAO+Q,EAAa,GACpB9P,SAAU,SAAAnB,GAAC,OAAIgR,EAAgBhR,EAAEC,OAAOC,MAAQ,CAACF,EAAEC,OAAOC,OAAS,KACnEoR,aAAc,kBAAMrS,EAAKsS,aAAaN,EAAcvD,EAASoD,IAC7D9P,MAAO,CAAEC,MAAO,IAAKsL,aAAc,EAAGkD,QAAS,WAEjDjP,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CACEhG,KAAK,UACLoG,QAAS,kBAAMtH,EAAKsS,aAAaN,EAAcvD,EAASoD,IACxDpP,KAAK,SACL0F,KAAK,QACLpG,MAAO,CAAEC,MAAO,GAAIkM,YAAa,IALnC,UASA3M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQI,QAAS,kBAAMtH,EAAKuS,YAAYN,IAAe9J,KAAK,QAAQpG,MAAO,CAAEC,MAAO,KAApF,WAKJwQ,WAAY,SAAAC,GAAQ,OAClBlR,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SAASa,MAAO,CAAEkM,MAAOwE,EAAW,eAAYC,MAE7DiB,OAAQ,SAAAC,GAAI,OAAKA,OAInBtB,aAAe,SAACN,EAAcvD,EAASoD,GACrCpD,IACkB,kBAAdoD,EACF7R,EAAKqB,SAAS,CAAEmT,YAAaxC,EAAa,KACnB,gBAAdH,GACT7R,EAAKqB,SAAS,CAAEoQ,YAAaO,EAAa,KAE5C,IAAIR,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,MAGpCY,YAAc,SAAAN,GACZA,IACAjS,EAAKqB,SAAS,CAAEmT,YAAa,GACb/C,YAAa,QAK3BiC,QAAU,CAACzT,OAAA8Q,GAAA,EAAA9Q,CAAA,CAEPkG,MAAO,4DACP0L,UAAW,cACX/P,IAAK,eACF9B,EAAK4R,qBAAqB,gBALvB3R,OAAA8Q,GAAA,EAAA9Q,CAAA,CAQNkG,MAAO,wBACP0L,UAAW,gBACX/P,IAAK,iBACF9B,EAAK4R,qBAAqB,kBAE/B,CACIzL,MAAO,mDACP0L,UAAW,YACX/P,IAAK,YACL6R,OAAQ,SAACC,EAAMC,GAAP,OAAkBtS,EAAAC,EAAAC,cAAA,YAAgB,YAATmS,EAAoBrS,EAAAC,EAAAC,cAAA,yDAAqBF,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAM4F,IAAI,sBAAsB/S,OAAO,SAASoN,GAAIyF,EAAOe,cAAP,iCAAArL,OAAwDsK,EAAO8F,WAA/D,+BAAApQ,OAA2GsK,EAAO8F,YAAtK,uDAC/EhI,QAAS,CAAC,CAAEiC,KAAM,6CAAW3S,MAAO,WAAa,CAAE2S,KAAM,mDAAY3S,MAAO,YAC5E+S,gBAAgB,GAGlB,CACE7N,MAAO,wFACP0L,UAAW,kBACX/P,IAAK,kBACL6R,OAAQ,SAACC,GAAD,OAAUrS,EAAAC,EAAAC,cAAA,YAChBmS,EACCrJ,QAAQ,8BAA8B,6GACtCA,QAAQ,kCAAkC,gHAC1CA,QAAQ,uBAAwB,0CAChCA,QAAQ,iBAAiB,SACzBA,QAAQ,mBAAmB,WAC3BA,QAAQ,yBAAyB,iBACjCA,QAAQ,uBAAuB,SAC/BA,QAAQ,kBAAkB,wCAC1BA,QAAQ,kBAAkB,sDAC1BA,QAAQ,2BAA2B,mBACnCA,QAAQ,oBAAoB,iFAE/BoH,QAAS,CACP,CAAEiC,KAAM,4DAAgB3S,MAAO,aAC/B,CAAE2S,KAAM,+HAA4B3S,MAAO,+BAC3C,CAAE2S,KAAM,iIAA8B3S,MAAO,mCAC7C,CAAE2S,KAAM,2BAAa3S,MAAO,kBAC5B,CAAE2S,KAAM,6BAAe3S,MAAO,oBAC9B,CAAE2S,KAAM,mCAAqB3S,MAAO,0BACpC,CAAE2S,KAAM,0BAAY3S,MAAO,wBAC3B,CAAE2S,KAAM,0DAAmB3S,MAAO,mBAClC,CAAE2S,KAAM,wEAAkB3S,MAAO,mBACjC,CAAE2S,KAAM,qCAAuB3S,MAAO,4BACtC,CAAE2S,KAAM,iGAAuB3S,MAAO,sBAGxC+S,gBAAgB,GAGlB,CACE7N,MAAO,mDACP0L,UAAW,KACX/P,IAAK,UACL6R,OAAQ,SAACC,EAAMgG,GAAP,OACRrY,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACkM,MAAS,MAAO6L,OAAU,WAAYxS,QAAS,kBAAMtH,EAAK+Z,OAAOH,EAAIjS,MAAnF,oDAONoS,OAAS,SAACpS,GACR3H,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,0BAAkD,CAACqa,gBAAiBrS,IACpE4F,KACCE,QAAQ,kQAAsD,KAC/D,IAAI+D,EAAaxR,EAAKO,MAAMiR,WACxBG,EAAU3R,EAAKO,MAAMoR,QACzB3R,EAAK2S,kBAAkBnB,EAAWG,GAClC3R,EAAKqB,SAAS,CAAEoM,SAAS,OAG3BkF,kBAAoB,SAACnB,EAAYG,GAC/B,IAAMmB,EAAK7S,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YAC9BsB,EAAMC,QAAUvB,EAAWuB,QAC3B/S,EAAKqB,SAAS,CACZmQ,WAAYsB,IAEd9S,EAAKgT,MAAM,CACTC,KAAMzB,EAAWuB,QACjBkH,UAAWtI,EAAQsI,UAAYtI,EAAQsI,UAAU3P,WAAa,GAC9D4P,gBAAiBvI,EAAQuI,gBAAkBvI,EAAQuI,gBAAgB5P,WAAa,GAChFsK,cAAe5U,EAAKO,MAAMiU,YAC1BpB,YAAapT,EAAKO,MAAMkR,iBAI5BuB,MAAQ,WAAiB,IAAhBK,EAAgBC,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAP,GAChBtT,EAAKqB,SAAS,CAAEoM,SAAS,IACzBpE,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,8BAAA4J,OAAoDvJ,EAAKD,MAAMoL,SAAU,CACvEkI,OAAOpT,OAAA8Q,GAAA,EAAA9Q,CAAA,GACFoT,KAGJpJ,KAAK,SAAAC,GACN,IAAMsH,EAAUvR,OAAA8Q,GAAA,EAAA9Q,CAAA,GAAQD,EAAKO,MAAMiR,YACnCA,EAAW+B,MAAQrJ,EAAIE,KAAKkB,MAC5BkG,EAAWgC,SAAW,GACtBhC,EAAWrK,SAAW,OACtBnH,EAAKqB,SAAS,CACZoM,SAAS,EACTrD,KAAMF,EAAIE,KAAKqJ,QACfjC,oGA/LcyC,GACd9T,KAAKJ,MAAMoL,UAAY8I,EAAU9I,SACrChL,KAAK6S,uCAKP/M,IAAMC,KAAK,CACTC,MAAO,wIACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,iaACAF,EAAAC,EAAAC,cAAA,mbACAF,EAAAC,EAAAC,cAAA,kgBACAF,EAAAC,EAAAC,cAAA,2zBAEF4E,KARS,2DAaLlG,KAAKJ,MAAMoL,SACbhL,KAAK6S,yCA+KA,IAAApM,EAAAzG,KACP,OACEoB,EAAAC,EAAAC,cAAA,WACCtB,KAAKJ,MAAMoL,QACZ5J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyS,GAAA,EAAD,MACA3S,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUiH,KAAK,QAAQpG,MAAO,CAACoF,SAAY,WAAYC,MAAS,QAAQ7F,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,iCAAT,8HACrF7M,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,SAASiH,KAAK,QAAQpG,MAAO,CAACoF,SAAY,WAAYC,MAAS,MAAOE,QAAS,kBAAMV,EAAKmT,OAAO,SAA9G,iEACAxY,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,OAAQE,QAASnH,KAAK+F,OAC9F3E,EAAAC,EAAAC,cAAC0S,GAAA,EAAD,CAAYpS,MAAO,CAACuL,aAAc,SAC9B/L,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,KAAiBrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,KAAI7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,WACzCK,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,2EAGArM,EAAAC,EAAAC,cAAC0S,GAAA,EAAWvG,KAAZ,CAAiBwG,QAAS9C,IAC1B/P,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,2BAAT,wEAGJ7M,EAAAC,EAAAC,cAAC4S,GAAA,EAAD,CACEX,QAASvT,KAAKuT,QACdY,WAAYnU,KAAKI,MAAM6J,KACvBoH,WAAYrR,KAAKI,MAAMiR,WACvB/D,QAAStN,KAAKI,MAAMkN,QACpBvL,SAAU/B,KAAKwS,kBACfwH,OAAO,QAIT5Y,EAAAC,EAAAC,cAAA,kPAzOwBW,IAAMC,WAsPvBwG,eAPS,SAACtI,GACrB,MAAO,CACH+K,MAAO/K,EAAM6Z,qBAAqB9O,MAClCH,QAAS5K,EAAMwI,YAAYoC,UAIpBtC,CAAyBwR,cCvQlCrT,GAAQ2D,aAAaC,QAAQ,SACtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACrBC,eAAgB,mBAChBC,cAAe,SAAWhE,SA6GnBsT,8MAxGX/Z,MAAQ,CACJga,cAAe,GACfC,QAAS,GACT/O,aAASiH,EACT/G,WAAO+G,KAiBX+H,aAAe,SAAAF,GACXva,EAAKqB,SAAS,CAAEkZ,qBAGpBG,oBAAsB,WAClBrR,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,yCAAiE,CAC7Dgb,iBAAkB3a,EAAKO,MAAMga,gBAE5BtQ,KAAK,SAAAC,GACFlK,EAAKqB,SAAS,CACVoK,QAASvB,EAAIE,SAGpBK,MAAM,SAAAkB,GACH3L,EAAKqB,SAAS,CACVsK,MAAOA,EAAMvB,6FA9BT,IAAAxD,EAAAzG,KAChBkJ,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,gCACKsK,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACVmZ,QAAStQ,EAAIE,SAGzBf,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,mCACKsK,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACVkZ,cAAerQ,EAAIE,0CAyB1B,IACGmQ,EAAkBpa,KAAKI,MAAvBga,cACFK,EAAkBza,KAAKI,MAAMia,QAAQK,OAAO,SAAAC,GAAC,OAAKP,EAAcQ,SAASD,KAC3E1N,EAAe,KACf4N,EAAiB,KAYrB,OAVI7a,KAAKI,MAAMoL,QACXyB,EACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMoL,MAAOzK,KAAK,WAG1Ef,KAAKI,MAAMkL,UACXuP,EACIzZ,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMkL,QAASvK,KAAK,aAI9EK,EAAAC,EAAAC,cAAA,WAEAuF,GACFzF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACC2L,EACA4N,EACKzZ,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CACIC,KAAK,WACLxT,YAAY,uPACZzG,MAAOsZ,EACPrY,SAAU/B,KAAKsa,aACf1Y,MAAO,CAAEC,MAAO,QAEf4Y,EAAgBO,IAAI,SAAAC,GAAI,OACzB7Z,EAAAC,EAAAC,cAACwZ,GAAA,EAAOI,OAAR,CAAevZ,IAAKsZ,EAAMna,MAAOma,GAC5BA,OAKb7Z,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUa,MAAO,CAACI,WAAc,MAAOqF,UAAa,MAAOF,QAASnH,KAAKua,qBAAtF,qGACAnZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,uIACAF,EAAAC,EAAAC,cAAA,4fACAF,EAAAC,EAAAC,cAAA,0ZACAF,EAAAC,EAAAC,cAAA,kZACAF,EAAAC,EAAAC,cAAA,2jBACAF,EAAAC,EAAAC,cAAA,uaACAF,EAAAC,EAAAC,cAAA,qOACAF,EAAAC,EAAAC,cAAA,maACAF,EAAAC,EAAAC,cAAA,oUACAF,EAAAC,EAAAC,cAAA,ktCAEAF,EAAAC,EAAAC,cAAA,snBAKJF,EAAAC,EAAAC,cAAA,kPAlG2BW,IAAMC,+BCRvC2E,GAAQ2D,aAAaC,QAAQ,SAEtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,SAG1BsU,8MACF/a,MAAO,CACHgb,YAAa,MACbC,eAAgB,GAChBC,cAAe,GACfhQ,QAAS,GACTE,MAAO,MA0BX+P,mBAAqB,SAAAF,GACjBxb,EAAKqB,SAAS,CAAEma,sBAGpBG,mBAAqB,SAAA5a,GACjBf,EAAKqB,SAAS,CACVka,YAAaxa,EAAEC,OAAOC,WAI9B2a,mBAAqB,SAAA7a,GACjBA,EAAE+B,iBACF9C,EAAKD,MAAMgD,KAAKmK,eAAe,SAACjK,EAAKC,GAC9BD,GACHoG,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,6BAAqD,CACnDkc,cAAe3Y,EAAO4Y,eACtBC,OAAQ/b,EAAKO,MAAMgb,YACnBS,iBAAkBhc,EAAKO,MAAMib,iBAE9BvR,KAAK,SAAAC,GACFlK,EAAKqB,SAAS,CACVoK,QAASvB,EAAIE,KACbuB,MAAO,OAIdlB,MAAM,SAAAkB,GACH3L,EAAKqB,SAAS,CACVsK,MAAOA,EAAMqB,SAAS5C,KACtBqB,QAAS,6FApDL,IAAA7E,EAAAzG,KAChBkJ,IAAM+B,IAAN,GAAA7B,OAAa5J,EAAb,uBACKsK,KAAK,SAAAC,GACFtD,EAAKvF,SAAS,CACVoa,cAAevR,EAAIE,gDAM/BnE,IAAMC,KAAK,CACTC,MAAO,gHACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,gTACAF,EAAAC,EAAAC,cAAA,ynBACAF,EAAAC,EAAAC,cAAA,oiBACAF,EAAAC,EAAAC,cAAA,+XACAF,EAAAC,EAAAC,cAAA,s2BACAF,EAAAC,EAAAC,cAAA,WAEF4E,KAVS,gDAqDX,IAAI+G,EAAe,KACf4N,EAAiB,KAErB7a,KAAKI,MAAMoL,QACXyB,EACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMoL,MAAOzK,KAAK,WAG1Ef,KAAKI,MAAMkL,UACXuP,EACIzZ,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMkL,QAASvK,KAAK,aAXvE,IAcD2F,EAAsB1G,KAAKJ,MAAMgD,KAAjC8D,kBAEA2U,EAAmBrb,KAAKI,MAAxBib,eACFZ,EAAkBza,KAAKI,MAAMkb,cAAcZ,OAAO,SAAAC,GAAC,OAAKU,EAAeT,SAASD,KAClF,OACIvZ,EAAAC,EAAAC,cAAA,WACC2L,EACA4N,EACGzZ,EAAAC,EAAAC,cAACwZ,GAAA,EAAD,CACIC,KAAK,WACLxT,YAAY,iPACZzG,MAAOua,EACPtZ,SAAU/B,KAAKub,mBACf3Z,MAAO,CAAEC,MAAO,QAEf4Y,EAAgBO,IAAI,SAAAC,GAAI,OACrB7Z,EAAAC,EAAAC,cAACwZ,GAAA,EAAOI,OAAR,CAAevZ,IAAKsZ,EAAMna,MAAOma,GAC5BA,MAKb7Z,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,MAAOC,IAAO,MAAOiG,aAAc,QAAShG,QAASnH,KAAK8b,eAElI1a,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMpE,SAAUlD,KAAKyb,mBAAoB3U,UAAU,cAC/C1F,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,CAAW7L,MAAO,CAACyF,UAAW,SACzBX,EAAkB,iBAAkB,CACjCgH,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,mTADtC1G,CAGGtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC1CvG,YAAY,kGAKpBnG,EAAAC,EAAAC,cAACya,GAAA,EAAMC,MAAP,CAAaja,SAAU/B,KAAKwb,mBAAoB1a,MAAOd,KAAKI,MAAMgb,aAC9Dha,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAOjb,MAAO,OAAd,oDACAM,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAOjb,MAAO,UAAd,+CAGJM,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACIrM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQnF,MAAO,CAACyF,UAAW,QAAQtG,KAAK,UAAUgH,SAAS,SAASjB,UAAU,qBAA9E,gFA/HO7E,IAAMC,WA0IpB+Z,GAFiBzT,IAAKC,OAAO,CAAExH,KAAM,gBAApBuH,CAAsC2S,IC/IlEtU,GAAQ2D,aAAaC,QAAQ,SAGtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,SAG1BqV,eACF,SAAAA,EAAYtc,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkc,IACdrc,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoc,GAAA/b,KAAAH,KAAMJ,KAIVQ,MAAQ,CACJ+b,kBAAmB,aACnB7Q,QAAS,GACTE,MAAO,IARO3L,EAYlBuc,mBAAqB,SAAAxb,GACjBA,EAAE+B,iBACF9C,EAAKD,MAAMgD,KAAKmK,eAAe,SAACjK,EAAKC,GAC9BD,GACHoG,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,+BAAuD,CACrD6c,kBAAmBtZ,EAAOgJ,SAC1B6P,OAAQ/b,EAAKO,MAAM+b,oBAEpBrS,KAAK,SAAAC,GACFlK,EAAKqB,SAAS,CACVoK,QAASvB,EAAIE,KACbuB,MAAO,OAIdlB,MAAM,SAAAkB,GACH3L,EAAKqB,SAAS,CACVsK,MAAOA,EAAMqB,SAAS5C,KACtBqB,QAAS,UA9BPzL,EAuChByc,yBAA2B,SAAA1b,GACzBf,EAAKqB,SAAS,CACVib,kBAAmBvb,EAAEC,OAAOC,SAvChCjB,EAAKuc,mBAAqBvc,EAAKuc,mBAAmB1b,KAAxBZ,OAAAa,EAAA,EAAAb,CAAAD,IAFZA,kFA8CdiG,IAAMC,KAAK,CACTC,MAAO,kIACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,+xBACAF,EAAAC,EAAAC,cAAA,inBACAF,EAAAC,EAAAC,cAAA,wuBACAF,EAAAC,EAAAC,cAAA,0aAEF4E,KARS,gDAaX,IAAI+G,EAAe,KACf4N,EAAiB,KAGjB7a,KAAKI,MAAMoL,QACXyB,EACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMoL,MAAOzK,KAAK,WAG1Ef,KAAKI,MAAMkL,UACXuP,EACIzZ,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMkL,QAASvK,KAAK,aAZ3E,IAiBG2F,EAAsB1G,KAAKJ,MAAMgD,KAAjC8D,kBACR,OACItF,EAAAC,EAAAC,cAAA,WACK2L,EACA4N,EACLzZ,EAAAC,EAAAC,cAAA,6IACIF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,MAAOC,IAAO,MAAOiG,aAAc,QAAShG,QAASnH,KAAKuc,mBAElInb,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMpE,SAAUlD,KAAKoc,mBAAoBtV,UAAU,cAC/C1F,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,CAAW7L,MAAO,CAACyF,UAAW,SAC7BX,EAAkB,WAAY,CAC3BgH,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,4SADtC1G,CAGGtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC1CvG,YAAY,kGAKpBnG,EAAAC,EAAAC,cAACya,GAAA,EAAMC,MAAP,CAAaja,SAAU/B,KAAKsc,yBAA0Bxb,MAAOd,KAAKI,MAAM+b,mBACpE/a,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAOjb,MAAO,cAAd,4EACAM,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAOjb,MAAO,cAAd,yFAGJM,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACIrM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQnF,MAAO,CAACyF,UAAW,QAAQtG,KAAK,UAAUgH,SAAS,SAASjB,UAAU,qBAA9E,gFAtGW7E,IAAMC,WAiHtBsa,GAFiBhU,IAAKC,OAAO,CAAExH,KAAM,gBAApBuH,CAAsC0T,IC1HhErV,GAAQ2D,aAAaC,QAAQ,SAGtB,MAAT5D,KACAqC,IAAMwB,SAASC,QAAU,CACvBC,eAAgB,mBAChBC,cAAe,SAAWhE,SAG1B4V,eACF,SAAAA,EAAY7c,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyc,IACd5c,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2c,GAAAtc,KAAAH,KAAMJ,KAIVQ,MAAQ,CACJsc,gBAAiB,MACjBpR,QAAS,GACTE,MAAO,IARO3L,EAWlBuc,mBAAqB,SAAAxb,GACjBA,EAAE+B,iBACF9C,EAAKD,MAAMgD,KAAKmK,eAAe,SAACjK,EAAKC,GAC9BD,GACHoG,IACKC,KADL,GAAAC,OACa5J,EADb,sCAC6D,CACrDmd,SAAU5Z,EAAOgJ,SACjB6P,OAAQ/b,EAAKO,MAAMsc,kBAEtB5S,KAAK,SAAAC,GACFlK,EAAKqB,SAAS,CACVoK,QAASvB,EAAIE,KACbuB,MAAO,OAIdlB,MAAM,SAAAkB,GACH3L,EAAKqB,SAAS,CACVsK,MAAOA,EAAMqB,SAAS5C,KACtBqB,QAAS,UA9BXzL,EAuChByc,yBAA2B,SAAA1b,GACzBf,EAAKqB,SAAS,CACVwb,gBAAiB9b,EAAEC,OAAOC,SAvC9BjB,EAAKuc,mBAAqBvc,EAAKuc,mBAAmB1b,KAAxBZ,OAAAa,EAAA,EAAAb,CAAAD,IAFZA,kFA8CdiG,IAAMC,KAAK,CACTC,MAAO,kIACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,2iBACAF,EAAAC,EAAAC,cAAA,+0BACAF,EAAAC,EAAAC,cAAA,mPACAF,EAAAC,EAAAC,cAAA,kZAEF4E,KARS,gDAaX,IAAI+G,EAAe,KACf4N,EAAiB,KAGjB7a,KAAKI,MAAMoL,QACXyB,EACI7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMoL,MAAOzK,KAAK,WAG1Ef,KAAKI,MAAMkL,UACXuP,EACIzZ,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAOtL,MAAO,CAACuL,aAAc,QAASC,QAASpN,KAAKI,MAAMkL,QAASvK,KAAK,aAZ3E,IAiBG2F,EAAsB1G,KAAKJ,MAAMgD,KAAjC8D,kBACR,OACItF,EAAAC,EAAAC,cAAA,WACK2L,EACA4N,EACLzZ,EAAAC,EAAAC,cAAA,iNACIF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,MAAOC,IAAO,MAAOiG,aAAc,QAAShG,QAASnH,KAAKuc,mBAElInb,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAMpE,SAAUlD,KAAKoc,mBAAoBtV,UAAU,cAC/C1F,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,CAAW7L,MAAO,CAACyF,UAAW,SAC7BX,EAAkB,WAAY,CAC3BgH,MAAO,CAAC,CAAEC,UAAU,EAAMP,QAAS,waADtC1G,CAGGtF,EAAAC,EAAAC,cAACsM,EAAA,EAAD,CACAC,OAAQzM,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,OAAOa,MAAO,CAAEkM,MAAO,qBAC1CvG,YAAY,8LAKpBnG,EAAAC,EAAAC,cAACya,GAAA,EAAMC,MAAP,CAAaja,SAAU/B,KAAKsc,yBAA0Bxb,MAAOd,KAAKI,MAAMsc,iBACpEtb,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAOjb,MAAO,OAAd,oDACAM,EAAAC,EAAAC,cAACya,GAAA,EAAD,CAAOjb,MAAO,UAAd,+CAGJM,EAAAC,EAAAC,cAACgG,EAAA,EAAKmG,KAAN,KACIrM,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQnF,MAAO,CAACyF,UAAW,QAAQtG,KAAK,UAAUgH,SAAS,SAASjB,UAAU,qBAA9E,gFAtGW7E,IAAMC,WAiHtB0a,GAFcpU,IAAKC,OAAO,CAAExH,KAAM,gBAApBuH,CAAsCiU,ICrH3DI,GAAYC,KAAZD,QACFxa,GAAUjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,UAAUa,MAAO,CAAEW,SAAU,IAAMC,MAAI,IAI5Dua,4LAIEjX,IAAMC,KAAK,CACTC,MAAO,4OACPC,QAAU7E,EAAAC,EAAAC,cAAA,WACRF,EAAAC,EAAAC,cAAA,8nBACAF,EAAAC,EAAAC,cAAA,kSAEF4E,KANS,gDAWf,OACI9E,EAAAC,EAAAC,cAAA,WAEItB,KAAKJ,MAAM+G,aACXvF,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAMoE,UAAWvE,MACjBrC,KAAKJ,MAAMiH,OAAwC,MAA9B7G,KAAKJ,MAAMiJ,YAAY,IAA4C,IAA9B7I,KAAKJ,MAAMiJ,YAAY,IAA0C,IAA9B7I,KAAKJ,MAAMiJ,YAAY,IAA0C,IAA9B7I,KAAKJ,MAAMiJ,YAAY,GAsBnJzH,EAAAC,EAAAC,cAAA,4XArBRF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sPACAF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQzE,KAAK,kBAAkBV,MAAO,CAACoF,SAAY,WAAYC,MAAS,QAASC,IAAO,KAAMiG,aAAc,QAAShG,QAASnH,KAAKgd,iBACnI5b,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAC2b,GAAA,EAAD,CAAMxb,iBAAiB,KACvBL,EAAAC,EAAAC,cAACub,GAAD,CAASK,IAAI,kIAAyBvb,IAAI,KAC1CP,EAAAC,EAAAC,cAAC6b,GAAD,OAGA/b,EAAAC,EAAAC,cAACub,GAAD,CAASK,IAAI,6KAAiCvb,IAAI,KAC9CP,EAAAC,EAAAC,cAAC8b,GAAD,OAGJhc,EAAAC,EAAAC,cAACub,GAAD,CAASK,IAAI,iKAA+Bvb,IAAI,KAC9CP,EAAAC,EAAAC,cAAC+b,GAAD,kBApCepb,IAAMC,WAiDzBob,GAA0B9U,IAAKC,OAAO,CAAExH,KAAM,gBAApBuH,CAAsCuU,IAYvDrU,eAVS,SAACtI,GACrB,MAAO,CACHuI,WAAYvI,EAAMwI,YAAYD,WAC9BE,YAAazI,EAAMwI,YAAYC,YAC/BhC,MAAQzG,EAAMwI,YAAY/B,MAC1BF,aAAcvG,EAAMwI,YAAYjC,eAKA,KAAzB+B,CAA+B4U,ICvD/BC,oLAdP,OACInc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0LACAF,EAAAC,EAAAC,cAAA,qjBACAF,EAAAC,EAAAC,cAAA,2wBACAF,EAAAC,EAAAC,cAAA,8eACAF,EAAAC,EAAAC,cAAA,u1BACAF,EAAAC,EAAAC,cAAA,oSAA0DF,EAAAC,EAAAC,cAAA,KAAGqS,KAAK,qEAAqEC,IAAI,sBAAsB/S,OAAO,SAA9G,yCAC1DO,EAAAC,EAAAC,cAAA,0LAAqCF,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACkM,MAAO,UAArB,sBAArC,mEAA2G1M,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACkM,MAAO,UAArB,mCAXpG7L,IAAMC,WCGtBsb,UAAeC,EAAfD,YAmDQE,8MA/CXtd,MAAQ,CACJud,MAAO,MAEXC,cAAgB,SAACC,EAAMC,GACnBje,EAAKqB,SAAS,CACVyc,MAAOG,IAEXvO,QAAQwO,IAAIle,EAAKO,MAAMud,UAG3B9K,MAAQ,WACJ3J,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,mBAA2C,CACvCme,MAAO9d,EAAKO,MAAMud,QAErB7T,KAAK,SAAAC,GACFlK,EAAKqB,SAAS,CACVyc,MAAO,iBAMnBK,KAAO,WACH9U,IAAMC,KAAN,GAAAC,OAAc5J,EAAd,yBACCsK,KAAK,SAAAC,GACFlK,EAAKqB,SAAS,CACVyc,MAAO,uFAQf,OACIvc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkc,GAAD,CAAazb,SAAU/B,KAAK4d,cAAerW,YAAY,oFAC3DnG,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUa,MAAO,CAACI,WAAc,QAASmF,QAASnH,KAAK6S,OAApE,MACAzR,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAQhG,KAAK,UAAUa,MAAO,CAACI,WAAc,QAASmF,QAASnH,KAAKge,MAApE,gBAvCc/b,IAAMC,WC+CjB+b,GA7BI,kBACf7c,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWC,IADhD,IACgE,GAC5Dld,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWE,IAF3C,IAEsD,GAClDnd,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWG,IAAW,IACnDpd,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7O,IAJrC,IAImD,GAC/CpO,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,6BAA6BC,UAAW1O,KAL9D,IAKoF,GAChFvO,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW7N,KAN7C,IAM8D,GAC1DpP,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,uBAAuBC,UAAaI,KAP1D,IAOgF,GAC5Erd,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAajK,KAR5D,IAQoF,GAChFhT,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kCAAkCC,UAAa3J,KATrE,IAS+F,GAC3FtT,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,sCAAsCC,UAAa1I,KAVzE,IAUqG,GACjGvU,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,iCAAiCC,UAAa9H,KAXpE,IAW+F,GAC3FnV,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,+BAA+BC,UAAa5H,KAZlE,IAY2F,GACvFrV,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8CAA8CC,UAAa3H,KAbjF,IAa4G,GACxGtV,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,0CAA0CC,UAAanG,KAd7E,IAcsG,GAClG9W,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,kBAAkBC,UAAa9E,KAfrD,IAesE,GAClEnY,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,0BAA0BC,UAAanE,KAhB7D,IAgBoF,GAChF9Y,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gCAAgCC,UAAalE,KAjBnE,IAiBiG,GAC7F/Y,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAaf,KAlBlD,IAkB+E,GAC3Elc,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAad,KAnBhD,IAmB8D,GAC1Dnc,EAAAC,EAAAC,cAAC4c,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAaX,KApB/C,IAoBgE,mCC3C5DgB,GAAYC,KAAZD,QACAE,GAAmCC,KAAnCD,OAAQE,GAA2BD,KAA3BC,QAASC,GAAkBF,KAAlBE,OAAQC,GAAUH,KAAVG,MAI3BC,8MACF7e,MAAQ,CACN8e,WAAW,EACXzO,SAAS,KAGXC,WAAa,WACX7Q,EAAKqB,SAAS,CACZuP,SAAS,OAGb0O,YAAc,WACZtf,EAAKqB,SAAS,CACZuP,SAAS,OAKb2O,WAAa,SAAAF,GACX3P,QAAQwO,IAAImB,GACZrf,EAAKqB,SAAS,CAAEge,uFAIhB,OACE9d,EAAAC,EAAAC,cAAC0T,GAAA,EAAD,CAAQlO,UAAU,eAAelF,MAAO,CAAEyd,UAAW,UACnDje,EAAAC,EAAAC,cAAC0d,GAAD,CAAOlY,UAAU,eAAewY,aAAW,EAACJ,UAAWlf,KAAKI,MAAM8e,UAAWE,WAAYpf,KAAKof,YAC5Fhe,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,SACf1F,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,CAAOrK,UAAU,eAAeyY,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,gBAAkB,CAAC,QAAQ1E,KAAK,UAEvG3Z,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW3G,UAAU,eAAenF,IAAI,KACtCP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAM1L,KAAMlB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,YAAc+F,UAAU,eAAgBmH,GAAG,IAAIrM,MAAO,CAACkM,MAAO,UAAU1M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMwE,UAAU,eAAe/F,KAAK,YAAYK,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACkM,MAAO,UAArB,gDAEjJ1M,EAAAC,EAAAC,cAACod,GAAD,CAAS5X,UAAU,eACnBnF,IAAI,OACJqE,MACE5E,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SACXK,EAAAC,EAAAC,cAAA,0FALJ,IAQCtB,KAAKJ,MAAMqJ,UACZ7H,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,aAAY7M,EAAAC,EAAAC,cAAA,WAAMtB,KAAKJ,MAAMqJ,aAEzD7H,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,aAAY7M,EAAAC,EAAAC,cAAA,2DAExCF,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gBAAT,iEAEjBjO,KAAKJ,MAAM8f,gBAEXte,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KACfP,EAAAC,EAAAC,cAACqe,GAAA,EAAD,CACA3Z,MAAM,mKACN4Z,UAAW5f,KAAKJ,MAAMigB,OACtBC,OAAO,eACPC,WAAW,sBAET3e,EAAAC,EAAAC,cAAA,OAAKM,MAAO,CAACC,MAAO,SAApB,oCAOFT,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KACfP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,WAAT,8BAMF7M,EAAAC,EAAAC,cAACod,GAAD,CACE/c,IAAI,OACJqE,MACE5E,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,aACXK,EAAAC,EAAAC,cAAA,8EAIJF,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gBAAT,uEACnB7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAf,oDACAP,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,aAAT,+CACnB7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAf,oFAEFP,EAAAC,EAAAC,cAACod,GAAD,CACE/c,IAAI,OACJqE,MACE5E,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,gBACXK,EAAAC,EAAAC,cAAA,4DAIJF,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,MAAKP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,wBAAT,2DACpB7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,MAAKP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,0BAAT,uBACpB7M,EAAAC,EAAAC,cAACod,GAAD,CACE/c,IAAI,OACJqE,MACE5E,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SACXK,EAAAC,EAAAC,cAAA,wEAIJF,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,MAAKP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gCAAT,2DACpB7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,MAAKP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,kCAAT,wBAEtB7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,MAAf,+CAEFP,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,MACbP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,cACP7M,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMvB,KAAK,SACXK,EAAAC,EAAAC,cAAA,mGAKRF,EAAAC,EAAAC,cAAC0T,GAAA,EAAD,KACA5T,EAAAC,EAAAC,cAACsd,GAAD,CAAQ9X,UAAU,SAASlF,MAAO,CAAC8F,OAAQ,SACzCtG,EAAAC,EAAAC,cAAA,OAAKwF,UAAU,SACf1F,EAAAC,EAAAC,cAAC6P,GAAA,EAAD,CACEoO,MAAM,OACNxE,KAAK,aACLyE,oBAAqB,CAAC,KACtB5d,MAAO,CAAEwO,WAAY,SAErBhP,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,gBAAT,uEACnB7M,EAAAC,EAAAC,cAAC6P,GAAA,EAAK1D,KAAN,CAAW9L,IAAI,KAAIP,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAMC,GAAG,mBAAkB7M,EAAAC,EAAAC,cAAC0e,GAAA,EAAD,CAAO7U,MAAOnL,KAAKJ,MAAMqgB,mBAAoBC,KAAG,GAAhD,0EAGhD9e,EAAAC,EAAAC,cAACwd,GAAD,CAAStX,GAAG,aAAa5F,MAAO,CAAEue,OAAQ,cACxC/e,EAAAC,EAAAC,cAAA,WAAMtB,KAAKJ,MAAMwgB,WAEnBhf,EAAAC,EAAAC,cAACyd,GAAD,CAAQnd,MAAO,CAAEye,UAAW,WAA5B,0EAtIene,aAoJZwG,eAAQ,KANI,SAAAM,GACzB,MAAO,CACH6W,OAAQ,kBAAM7W,EAASuB,QAId7B,CAAkCuW,ICjJ3CqB,+LAGFtgB,KAAKJ,MAAM2gB,kBACXvgB,KAAKJ,MAAM4gB,2DAMT,OACEpf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,KACE5M,EAAAC,EAAAC,cAACmf,GAAiBzgB,KAAKJ,MACrBwB,EAAAC,EAAAC,cAACof,GAAD,gBAdIxe,aAuCHwG,eAjBS,SAAAtI,GACtB,MAAO,CACLsf,gBAA6C,OAA5Btf,EAAMwI,YAAY/B,MACnCoC,UAAW7I,EAAMwI,YAAYK,UAC7B+B,QAAS5K,EAAMwI,YAAYoC,QAC3BiV,mBAAoB7f,EAAM6Z,qBAAqB9O,QAIxB,SAAAnC,GACzB,MAAO,CACLuX,gBAAiB,kBAAMvX,E1BqIhB,SAAAA,GACH,IAAMnC,EAAQ2D,aAAaC,QAAQ,cACrB8H,IAAV1L,EACAmC,EAASyC,KAEc,IAAIiB,KAAKlC,aAAaC,QAAQ,oBAC9B,IAAIiC,MACvB1D,EAASyC,KACTzC,ED5JL,CACHjI,KDJ4B,2BEiKpBiI,EAASqC,EAAYxE,IACrBmC,EAAS8C,EAAqBjF,Q0B/I1C2Z,wBAAyB,SAACxV,GAAD,OAAahC,EAAS2X,EAA2C3V,KAC1F4V,sBAAuB,kBAAM5X,E3BjBtB,CACHjI,KDJ4B,4B4BwBrB2H,CAA6C4X,ICxCtDO,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStM,MACvB,2DAsCN,SAASuM,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTrX,KAAK,SAAA0X,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBthB,QACfihB,UAAUC,cAAcO,YAI1BtS,QAAQwO,IACN,iHAKEqD,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBjS,QAAQwO,IAAI,sCAGRqD,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5BlX,MAAM,SAAAkB,GACL+D,QAAQ/D,MAAM,4CAA6CA,kBChGpDwW,GAAe,SAACC,EAAWC,GACpC,OAAOpiB,OAAA8Q,GAAA,EAAA9Q,CAAA,GACAmiB,EACAC,ICELC,GAAe,CACjBtb,MAAO,KACP2E,MAAO,KACP8B,SAAS,EACT8U,oBAAoB,EACpB9W,SAAS,EACT+W,sBAAsB,EACtBC,mBAAoB,KACpB3b,cAAc,EACdgC,WAAY,KACZE,YAAa,KACbsD,WAAY,KACZlD,UAAW,MAiHAL,GApBK,WAAgC,IAA/BxI,EAA+B+S,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAzBgP,GAAcvG,EAAWzI,UAAA5M,OAAA,EAAA4M,UAAA,QAAAZ,EAChD,OAAQqJ,EAAO7a,MAEX,I/BhHkB,a+BgHW,OA3FnB,SAACX,EAAOwb,GACtB,OAAOoG,GAAa5hB,EAAO,CACvBoL,MAAO,KACP8B,SAAS,IAwF2BiV,CAAUniB,GAC9C,I/BhHoB,e+BgHW,OArFnB,SAACA,EAAOwb,GACxB,OAAOoG,GAAa5hB,EAAO,CACvByG,MAAO+U,EAAO/U,MACd2E,MAAO,KACP8B,SAAS,EACThC,SAAS,IAgF6BD,CAAYjL,EAAOwb,GACzD,I/BhHiB,Y+BgHW,OA7EnB,SAACxb,EAAOwb,GACrB,OAAOoG,GAAa5hB,EAAO,CACvBoL,MAAOoQ,EAAOpQ,MACd8B,SAAS,EACThC,SAAS,IAyE0BC,CAASnL,EAAOwb,GACnD,I/BhHmB,c+BgHW,OApBnB,SAACxb,EAAOwb,GACvB,OAAOoG,GAAa5hB,EAAO,CACvByG,MAAO,KACPyE,SAAS,EACTzC,YAAa,KACbsD,WAAY,KACZlD,UAAW,KACX+B,QAAS,KACTrE,cAAc,IAYuB8E,CAAWrL,GAEhD,I/B/GkC,6B+B+GW,OAvE3B,SAACA,EAAOwb,GAC9B,OAAOoG,GAAa5hB,EAAO,CACvBgiB,oBAAoB,EACpBC,sBAAsB,EACtBC,mBAAoB,OAmEgCE,CAAkBpiB,GACtE,I/B9GN,qC+B8G2D,OAjE5B,SAACA,EAAOwb,GACrC,OAAOoG,GAAa5hB,EAAO,CACvBgiB,oBAAoB,EACpBC,sBAAsB,EACtBC,mBAAoB,OA6DwCG,CAAyBriB,GACrF,I/B7GN,mC+B6GyD,OA3D5B,SAACA,EAAOwb,GACnC,OAAOoG,GAAa5hB,EAAO,CACvBgiB,oBAAoB,EACpBC,sBAAsB,EACtBC,mBAAoB1G,EAAO0G,qBAuD+BI,CAAuBtiB,EAAOwb,GAExF,I/B5GwB,mB+B4GW,OApDpB,SAACxb,EAAOwb,GAC3B,OAAOoG,GAAa5hB,EAAO,CACvBuG,cAAc,EACdgC,WAAY,OAiD8Bga,CAAeviB,GACzD,I/B5GgC,2B+B4GW,OA9CrB,SAACA,EAAOwb,GAClC,OAAOoG,GAAa5hB,EAAO,CACvByI,YAAa+S,EAAO/S,YACpBI,UAAW2S,EAAO3S,UAClBkD,WAAYyP,EAAOzP,WACnBxF,cAAc,EACdqE,QAAS4Q,EAAO5Q,QAChBrC,WAAY,OAuCsCyD,CAAsBhM,EAAOwb,GAC/E,I/B5G6B,wB+B4GW,OApCrB,SAACxb,EAAOwb,GAC/B,OAAOoG,GAAa5hB,EAAO,CACvBuG,cAAc,EACdgC,WAAYvI,EAAMuI,aAiC6B2D,CAAmBlM,GAClE,QACI,OAAOA,ICzHb+hB,GAAe,CACjBld,kBAAmB,KACnB2d,iBAAkB,KAClB7Z,oBAAoB,GAyCTD,GAXW,WAAgC,IAA/B1I,EAA+B+S,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAzBgP,GAAcvG,EAAWzI,UAAA5M,OAAA,EAAA4M,UAAA,QAAAZ,EACtD,OAAQqJ,EAAO7a,MACX,IhCrBwB,mBgCqBW,OA7BnB,SAACX,EAAOwb,GAC5B,OAAOoG,GAAa5hB,EAAO,CACvBwiB,iBAAkB,KAClB7Z,oBAAoB,IA0BsB8Z,CAAgBziB,GAC1D,IhCrB0B,qBgCqBW,OAxBnB,SAACA,EAAOwb,GAC9B,OAAOoG,GAAa5hB,EAAO,CACvB6E,kBAAmB2W,EAAO1R,OAC1BnB,oBAAoB,EACpB6Z,kBAAkB,IAoB0BvY,CAAkBjK,EAAOwb,GACrE,IhCrBuB,kBgCqBW,OAjBnB,SAACxb,EAAOwb,GAC3B,OAAOoG,GAAa5hB,EAAO,CACvBwiB,iBAAkBhH,EAAOgH,iBACzB7Z,oBAAoB,IAcqB+Z,CAAe1iB,EAAOwb,GAC/D,IhCrBwB,mBgCqBW,OAXnB,SAACxb,EAAOwb,GAC5B,OAAOoG,GAAa5hB,EAAO,CACvB6E,kBAAmB,KASuB8d,CAAgB3iB,GAC1D,QACI,OAAOA,ICzCb+hB,GAAe,CACjBhX,MAAO,KACPK,MAAO,KACP8B,SAAS,GAyCE2M,GAXc,WAAgC,IAA/B7Z,EAA+B+S,UAAA5M,OAAA,QAAAgM,IAAAY,UAAA,GAAAA,UAAA,GAAzBgP,GAAcvG,EAAWzI,UAAA5M,OAAA,EAAA4M,UAAA,QAAAZ,EACzD,OAAQqJ,EAAO7a,MACX,IjCdyB,oBiCcW,OA7Bd,SAACX,EAAOwb,GAClC,OAAOoG,GAAa5hB,EAAO,CACvBoL,MAAO,KACP8B,SAAS,IA0BkCxC,CAAsB1K,GACjE,IjCdiC,4BiCcW,OAxBpB,SAACA,EAAOwb,GACpC,OAAOoG,GAAa5hB,EAAO,CACvBoL,MAAO,KACP8B,SAAS,EACTnC,MAAOyQ,EAAOzQ,QAoBqCC,CAAwBhL,EAAOwb,GAClF,IjCd8B,yBiCcW,OAlBpB,SAACxb,EAAOwb,GACjC,OAAOoG,GAAa5hB,EAAO,CACvBoL,MAAOoQ,EAAOpQ,MACd8B,SAAS,IAeuC0V,CAAqB5iB,EAAOwb,GAC5E,IjCd4B,uBiCcW,OAbnB,SAACxb,EAAOwb,GAChC,OAAOoG,GAAa5hB,EAAO,CACvBoL,MAAO,KACP8B,SAAS,EACTnC,MAAO,IASuC8X,CAAoB7iB,GAClE,QACI,OAAOA,ICrCJ8iB,gBAAgB,CAC3Bta,eACAE,qBACAmR,qCLYG,SAAkBmH,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI8B,IAAIC,GAAwBrC,OAAOC,SAASrN,MACpD0P,SAAWtC,OAAOC,SAASqC,OAIvC,OAGFtC,OAAOuC,iBAAiB,OAAQ,WAC9B,IAAMnC,EAAK,GAAA/X,OAAMga,GAAN,sBAEPvC,IAgEV,SAAiCM,EAAOC,GAEtCvO,MAAMsO,GACHrX,KAAK,SAAA+C,GAEJ,IAAM0W,EAAc1W,EAASlC,QAAQM,IAAI,gBAEnB,MAApB4B,EAASgD,QACO,MAAf0T,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5CnC,UAAUC,cAAcmC,MAAM3Z,KAAK,SAAA0X,GACjCA,EAAakC,aAAa5Z,KAAK,WAC7BiX,OAAOC,SAAS2C,aAKpBzC,GAAgBC,EAAOC,KAG1B9W,MAAM,WACLiF,QAAQwO,IACN,mEArFA6F,CAAwBzC,EAAOC,GAI/BC,UAAUC,cAAcmC,MAAM3Z,KAAK,WACjCyF,QAAQwO,IACN,gHAMJmD,GAAgBC,EAAOC,MMnC/BE,GAEA,IAAMuC,GACc,kBAAX9C,QACPA,OAAO+C,qCACL/C,OAAO+C,qCAAqC,IAEvCC,KAEHC,GAAQC,aAAYC,GAASL,GAC/BM,aAAgBC,QAEdC,GACFjjB,EAAAC,EAAAC,cAACgjB,EAAA,EAAD,CAAUN,MAAOA,IACb5iB,EAAAC,EAAAC,cAACijB,GAAD,OAMRC,IAAShR,OAAO6Q,GAAKjgB,SAASC,eAAe","file":"static/js/main.ec242988.chunk.js","sourcesContent":["const backendURL = 'http://10.50.20.193:8000'\n\nexport default backendURL;","import { Collapse, Checkbox } from 'antd';\nimport React from 'react'\n\nconst Panel = Collapse.Panel;\n\n\n\nclass CombinatorSettings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      combinateDoubles: false,\n      deteleTabs: true,\n      deleteSpaces: true,\n      ignoreEmptyRows: true\n    }\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  handleCheckboxChange(e) {\n\n    const target = e.target\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name\n      this.setState({\n        [name]: value\n      });\n    }\n\n\n  render(){\n    return(\n        <Collapse bordered={true} defaultActiveKey={['']}>\n          <Panel header=\"Показать настройки\" key=\"1\">\n            <div>\n              <div style={{width: '18%'}}>\n                <p>Результат</p>\n                <Checkbox type=\"checkbox\" name=\"combinateDoubles\" checked={this.state.combinateDoubles} onChange={this.handleCheckboxChange} style={{marginLeft: '8px'}}>Пересекать дубли</Checkbox>\n                <Checkbox type=\"checkbox\" name=\"deteleTabs\" checked={this.state.deteleTabs} onChange={this.handleCheckboxChange}>Удалить табуляцию</Checkbox>\n                <Checkbox type=\"checkbox\" name=\"deleteSpaces\" checked={this.state.deleteSpaces} onChange={this.handleCheckboxChange}>Удалить лишние пробелы</Checkbox>\n                <Checkbox type=\"checkbox\" name=\"ignoreEmptyRows\" checked={this.state.ignoreEmptyRows} onChange={this.handleCheckboxChange} style={{marginLeft: '8px'}}>Игнорировать пустые строки</Checkbox>\n              </div>\n            </div>\n          </Panel>\n        </Collapse>\n        )\n    }\n}\n\nexport default CombinatorSettings;","import { Input, Button, Popover, Icon, Spin, Form, Checkbox, Modal} from 'antd';\nimport React from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/combinator'\nimport CombinatorSettings from '../../components/combinator/combinator-settings'\n\nconst { TextArea } = Input;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass CombinatorForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          col1: true,\n          col2: true,\n          col3: true,\n          col4: true,\n          col5: true,\n          col6: true,\n          col7: true,\n          col8: true,\n          allLength: 0,\n          length1: 1,\n          length2: 1,\n          length3: 1,\n          length4: 1,\n          length5: 1,\n          length6: 1,\n          length7: 1,\n          length8: 1,\n          target8: '1111'\n\n        }\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n        this.onChangeColumn = this.onChangeColumn.bind(this);\n      }\n\n      info() {\n        Modal.info({\n          title: 'Пересекатор фраз',\n          content: (<div>\n            <p>Это - пересекатор фраз. Аналог всех прочих таких же.</p>\n            <p>Допускаю, что вы уже знаете как работать с подобными приложениями</p>\n            <p>Чекбокс возле надписи \"Стоблец N\" включает или выключает столбец. Позволяет пропустить конструкции при формировании фраз, не удаляя их.</p>\n            <p>Кнопка \"Скопировать результат\" копирует результат в ваш буфер обмена</p>\n            <p>Кнопка \"Скомбинировать N фраз\" запускает процесс формирования фраз.</p>\n            <p>ВАЖНО! Более 100 000 фраз не могут быть представлены в веб-интерфейсе. В случае большого количества фраз, результат можно скачать с помощью соответствующих кнопок над полем результата в форматах .TXT (синяя кнопка) и .CSV (белая кнопка)</p>\n            <p>Очистить все поля (включая колонки и результат) можно, нажав красную кнопку \"Очистить поля\", которая находится в нижнем правом углу страницы под полем результата</p>\n            </div>),\n          onOk() {},\n        });\n      }\n\n    warning() {\n        Modal.warning({\n          title: 'Такое количество результатов не может быть отображено.',\n          content: 'Мы не можем отобразить более 100000 результатов прямо на странице. Вместо этого воспользуйтесь фунцией скачивания в одном из форматов.',\n        });\n      }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll((err, values) => {\n        if (this.state.allLength > 100000) {\n                this.warning()\n        }\n          if (!err) {\n              this.props.onSubmit(\n                  this.state.col1 ? values.value1 : ' ',\n                  this.state.col2 ? values.value2 : ' ',\n                  this.state.col3 ? values.value3 : ' ',\n                  this.state.col4 ? values.value4 : ' ',\n                  this.state.col5 ? values.value5 : ' ',\n                  this.state.col6 ? values.value6 : ' ',\n                  this.state.col7 ? values.value7 : ' ',\n                  this.state.col8 ? values.value8 : ' ',\n              );\n          }\n        }\n        );\n      };\n    \n    copyText = e => {\n        var copyText = document.getElementById(\"result\");\n        copyText.select();\n        document.execCommand(\"copy\");\n      }\n    \n    handleCheckboxChange = e => {\n        const target = e.target\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name\n          this.setState({\n            [name]: value\n          });\n        }\n\n    onChangeColumn(e) {\n        const target = e.target;\n\n        var len = target.value.endsWith(\"\\n\") ? target.value.slice(0, -1) : target.value\n\n        var length1 = target.name === 'target1' ? len.split('\\n').length : this.state.length1\n        var length2 = target.name === 'target2' ? len.split('\\n').length : this.state.length2\n        var length3 = target.name === 'target3' ? len.split('\\n').length : this.state.length3\n        var length4 = target.name === 'target4' ? len.split('\\n').length : this.state.length4\n        var length5 = target.name === 'target5' ? len.split('\\n').length : this.state.length5\n        var length6 = target.name === 'target6' ? len.split('\\n').length : this.state.length6\n        var length7 = target.name === 'target7' ? len.split('\\n').length : this.state.length7\n        var length8 = target.name === 'target8' ? len.split('\\n').length : this.state.length8\n\n        const allLengthVal = (\n            length1 * length2 * length3 * length4 * length5 *\n            length6 * length7 * length8\n            )\n                    this.setState({\n                        allLength: allLengthVal,\n                        length1: length1,\n                        length2: length2,\n                        length3: length3,\n                        length4: length4,\n                        length5: length5,\n                        length6: length6,\n                        length7: length7,\n                        length8: length8\n            });\n          }\n    handleColumnClear = e => {\n        const target = e.target\n        const value = target.type === 'danger' ? '' : target.value;\n        const name = target.name\n        \n    }\n\n    clearFields = () => {\n        this.props.form.resetFields();\n        this.setState({allLength: 0})\n        this.props.onClear()\n    }\n\n    saveTXT = () => {\n        var FileSaver = require('file-saver');\n        var blob = new Blob([this.props.combinator_result], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, \"CombinatorResults.txt\");\n    }\n    saveCSV = () => {\n        var FileSaver = require('file-saver');\n        var blob = new Blob([this.props.combinator_result], {type: \"text/plain;charset=utf-8\"});\n        FileSaver.saveAs(blob, \"CombinatorResults.csv\");\n    }\n\n\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        return (\n            <div>\n                {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} />\n            : this.props.token ?\n                <div className=\"container\" >\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', top: '15%'}} onClick={this.info}></Button>\n                    <CombinatorSettings style={{marginTop: '30px'}} className=\"unselectable\" />\n                    <Form  onSubmit={this.handleSubmit}>\n                        <div>\n                            <Checkbox type=\"checkbox\" name=\"col1\" checked={this.state.col1} onChange={this.handleCheckboxChange} style={{marginLeft: '4%', marginTop: '40px'}}>Столбец 1</Checkbox>\n                            <Button type=\"danger\" name=\"target1\" icon=\"close\" onClick={this.handleCheckboxChange}></Button>\n                            <Checkbox type=\"checkbox\" name=\"col2\" checked={this.state.col2} onChange={this.handleCheckboxChange} style={{marginLeft: '16.3%', marginTop: '40px'}}>Столбец 2</Checkbox>\n                            <Checkbox type=\"checkbox\" name=\"col3\" checked={this.state.col3} onChange={this.handleCheckboxChange} style={{marginLeft: '16.1%', marginTop: '40px'}}>Столбец 3</Checkbox>\n                            <Checkbox type=\"checkbox\" name=\"col4\" checked={this.state.col4} onChange={this.handleCheckboxChange} style={{marginLeft: '16.2%', marginTop: '40px'}}>Столбец 4</Checkbox>\n                        </div>\n                    \n                    {getFieldDecorator('value1')( \n                        <TextArea placeholder=\"Столбец 1\" id=\"combinatorForm\" name=\"target1\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n                                \n                                       \n                    {getFieldDecorator('value2')(\n                        <TextArea placeholder=\"Столбец 2\" id=\"column\" name=\"target2\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value3')(\n                        <TextArea placeholder=\"Столбец 3\" name=\"target3\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value4')(\n                        <TextArea placeholder=\"Столбец 4\" name=\"target4\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n                    <div><Checkbox type=\"checkbox\" name=\"col5\" checked={this.state.col5} onChange={this.handleCheckboxChange} style={{marginLeft: '4%', marginTop: '10px'}}>Столбец 5</Checkbox>\n                        <Checkbox type=\"checkbox\" name=\"col6\" checked={this.state.col6} onChange={this.handleCheckboxChange} style={{marginLeft: '16.3%', marginTop: '10px'}}>Столбец 6</Checkbox>\n                        <Checkbox type=\"checkbox\" name=\"col7\" checked={this.state.col7} onChange={this.handleCheckboxChange} style={{marginLeft: '16.1%', marginTop: '10px'}}>Столбец 7</Checkbox>\n                        <Checkbox type=\"checkbox\" name=\"col8\" checked={this.state.col8} onChange={this.handleCheckboxChange} style={{marginLeft: '16.2%', marginTop: '10px'}}>Столбец 8</Checkbox>\n                        {/* <Button type=\"danger\" name=\"target8\" icon=\"close\" onClick={this.handleColumnClear}></Button> */}\n                        </div>\n                    {getFieldDecorator('value5')(\n                        <TextArea placeholder=\"Столбец 5\" name=\"target5\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value6')(\n                        <TextArea placeholder=\"Столбец 6\" name=\"target6\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n                    {getFieldDecorator('value7')(\n                        <TextArea placeholder=\"Столбец 7\" name=\"target7\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}/>,\n                        )}\n\n\n                    {getFieldDecorator('value8',)(\n                        <TextArea ref= {el => this.todoTextElem = el} placeholder=\"Столбец 8\" name=\"target8\" onChange={this.onChangeColumn} allowclear=\"true\" style={{ height: '250px', width: '20%', resize: 'none', marginLeft: '50px', marginTop: '5px' }}>{this.state.target8}</TextArea>,\n                        )}\n\n\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginTop: '40px', height: '45px', width: '30%'}}>Скомбинировать {this.state.allLength} фраз </Button>\n                        <Button type=\"default\" size=\"large\" onClick={this.copyText} style={{position: 'sticky', marginLeft: '45%', width: '25%'}}>Скопировать результат</Button>\n                        <div style={{marginTop: '10px', marginLeft: '80%'}}>\n                        <Popover content=\"Скачать в .TXT\">\n                            <Button type=\"primary\" onClick={this.saveTXT} shape=\"circle\" icon=\"download\" size={\"default\"} />\n                        </Popover>,\n                        <Popover content=\"Скачать в .CSV\"> \n                            <Button type=\"default\" onClick={this.saveCSV} shape=\"circle\" icon=\"download\" size={\"default\"} style={{marginLeft: '50%'}} />\n                        </Popover>\n                        </div>\n                        <TextArea placeholder=\"Тут будет результат\" disabled={false} id=\"result\" value={this.state.allLength < 100000 ? this.props.combinator_result : \"Нельзя отобразить более 100000 результатов. Скачайте в файле\"} autosize={{minRows: 2, maxRows: 6}} style={{marginTop: '20px'}}></TextArea>\n                        <Button type=\"danger\" size=\"large\" onClick={this.clearFields} style={{position: 'sticky', marginLeft: '75%', width: '25%', marginTop: '25px'}}>Очистить поля</Button>\n                    </Form>\n\n                </div>\n\n                :\n                // <NotLoggedIn {...this.props}></NotLoggedIn>\n                <div>Кто не залогинен, тот ничего не получет ога.</div>\n                \n                }\n                </div>);\n            }\n        }\n\nconst WrappedRCombinatorForm = Form.create({ name: 'register' })(CombinatorForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        user_error: state.authReducer.user_error,\n        user_groups: state.authReducer.user_groups,\n        token : state.authReducer.token,\n        user_loading: state.authReducer.user_loading,\n        combinator_result: state.combinatorReducer.combinator_result,\n        combinator_loading: state.combinatorReducer.combinator_loading\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSubmit: (value1, value2, value3, value4, value5, value6, value7, value8, token) => dispatch(actions.combinatorAction(value1, value2, value3, value4, value5, value6, value7, value8, token )), \n        onClear: () => dispatch(actions.combinatorClear())\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(WrappedRCombinatorForm);\n","/* eslint-disable no-self-assign */\nimport axios from 'axios';\nimport * as actionTypes from '../actionTypes';\n//import { checkPropTypes } from 'prop-types';\nimport backendURL from '../../consts'\n\n\n\n\nexport const combinatorStart = () => {\n    return {\n        type: actionTypes.COMBINATOR_START\n    }\n}\n\nexport const combinatorSuccess = (result) => {\n    return {\n        type: actionTypes.COMBINATOR_SUCCESS,\n        result: result\n    }\n}\n\nexport const combinatorFail = (combinator_error) => {\n    return {\n        type: actionTypes.COMBINATOR_FAIL,\n        user_error: combinator_error\n    }\n}\n\nexport const combinatorClear = () => {\n    return {\n        type: actionTypes.COMBINATOR_CLEAR\n    }\n}\n\nexport const combinatorAction = (value1, value2, value3, value4, value5, value6, value7, value8, user_name, token) => {\n    value1 ? value1 = value1 : value1 = \"\"\n    value2 ? value2 = value2 : value2 = \"\"\n    value3 ? value3 = value3 : value3 = \"\"\n    value4 ? value4 = value4 : value4 = \"\"\n    value5 ? value5 = value5 : value5 = \"\"\n    value6 ? value6 = value6 : value6 = \"\"\n    value7 ? value7 = value7 : value7 = \"\"\n    value8 ? value8 = value8 : value8 = \"\"\n    return dispatch => {\n        dispatch(combinatorStart())\n        axios.post(`${backendURL}/combinator/`, {\n            first_column: value1,\n            second_column: value2,\n            third_column: value3,\n            fourth_column: value4,\n            fifth_column: value5,\n            sixth_column: value6,\n            seventh_column: value7,\n            eighth_column: value8,\n            account_owner: user_name\n        })\n        .then(res => {\n            const wrapedResult = res.data.result.toString().replace(/'/g, '').replace(/,/g, \"\\n\");\n            \n            var result = wrapedResult.replace(/ {2}/g, ' ')// Я не имею ни майлешего представления почему, но обернуть эту строку в цикл мне не помогло.\n            var result2 = result.replace(/ {2}/g, ' ')\n            var result3 = result2.replace(/ {2}/g, ' ')\n            var result4 = result3.replace(/ {2}/g, ' ')\n            dispatch(combinatorSuccess(result4))\n            \n        })\n        .catch(user_error => {\n            if (user_error.res) {\n                dispatch(combinatorFail(user_error.res.data))\n            }\n            })\n        }\n    }","// ДЛЯ АУТЕНТИФИКАЦИИ\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\n//ДЛЯ ПОДВТЕРЖДЕНИЯ МЫЛА\nexport const EMAIL_CONFIRMATION_REQUEST = 'EMAIL_CONFIRMATION_REQUEST'\nexport const EMAIL_CONFIRMATION_REQUEST_SUCCESS =\n  'EMAIL_CONFIRMATION_REQUEST_SUCCESS'\nexport const EMAIL_CONFIRMATION_REQUEST_ERROR =\n  'EMAIL_CONFIRMATION_REQUEST_ERROR'\n\n//ДЛЯ ДОСТУПА К ЮЗЕР МОДЕЛИ\nexport const USER_PROFILE_GET = 'USER_PROFILE_GET'\nexport const USER_PROFILE_GET_SUCCESS = 'USER_PROFILE_GET_SUCCESS'\nexport const USER_PROFILE_GET_FAIL = 'USER_PROFILE_GET_FAIL'\n\n//ДЛЯ КОМБИНАТОРА\nexport const COMBINATOR_START = 'COMBINATOR_START'\nexport const COMBINATOR_SUCCESS = 'COMBINATOR_SUCCESS'\nexport const COMBINATOR_FAIL = 'COMBINATOR_FAIL'\nexport const COMBINATOR_CLEAR = 'COMBINATOR_CLEAR'\n\n//ДЛЯ УВЕДОМЛЕНИЙ\nexport const NOTIFICATIONS_GET = 'NOTIFICATIONS_GET'\nexport const NOTIFICATIONS_GET_SUCCESS = 'NOTIFICATIONS_GET_SUCCESS'\nexport const NOTIFICATIONS_GET_FAIL = 'NOTIFICATIONS_GET_FAIL'\nexport const NOTIFICATIONS_LOGOUT = 'NOTIFICATIONS_LOGOUT'\n","import * as actionTypes from '../actionTypes';\nimport axios from 'axios'\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nexport const notificationsGetStart = () => {\n    return{\n        type: actionTypes.NOTIFICATIONS_GET\n    }\n}\n\nexport const notificationsGetSuccess = (notifications_count) => {\n    return {\n        type: actionTypes.NOTIFICATIONS_GET_SUCCESS,\n        count: notifications_count\n    }\n}\nexport const notificationsGetFail = () => {\n\n    return {\n        type: actionTypes.NOTIFICATIONS_GET_FAIL\n    }\n}\nexport const notificationsLogout = () => {\n\n    return {\n        type: actionTypes.NOTIFICATIONS_LOGOUT,        \n    }\n}\nexport const notificationsGetAction = (user_id) => {\n    return dispatch => {\n        dispatch(notificationsGetStart)\n        axios.get(`${backendURL}/crowler/notify/?not_read=${user_id}`)\n             .then (res => {\n                 const notifications_count = res.data.count;\n                 dispatch(notificationsGetSuccess(notifications_count));\n             })\n    }\n}","import axios from 'axios';\nimport * as actionTypes from '../actionTypes';\nimport * as notificationsActions from './notifications';\n\nimport backendURL from '../../consts'\n\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        success: true\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error,\n        success: false\n    }\n}\n\nexport const authLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\nexport const emailConfirmationRequest = () => {\n    return {\n      type: actionTypes.EMAIL_CONFIRMATION_REQUEST\n    }\n  }\nexport const emailConfirmationRequestSuccess= key => {\n    return {\n      type: actionTypes.EMAIL_CONFIRMATION_REQUEST_SUCCESS\n    }\n  }\n  \nexport const emailConfirmationRequestError = confirmation_error => {\n    return {\n      type: actionTypes.EMAIL_CONFIRMATION_REQUEST_ERROR,\n      confirmation_error: confirmation_error\n    }\n  }\n\nexport const userProfileGet = () => {\n    return {\n        type: actionTypes.USER_PROFILE_GET,\n    }\n}\n\nexport const userProfileGetSuccess = (username, email, groups, id) => {\n    return {\n        type: actionTypes.USER_PROFILE_GET_SUCCESS,\n        user_name: username,\n        user_email: email,\n        user_groups: groups,\n        user_id: id\n    }\n}\nexport const userProfileGetFail = (user_error) => {\n    return {\n        type: actionTypes.USER_PROFILE_GET_FAIL,\n        user_error: user_error\n    }\n}\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(authLogout());\n        }, expirationTime * 1000)\n    }\n}\nexport function emailConfirmationAction(key) {\n    return dispatch => {\n      dispatch(emailConfirmationRequest())\n      axios\n        .post(`${backendURL}/account-confirm-email/`, key )\n        .then(response => {\n          dispatch(emailConfirmationRequestSuccess())\n        })\n        .catch(confirmation_error => {\n            if(confirmation_error.response) {\n                dispatch(emailConfirmationRequestError(confirmation_error.response.data))\n            }\n        })\n    }\n  }\n\nexport const userProfileGetAction = (token) => {\n    return dispatch => {\n        dispatch(userProfileGet())\n        if (token != null) {\n        axios.defaults.headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: 'Token ' + token \n        }\n    }\n        axios.get(`${backendURL}/rest-auth/user/`)\n        .then(res => {\n            const username = res.data.username;\n            const email = res.data.email;\n            const groups = res.data.groups;\n            const id = res.data.pk\n            dispatch(userProfileGetSuccess(username, email, groups, id))\n            dispatch(notificationsActions.notificationsGetAction(id))\n        })\n        .catch(user_error => {\n            if (user_error.res) {\n                dispatch(userProfileGetFail(user_error.res.data))\n            }\n            })\n        }\n    }\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${backendURL}/rest-auth/login/`, {\n            username: username,\n            password: password\n        })\n\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 36000 * 10000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(userProfileGetAction(token));\n            dispatch(checkAuthTimeout(3600));\n            \n        })\n        .catch(error => {\n            if(error.response) {\n                dispatch(authFail(error.response.data))\n            } \n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post(`${backendURL}/rest-auth/registration/`, {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 36000 * 10000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n            \n        })\n        .catch(error => {\n            if(error.response) {\n                dispatch(authFail(error.response.data))\n                console.error(error.response.data)\n            }\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(authLogout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(authLogout());\n                dispatch(notificationsActions.notificationsLogout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(userProfileGetAction(token));\n            }\n        }\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Form, Icon, Input, Button, Spin, Alert } from 'antd';\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/auth';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        this.props.onAuth(values.username, values.password)\n      }\n    });\n    \n  }\n\n  render() {\n\n    let errorMessage = null;\n    if (this.props.error) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.props.error.non_field_errors} type=\"error\" />\n        );\n    }\n    const { getFieldDecorator } = this.props.form;\n    return (\n        <div>\n            {errorMessage}\n            { \n\n                this.props.loading ?\n\n                <Spin indicator={antIcon} />\n\n                : this.props.token !== null ?    \n                this.props.history.push('/profile/')\n                :                          \n\n\n                <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите имя пользователя!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Имя пользователя\"\n                        />,\n                    )}\n                    </Form.Item>\n                    <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: 'Введите пароль!' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        type=\"password\"\n                        placeholder=\"Пароль\"\n                        />,\n                    )}\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>Войти</Button>\n                        или\n                        <NavLink style={{marginRight: '10px'}} to='/signup/'>  Загеристрироваться</NavLink>\n\n                    </Form.Item>\n\n                </Form>\n\n                \n            }\n            </div>\n    );\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(NormalLoginForm);\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.authReducer.loading,\n        token: state.authReducer.token,\n        error: state.authReducer.error,\n        success: state.authReducer.success\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedNormalLoginForm);","import React from 'react';\nimport { connect } from 'react-redux'\nimport * as actions from '../../store/actions/auth';\n\nimport { Form, Input, Icon, Button, Alert } from 'antd';\nimport { NavLink } from 'react-router-dom'\n\n    \n  \n  class RegistrationForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n            this.props.onAuth(\n                values.username,\n                values.email,\n                values.password,\n                values.confirm\n            );\n        }\n        this.signupSucessRedirect()\n      });\n    };\n  \n    handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n  \n    compareToFirstPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Пароли не совпадают!');\n      } else {\n        callback();\n      }\n    };\n  \n    validateToNextPassword = (rule, value, callback) => {\n      const form = this.props.form;\n      if (value && this.state.confirmDirty) {\n        form.validateFields(['confirm'], { force: true });\n      }\n      callback();\n    };\n  \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      let errorMessage = null;\n      if (this.props.error) {\n        if (this.props.error.username) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.props.error.username} type=\"error\" />\n        );\n      } else if (this.props.error.email) {\n        errorMessage =(\n          <Alert style={{marginBottom: '25px'}} message={this.props.error.email} type=\"error\" />\n        );\n      } else if (this.props.error.password) {\n        errorMessage =(\n          <Alert style={{marginBottom: '25px'}} message={this.props.error.password} type=\"error\" />\n        );\n      }\n    }\n  \n      return (\n        <div>\n          {errorMessage}\n          {\n            this.props.success === true ?\n            this.props.history.push('/signup/verification_sent/')\n            :\n          \n          \n        <Form onSubmit={this.handleSubmit}>\n          \n            <Form.Item>\n            {getFieldDecorator('username', {\n                rules: [{ required: true, message: 'Введите имя пользователя!' }],\n            })(\n                <Input\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Имя пользователя\"\n                />,\n            )}\n        </Form.Item>\n\n          <Form.Item>\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'Введённый адрес не существует',\n                },\n                {\n                  required: true,\n                  message: 'Введите адрес электронной почты!',\n                },\n              ],\n            })(<Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Email\"/>)}\n          </Form.Item>\n\n          <Form.Item hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Введите пароль!',\n                }, \n                { min: 8, message: 'Пароль должен содержать минимум 8 символов!'},\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Пароль\" />)}\n          </Form.Item>\n\n          <Form.Item hasFeedback>\n            {getFieldDecorator('confirm', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Подтвердите пароль!',\n                },\n                {\n                  validator: this.compareToFirstPassword,\n                },\n              ],\n            })(<Input.Password prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"Пароль\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n\n          <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\" style={{marginRight: '10px'}}>Зарегистрироваться</Button>\n              или\n              <NavLink style={{marginRight: '10px'}} to='/login/'>  войдите под существующим аккаунтом!</NavLink>\n\n          </Form.Item>\n\n        </Form>\n          }\n        </div>\n      );\n    }\n  }\n  \n\n\nconst WrappedRegistrationForm = Form.create({ name: 'register' })(RegistrationForm);\n\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.authReducer.loading,\n        error: state.authReducer.error,\n        success: state.authReducer.success\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, email, password1, password2) => dispatch(actions.authSignup(username, email, password1, password2)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedRegistrationForm);","import React from 'react';\nimport { Button } from 'antd';\n\nclass Mainpage extends React.Component {\n    render() {\n        return (\n            <div><h1>Hello Human!</h1>\n            <p>Это сервис, который включает в себя некоторый функционал, полезный для SEO и не только.</p>\n            <p>Кнопка \"Главная\" в навигационном баре слева - ведёт на эту страницу.</p>\n            <p>Подменю \"Пользователь\" содержит информацию о пользователе, элементы управления (если есть доступ) и кнопку Выхода.</p>\n            <p>Особенно стоит остановиться на вкладке \"Управление\". Это набор инструментов для администраторов и руководителей.</p>\n\n            <h2>Приложения</h2>\n            <p>Подменю \"Приложения\" на навигационном баре слева состоит из пересекатора, с которого начался этот сервис, метрики, и, возможно, позиций(!)</p>\n            <p>Пересекатор - позволяет пересекать фразы. До 5 000 000 фраз в результате. При количестве фраз в результате более 100 000, его можно только скачать в форматах .TXT или .CSV </p>\n            <p>Метрика пока хз что может. Её ещё нет.</p>\n            <h2>Краулер</h2>\n            <p>Самое полезное - отслеживание изменений на сайте. Это подменю \"Краулер\" слева.</p>\n            <p>Категории - список всех категорий на сайте.</p>\n            <p>ПФС - список всех подфильтровых страниц на сайте. Осторожно, ID ПФС на сайте не соответствуют ID ПФС в 1С Торговля</p>\n            <p>Изменения содержат список всех зарегистрированных краулером изменений на сайте.</p>\n            <p>Метрики скорее всего как раз будут содержать всякие там позиции и прочую чепуху</p>\n            <h2>Уведомления</h2>\n            <p>Уведомления - самая важная часть краулера, поэтому вынесена отдельно. Она находится в верхнем навигационном баре</p>\n            <p>Когда краулер регистрирует изменения на сайте, он создаёт уведомление и отсылает его всем пользователям, которые подписаны на категорию, в которой произошло изменение</p>\n            <p>Если у вас есть активные(непрочитанные) уведомления, кнопка отмечается красным маркером</p>\n            <h2>Дополнительно</h2>\n            <p>На многих потенциально непонятных страницах есть краткие описания функционала и навигации. Они отмечены символом: <Button icon=\"question-circle\"></Button> и находятся в правом верхнем углу.</p>\n            \n            </div>\n        )\n    }\n\n}\n\nexport default Mainpage;","import React from 'react';\nimport * as actions from '../../store/actions/auth';\nimport { connect } from 'react-redux'\nimport { Steps, Icon } from 'antd';\n\nconst { Step } = Steps;\nclass VerificationSent extends React.Component {\n    render() {\n        return (\n            <div>\n            {\n                this.props.success === false ?\n                this.props.history.push('/')\n                :\n\n            \n            <Steps style={{width: '70%', marginLeft: '10%'}}>\n                <Step status=\"finish\" title=\"Регистрация\" description=\"\n                Вы успешно предоставили данные и прошли регистрацию.\" icon={<Icon type=\"user\" />} />\n                <Step status=\"progress\" title=\"Активация аккаунта\" description=\"\n                Теперь пользователь из группы admin должен активировать ваш аккаунт в своём личном кабинете\" icon={<Icon type=\"loading\" />} />\n                <Step status=\"wait\" title=\"Успех!\" description=\"\n                После активации, вы станете полноправным пользователем и сможете осуществить вход.\" icon={<Icon type=\"smile\" />} />\n            </Steps>\n            }\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        token: state.authReducer.token,\n        success: state.authReducer.success\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerificationSent);","import React from 'react'\nimport { notification, Icon, Spin } from 'antd';\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass NotLoggedIn extends React.Component { \n    loginNotification = () => {\n        if (this.props.token === null) {\n        notification.error({\n            message: 'Вы не авторизованы',\n            description:\n                'Для просмотра этой страницы вам нужно войти как пользователь с соответствующими правами.',\n            style: {\n                width: 600,\n                marginLeft: 335 - 600,\n            },\n        });\n        this.props.history.push('/login/')\n    } else {\n        this.props.history.push('/profile/')\n    }\n    };\n\n    render () {\n        return (\n            <div>\n            <div style={{visibility: 'hidden'}}>{this.loginNotification()}</div>\n            <Spin indicator={antIcon} />\n            <span>Проверка авторизации</span>\n            \n            </div>\n            )\n        }\n}\n\nexport default NotLoggedIn;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { connect } from 'react-redux'\nimport NotLoggedIn from '../../components/accessDenied/notLoggedIn'\nimport { Divider, Col, Row } from 'antd';\n\nconst pStyle = {\n  fontSize: 16,\n  color: 'rgba(0,0,0,0.85)',\n  lineHeight: '24px',\n  display: 'block',\n  marginBottom: 16,\n};\n\nconst DescriptionItem = ({ title, content }) => (\n  <div\n    style={{\n      fontSize: 14,\n      lineHeight: '22px',\n      marginBottom: 7,\n      color: 'rgba(0,0,0,0.65)',\n    }}\n  >\n    <p\n      style={{\n        marginRight: 8,\n        display: 'inline-block',\n        color: 'rgba(0,0,0,0.85)',\n      }}\n    >\n      {title}:\n    </p>\n    {content}\n  </div>\n);\n\n\n\nclass UserProfile extends React.Component {\n    state = { visible: false };\n\n    showDrawer = () => {\n      this.setState({\n        visible: true,\n      });\n    };\n  \n    onClose = () => {\n      this.setState({\n        visible: false,\n      });\n    };\n    render() {\n        return(\n            <div>\n                {\n                this.props.token ?\n                <div>\n                                 <p style={{ ...pStyle, marginBottom: 24 }}>Профиль пользователя</p>\n                  <p style={pStyle}>Личные данные</p>\n                  <Row>\n                    <Col span={12}>\n                      <DescriptionItem title=\"Имя\" content={this.props.user_name} />{' '}\n                    </Col>\n           \n                  </Row>\n                  <Row>\n                    <Col span={24}>\n                      <DescriptionItem\n                        title=\"Статус\"\n                        content=\"Активен\"\n                      />\n                    </Col>\n                  </Row>\n                  <Divider />\n                  <p style={pStyle}>В компании</p>\n                  <Row>\n\n                    <Col span={12}>\n                      <DescriptionItem title=\"Группа прав в сервисе\" content={this.props.user_groups} />\n                    </Col>\n                  </Row>\n                  <Divider />\n                  <p style={pStyle}>Контакты</p>\n                  <Row>\n                    <Col span={12}>\n                      <DescriptionItem title=\"Email\" content={this.props.user_email} />\n                    </Col>\n                  </Row>\n              </div>\n\n                :\n\n                <NotLoggedIn {...this.props}></NotLoggedIn>\n                }\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        user_error: state.authReducer.user_error,\n        user_groups: state.authReducer.user_groups,\n        token: state.authReducer.token,\n        user_loading: state.authReducer.user_loading,\n        user_name: state.authReducer.user_name,\n        user_email: state.authReducer.user_email\n    }\n}\nexport default connect(mapStateToProps)(UserProfile);\n","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, BackTop, Menu, Icon, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/filter-pages/'>ПФС</Link>\n    </Menu.Item>\n  </Menu>)\n\n\nclass categoryListView extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchCatID: '',\n      searchCatURL: '',\n      filters: {},\n    };\n  \n    componentDidMount() {\n      this.fetch();\n    }\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n      this.fetch()\n\n      }\n  }\n  \n    //---------------------ПОИСК----------------------\n    getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`${dataIndex} начинается с...`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </div>\n      ),\n      filterIcon: filtered => (\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n      ),\n    });\n\n    handleSearch = (selectedKeys, confirm, dataIndex) => {\n      confirm(); \n      if (dataIndex === 'category_id') {\n        this.setState({ searchCatID: selectedKeys[0] });\n      } else if (dataIndex === 'category_url'){\n        this.setState({ searchCatURL: selectedKeys[0] });\n      }\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n    };\n\n    handleReset = clearFilters => {\n      clearFilters();\n      this.setState({ searchText: '' });\n    };\n/////////////////////////////////////////ПОИСК/////////////////////////\n\n    handleTableChange = (pagination, filters, sorter) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        category_url: this.state.searchCatURL,\n        category_is_active: filters.category_is_active ? filters.category_is_active.toString() : '',\n        category_id: this.state.searchCatID,\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/category/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n    columns = [\n      {\n        title: 'Название',\n        dataIndex: 'category_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/categories/${record.category_id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'category_id',\n        key: 'id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n          title: 'URL',\n          dataIndex: 'category_url',\n          key: 'category_url',\n          render: text => <a href={`https://sima-land.ru/${text}`} rel=\"noopener noreferrer\" target='_blank' >{text}</a>,\n          ...this.getColumnSearchProps('category_url'),\n          \n\n  \n        },\n        {\n          title: 'Активна',\n          dataIndex: 'category_is_active',\n          key: 'category_is_active',\n          filters: [{ text: 'Да', value: '1' }, { text: 'Нет', value: '0' }],\n          filterMultiple: false\n  \n        },\n    ];\n    render() {\n      return (\n        <div>\n        {\n          token ?\n        <div>\n        <BackTop />\n        <Breadcrumb>\n          <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n          <Breadcrumb.Item>\n            Краулер\n          </Breadcrumb.Item>\n          <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/filter-pages/'>Категории</Link>\n          </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div> \n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\n\nexport default categoryListView;","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, BackTop, Menu, Icon, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/categories/'>Категории</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\nclass FilterpageListView extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchPFSID: '',\n      searchPFSURL: '',\n      filters: {},\n    };\n  \n    componentDidMount() {\n      this.fetch();\n    }\n      //---------------------ПОИСК----------------------\n      getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div style={{ padding: 8 }}>\n            <Input\n              ref={node => {\n                this.searchInput = node;\n              }}\n              placeholder={`${dataIndex} начинается с...`}\n              value={selectedKeys[0]}\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n              icon=\"search\"\n              size=\"small\"\n              style={{ width: 90, marginRight: 8 }}\n            >\n              Search\n            </Button>\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n              Reset\n            </Button>\n          </div>\n        ),\n        filterIcon: filtered => (\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n        ),\n        render: text => (text\n        ),\n      });\n  \n      handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm(); \n        if (dataIndex === 'filterpage_id') {\n          this.setState({ searchPFSID: selectedKeys[0] });\n        } else if (dataIndex === 'filterpage_url'){\n          this.setState({ searchPFSURL: selectedKeys[0] });\n        }\n        var pagination = this.state.pagination\n        var filters = this.state.filters\n        this.handleTableChange(pagination,filters)\n      };\n      \n  \n      handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n      };\n  /////////////////////////////////////////ПОИСК/////////////////////////  \n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        filterpage_url: this.state.searchPFSURL,\n        filterpage_is_active: filters.filterpage_is_active ? filters.filterpage_is_active.toString() : '',\n        filterpage_id: this.state.searchPFSID\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/filterpage/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n  \n    columns = [\n      {\n        title: 'Название',\n        dataIndex: 'filterpage_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/filter-pages/${record.filterpage_id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n      },\n      {\n          title: 'URL',\n          dataIndex: 'filterpage_url',\n          key: 'filterpage_url',\n          render: text => <a href={`https://sima-land.ru/${text}`} rel=\"noopener noreferrer\" target='_blank' >{text}</a>,\n          ...this.getColumnSearchProps('filterpage_url'),\n\n        },\n        {\n          title: 'Активна',\n          dataIndex: 'filterpage_is_active',\n          key: 'filterpage_is_active',\n          filters: [{ text: 'Да', value: '1' }, { text: 'Нет', value: '0' }],\n          filterMultiple: false\n  \n        },\n    ];\n\n    render() {\n      return (\n        <div>\n        {\n            token ?\n            <div>\n        <BackTop />\n        <Breadcrumb>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Краулер\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/filter-pages/'>ПФС</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\n\nexport default FilterpageListView;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass CategoryRetrieveView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.categoryID !== prevProps.match.params.categoryID) {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n        }\n    }\n    componentWillMount() {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        return(\n            <div>\n            {\n            token ?\n            <div>\n                <Descriptions title={this.state.data.category_name} bordered layout='vertical'>\n                    <Descriptions.Item label=\"ID\">{this.state.data.category_id}</Descriptions.Item>\n                    <Descriptions.Item label=\"Уровень вложенности\">{this.state.data.category_lvl}</Descriptions.Item>\n                    <Descriptions.Item label=\"Категория активна\">{this.state.data.category_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item label=\"Путь по ID\">{this.state.data.category_path}</Descriptions.Item>\n                    <Descriptions.Item label=\"URL\" span={2}>\n                        {<a href={`https://sima-land.ru/${this.state.data.category_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {this.state.data.category_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Full_name\" span={1}>\n                        {this.state.data.category_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Title\">{this.state.data.category_title}</Descriptions.Item>\n                    <Descriptions.Item label=\"Description\" span={1}>{this.state.data.category_description}</Descriptions.Item>\n                    <Descriptions.Item label=\"SEO текст\" span={3}>{this.state.data.category_seo_text}</Descriptions.Item>\n                    <Descriptions.Item label=\"Дата обновления\" span ={1}>{this.state.data.category_data_updated}</Descriptions.Item>\n                    <Descriptions.Item label=\"Canonical URL\" span ={1}>{this.state.data.category_canonical_url}</Descriptions.Item>\n                    <Descriptions.Item label=\"Родительская категория\" span ={1}>{\n                        this.state.data.category_parent_id !== 0 ? <Link to={`/crowler/categories/${this.state.data.category_parent_id}/`}>\n                        {this.state.data.category_parent_id}\n                        </Link> : 'Не имеет'}\n                    </Descriptions.Item>\n                </Descriptions>\n                </div>\n                :\n                <div>Только для авторизованных пользователей</div>}\n            </div>\n        )\n    }\n}\n\nexport default CategoryRetrieveView;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions, Breadcrumb, Menu, Icon, BackTop } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\nconst menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to='/crowler/categories/'>Категории</Link>   \n      </Menu.Item>\n    </Menu>)\n\n\nclass FilterpageRetrieveView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidMount() {\n        const filterpageID = this.props.match.params.filterpageID; \n        axios.get(`${backendURL}/crowler/filterpage/${filterpageID}`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        return(\n            <div>\n            {\n            token ?\n            <div>\n                 <BackTop />\n                    <Breadcrumb style={{marginBottom: '20px'}}>\n                        <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n                        <Breadcrumb.Item>\n                            Краулер\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item overlay={menu}>\n                            <Link to='/crowler/filter-pages/'>ПФС</Link>\n                        </Breadcrumb.Item>\n                        <Breadcrumb.Item>{this.state.data.filterpage_id}</Breadcrumb.Item>\n                    </Breadcrumb>\n                <Descriptions title={this.state.data.filterpage_name} bordered layout='vertical'>\n                    <Descriptions.Item label=\"ID\">{this.state.data.filterpage_id}</Descriptions.Item>\n                    <Descriptions.Item label=\"ПФС активна\">{this.state.data.filterpage_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item label=\"Причина отключения\">{this.state.data.filterpage_disabling_reason}</Descriptions.Item>\n                    <Descriptions.Item label=\"Выводится под листингом\">\n                    {this.state.data.filterpage_is_top === true ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item label=\"URL\" span={2}>\n                        {<a href={`https://sima-land.ru/${this.state.data.filterpage_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {this.state.data.filterpage_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Full_name\" span={1}>\n                        {this.state.data.filterpage_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Title\">{this.state.data.filterpage_title}</Descriptions.Item>\n                    <Descriptions.Item label=\"Description\" span={1}>{this.state.data.filterpage_description}</Descriptions.Item>\n                    <Descriptions.Item label=\"SEO текст\" span={3}>{this.state.data.filterpage_text}</Descriptions.Item>\n                    <Descriptions.Item label=\"Дата обновления\" span ={1}>{this.state.data.filterpage_data_updated}</Descriptions.Item>\n                    <Descriptions.Item label=\"Canonical URL\" span ={1}>{this.state.data.filterpage_canonical_url}</Descriptions.Item>\n                    <Descriptions.Item label=\"Впервые появилась\" span ={1}>\n                        {this.state.data.filterpage_created_at}\n                    </Descriptions.Item>\n                    </Descriptions>\n                </div>\n                :\n                <div>Только для авторизованных пользователей</div>\n                }\n                </div>\n        )\n    }\n}\n\nexport default FilterpageRetrieveView;","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, Menu, Icon, BackTop, Input, Button } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/changes/categories/'>Изменения категорий</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\nclass FilterpageChangesList extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchText: '',\n      filters: {},\n    };\n  \n    componentDidMount() {\n      this.fetch();\n    }\n      //---------------------ПОИСК----------------------\n      getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n          <div style={{ padding: 8 }}>\n            <Input\n              ref={node => {\n                this.searchInput = node;\n              }}\n              placeholder={`Search ${dataIndex}`}\n              value={selectedKeys[0]}\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\n            />\n            <Button\n              type=\"primary\"\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\n              icon=\"search\"\n              size=\"small\"\n              style={{ width: 90, marginRight: 8 }}\n            >\n              Search\n            </Button>\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n              Reset\n            </Button>\n          </div>\n        ),\n        filterIcon: filtered => (\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n        ),\n        render: text => (text\n        ),\n      });\n  \n      handleSearch = (selectedKeys, confirm) => {\n        confirm(); \n        this.setState({ searchText: selectedKeys[0] });\n        var pagination = this.state.pagination\n        var filters = this.state.filters\n        this.handleTableChange(pagination,filters)\n      };\n  \n      handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n      };\n  /////////////////////////////////////////ПОИСК/////////////////////////\n    handleTableChange = (pagination, filters, sorter) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        changed_fields: filters.changed_fields ? filters.changed_fields.toString() : '',\n        filterpage_id: this.state.searchText\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/changes/filterpage/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n    columns = [\n      {\n        title: 'Название до изменения',\n        dataIndex: 'old_filterpage_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/changes/filter-pages/${record.id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n      },\n      {\n        title: 'Изменённые поля',\n        dataIndex: 'changed_fields',\n        key: 'changed_fields',\n        render: (text) => <span>{\n          text\n          .replace('filterpage_disabling_reason','Причина отключения |')\n          .replace('filterpage_is_active_changed_at','Статус изменен (дата) |')\n          .replace('filterpage_is_active', 'Статус |')\n          .replace('filterpage_url','URL |')\n          .replace('filterpage_title','Title |')\n          .replace('filterpage_description','Description |')\n          .replace('filterpage_full_name','FN  |')\n          .replace('filterpage_text','SEO текст |')\n          .replace('filterpage_name','Название |')\n          .replace('filterpage_canonical_url','Canonical URL |')\n          .replace('filterpage_is_top','Под листингом |')\n        }</span>,\n        filters: [\n          { text: 'ПФС | Статус', value: 'is_active' },\n          { text: 'ПФС | Причина отключения', value: 'filterpage_disabling_reason' },\n          { text: 'ПФС | Статус изменён(дата)', value: 'filterpage_is_active_changed_at' },\n          { text: 'ПФС | URL', value: 'filterpage_url' },\n          { text: 'ПФС | Title', value: 'filterpage_title' },\n          { text: 'ПФС | Description', value: 'filterpage_description' },\n          { text: 'ПФС | FN', value: 'filterpage_full_name' },\n          { text: 'ПФС | SEO текст', value: 'filterpage_text' },\n          { text: 'ПФС | Название', value: 'filterpage_name' },\n          { text: 'ПФС | Canonical URL', value: 'filterpage_canonical_url' },\n          { text: 'ПФС | Под листингом', value: 'filterpage_is_top' },\n\n        ],\n        filterMultiple: false\n  \n      },\n    ];\n    render() {\n      return (\n        <div>\n        {\n            token ?\n            <div>\n        <BackTop />\n        <Breadcrumb style={{marginBottom: '20px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Краулер\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/filter-pages/'>Изменения ПФС</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\n\nexport default FilterpageChangesList;","import React from 'react';\nimport axios from 'axios';\nimport { Table, Breadcrumb, Menu, Icon, BackTop, Input, Button, Spin } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/crowler/changes/filter-pages/'>Изменения ПФС</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\nclass CategoryChangesList extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchText: '',\n      filters: {},\n    };\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n      this.fetch()\n\n      }\n  }\n    componentDidMount() {\n      this.fetch();\n    }\n  \n    //---------------------ПОИСК----------------------\n    getColumnSearchProps = dataIndex => ({\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            ref={node => {\n              this.searchInput = node;\n            }}\n            placeholder={`Search ${dataIndex}`}\n            value={selectedKeys[0]}\n            onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n            onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n            style={{ width: 188, marginBottom: 8, display: 'block' }}\n          />\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm)}\n            icon=\"search\"\n            size=\"small\"\n            style={{ width: 90, marginRight: 8 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </div>\n      ),\n      filterIcon: filtered => (\n        <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n      ),\n      render: text => (text\n      ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n      confirm(); \n      this.setState({ searchText: selectedKeys[0] });\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n    };\n\n    handleReset = clearFilters => {\n      clearFilters();\n      this.setState({ searchText: '' });\n    };\n/////////////////////////////////////////ПОИСК/////////////////////////\n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        changed_fields: filters.changed_fields ? filters.changed_fields.toString() : '',\n        category_id: this.state.searchText\n      });\n    };\n  \n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/changes/category/`,{\n        params: {\n          ...params,\n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        // Read total count from server\n        // pagination.total = data.totalCount;\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n\n    columns = [\n      {\n        title: 'Название до изменения',\n        dataIndex: 'old_category_name',\n        key: 'name',\n        render: (text, record) => <Link to={`/crowler/changes/categories/${record.id}`}>{text}</Link>,\n      },\n      {\n        title: 'ID',\n        dataIndex: 'category_id',\n        key: 'id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n        title: 'Изменённые поля',\n        dataIndex: 'changed_fields',\n        key: 'changed_fields',\n        render: (text) => <span>{\n          text\n          .replace('category_lvl','Уровень |')\n          .replace('category_is_active', 'Статус |')\n          .replace('category_url' ,'URL |')\n          .replace('category_title','Title |')\n          .replace('category_description','Description |')\n          .replace('category_full_name','FN  |')\n          .replace('category_seo_text','SEO текст |')\n          .replace('category_name','Название |')\n          .replace('category_canonical_url','Canonical URL |')\n          .replace('category_path','Путь к категории |')\n        }</span>,\n        filters: [\n          { text: 'Категория | Статус', value: 'is_active' },\n          { text: 'Категория | Уровень', value: 'category_lvl' },\n          { text: 'Категория | URL', value: 'category_url' },\n          { text: 'Категория | Title', value: 'category_title' },\n          { text: 'Категория | Description', value: 'category_description' },\n          { text: 'Категория | FN', value: 'category_full_name' },\n          { text: 'Категория | SEO текст', value: 'category_seo_text' },\n          { text: 'Категория | Название', value: 'category_name' },\n          { text: 'Категория | Canonical URL', value: 'category_canonical_url' },\n          { text: 'Категория | Путь к категории', value: 'category_path' },\n\n        ],\n        filterMultiple: false\n\n  \n      },\n    ];\n  \n    render() {\n      return (\n        <div>\n                {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} /> : token ?\n            <div>\n        <BackTop />\n        <Breadcrumb style={{marginBottom: '20px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Краулер\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/crowler/changes/categories/'>Изменения категорий</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n                }\n        </div>\n        )\n    }\n}\n\nexport default CategoryChangesList;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions, Alert, Breadcrumb, Menu, Icon, BackTop } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\nconst menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to='/crowler/changes/categories/'>Категории</Link>   \n      </Menu.Item>\n      <Menu.Item>\n        <Link to='/crowler/changes/filter-pages/'>ПФС</Link>\n      </Menu.Item>\n    </Menu>)\n\nclass FilterpageChangesView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.categoryID !== prevProps.match.params.categoryID) {\n        const filterpageID = this.props.match.params.filterpageID; \n        axios.get(`${backendURL}/crowler/changes/filterpage/${filterpageID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n        }\n    }\n    componentDidMount() {\n        const filterpageID = this.props.match.params.filterpageID; \n        axios.get(`${backendURL}/crowler/changes/filterpage/${filterpageID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        let response = this.state.data\n        return(\n            <div>\n            {\n            token ?\n            <div>\n                <BackTop />\n                <Breadcrumb style={{marginBottom: '20px'}}>\n                    <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                    Краулер\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item overlay={menu}>\n                    <Link to='/crowler/changes/filter-pages/'>Изменения</Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>{response.filterpage_id}</Breadcrumb.Item>\n                </Breadcrumb>\n                <Descriptions title={response.filterpage_id} bordered layout='vertical'>\n                    <Descriptions.Item label=\"Дата и время проверки\"span={1}>\n                        {response.filterpage_data_changed ? response.filterpage_data_changed.replace('T', ' ') : ''}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Поля изменены\" span ={2}>{response.changed_fields}</Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старое название\"span={1}>\n                        {response.old_filterpage_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новое название\"span={2}>\n                        {response.new_filterpage_name !== response.old_filterpage_name ? \n                        <Alert message={response.new_filterpage_name} type='error'></Alert> : \n                        response.new_filterpage_name}\n                    </Descriptions.Item>\n\n                    \n                    <Descriptions.Item label=\"Старое 'ПФС активна'\" span={1}>{response.old_filterpage_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новое 'ПФС активна'\" span={2}>\n                        {response.new_filterpage_is_active !== response.old_filterpage_is_active ? \n                        <Alert message={response.new_filterpage_is_active === 1 ? 'Да' : 'Нет'} type='error'></Alert> : \n                        response.new_filterpage_is_active === 1 ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n                    \n                    <Descriptions.Item label=\"Старая причина отключения\"span={1}>\n                        {response.old_filterpage_disabling_reason !== undefined ? response.old_filterpage_disabling_reason :\n                        'Отсутствует'}\n                        </Descriptions.Item>\n                    <Descriptions.Item label=\"Новая причина отключения\"span={2}>\n                        {response.new_filterpage_url !== undefined ?\n                            response.new_filterpage_disabling_reason !== response.old_filterpage_disabling_reason ? \n                            <Alert message={response.new_filterpage_disabling_reason} type='error'></Alert> : \n                            response.new_filterpage_disabling_reason :\n                        'Отсутствует'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старое 'Выводится под листингом'\"span={1}>\n                        {response.old_filterpage_is_top === true ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новое 'Выводится под листингом'\"span={2}>\n                        {response.new_filterpage_is_top !== response.old_filterpage_is_top ? \n                        <Alert message={response.new_filterpage_is_top === true ? 'Да' : 'Нет'} type='error'></Alert> : \n                        response.new_filterpage_is_top === true ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый URL\" span={1}>\n                        {response.old_filterpage_url !== undefined ? \n                        <a href={`https://sima-land.ru/${response.old_filterpage_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {response.old_filterpage_url}\n                        </a>\n                        :\n                        'Отсутствует'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новый URL\" span={2}>\n                        {response.new_filterpage_url !== undefined ?\n                        <a href={`https://sima-land.ru/${response.new_filterpage_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_filterpage_url !== response.old_filterpage_url ? \n                            <Alert message={response.new_filterpage_url} type='error'></Alert> : \n                            response.new_filterpage_url}\n                        </a>\n                        :\n                        'Удалён'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Full_name\" span={1}>\n                        {response.old_filterpage_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Full_name\" span={2}>\n                        {response.new_filterpage_full_name !== response.old_filterpage_full_name ? \n                        <Alert message={response.new_filterpage_full_name} type='error'></Alert> : \n                        response.new_filterpage_full_name}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Title\" span={1}>{response.old_filterpage_title}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Title\" span={2}>\n                        {response.new_filterpage_title !== response.old_filterpage_title ? \n                        <Alert message={response.new_filterpage_title} type='error'></Alert> : \n                        response.new_filterpage_title}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Description\" span={1}>{response.old_filterpage_description}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Description\" span={2}>\n                        {response.new_filterpage_description !== response.old_filterpage_description ? \n                        <Alert message={response.new_filterpage_description} type='error'></Alert> : \n                        response.new_filterpage_description}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый SEO текст\" span={3}>{response.old_filterpage_text}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новый SEO текст\" span={3}>\n                        {response.new_filterpage_text !== response.old_filterpage_text ? \n                        <Alert message={response.new_filterpage_text} type='error'></Alert> : \n                        response.new_filterpage_text}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Canonical URL\" span ={1}>\n                        {<a href={`https://sima-land.ru/${response.old_filterpage_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.old_filterpage_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Canonical URL\" span ={2}>\n                        {<a href={`https://sima-land.ru/${response.new_filterpage_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_filterpage_canonical_url !== response.old_filterpage_canonical_url ? \n                            <Alert message={response.new_filterpage_canonical_url} type='error'></Alert> : response.new_filterpage_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старое 'Впервые появилась'\" span ={1}>\n                        {response.old_filterpage_created_at}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новое 'Впервые появилась'\" span ={2}>\n                        {response.new_filterpage_created_at !== response.old_filterpage_created_at ? \n                        <Alert message={response.new_filterpage_created_at} type='error'></Alert> : response.new_filterpage_created_at}\n                    </Descriptions.Item>\n                </Descriptions>\n            </div>\n            :\n            <div>Только для авторизованных пользователей</div>\n            }\n            </div>\n        )\n    }\n}\n\nexport default FilterpageChangesView;","import React from 'react';\nimport axios from 'axios';\nimport { Descriptions, Alert, Breadcrumb, Menu, Icon, BackTop, Spin } from 'antd';\nimport { Link } from 'react-router-dom';\nimport backendURL from '../../consts'\n\nconst token = localStorage.getItem('token');\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\nconst menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to='/crowler/changes/categories/'>Категории</Link>   \n      </Menu.Item>\n      <Menu.Item>\n        <Link to='/crowler/changes/filter-pages/'>ПФС</Link>\n      </Menu.Item>\n    </Menu>)\n\nclass CategoryChangesView extends React.Component {\n    state = {\n        data: {}\n    }\n    componentDidUpdate (prevProps) {\n        if (this.props.match.params.categoryID !== prevProps.match.params.categoryID) {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/changes/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n        }\n    }\n    componentDidMount() {\n        const categoryID = this.props.match.params.categoryID; \n        axios.get(`${backendURL}/crowler/changes/category/${categoryID}/`)\n            .then(res => {\n                this.setState({\n                    data: res.data\n                })\n            })\n    }\n    render() {\n        let response = this.state.data\n        return(\n            <div>\n                            {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} /> : token ?\n            <div>\n                <BackTop />\n                <Breadcrumb style={{marginBottom: '20px'}}>\n                    <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n                    <Breadcrumb.Item>\n                        Краулер \n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item overlay={menu}>\n                        <Link to='/crowler/changes/filter-pages/'>Изменения</Link>\n                    </Breadcrumb.Item>\n                    <Breadcrumb.Item>{response.category_id}</Breadcrumb.Item>\n                </Breadcrumb>\n                <Descriptions title={response.category_id} bordered layout='vertical'>\n                    <Descriptions.Item label=\"Дата и время проверки\"span={1}>\n                        {response.category_data_changed ? response.category_data_changed.replace('T', ' ') : ''}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Поля изменены\" span ={2}>{response.changed_fields}</Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старое название\"span={1}>\n                        {response.old_category_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новое название\"span={2}>\n                        {response.new_category_name !== response.old_category_name ? \n                        <Alert message={response.new_category_name} type='error'></Alert> : \n                        response.new_category_name}\n                    </Descriptions.Item>\n\n                    \n                    <Descriptions.Item label=\"Старое 'Категория активна'\" span={1}>{response.old_category_is_active === 1 ? 'Да' : 'Нет'}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новое 'Категория активна'\" span={2}>\n                        {response.new_category_is_active !== response.old_category_is_active ? \n                        <Alert message={response.new_category_is_active === 1 ? 'Да' : 'Нет'} type='error'></Alert> : \n                        response.new_category_is_active === 1 ? 'Да' : 'Нет'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый URL\" span={1}>\n                        {response.old_category_url !== undefined ? \n                        <a href={`https://sima-land.ru/${response.old_category_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                        {response.old_category_url}\n                        </a>\n                        :\n                        'Отсутствует'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новый URL\" span={2}>\n                        {response.new_category_url !== undefined ?\n                        <a href={`https://sima-land.ru/${response.new_category_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_category_url !== response.old_category_url ? \n                            <Alert message={response.new_category_url} type='error'></Alert> : \n                            response.new_category_url}\n                        </a>\n                        :\n                        'Удалён'}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Full_name\" span={1}>\n                        {response.old_category_full_name}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Full_name\" span={2}>\n                        {response.new_category_full_name !== response.old_category_full_name ? \n                        <Alert message={response.new_category_full_name} type='error'></Alert> : \n                        response.new_category_full_name}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Title\" span={1}>{response.old_category_title}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Title\" span={2}>\n                        {response.new_category_title !== response.old_category_title ? \n                        <Alert message={response.new_category_title} type='error'></Alert> : \n                        response.new_category_title}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Description\" span={1}>{response.old_category_description}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Description\" span={2}>\n                        {response.new_category_description !== response.old_category_description ? \n                        <Alert message={response.new_category_description} type='error'></Alert> : \n                        response.new_category_description}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый SEO текст\" span={3}>{response.old_category_seo_text}</Descriptions.Item>\n                    <Descriptions.Item label=\"Новый SEO текст\" span={3}>\n                        {response.new_category_seo_text !== response.old_category_text ? \n                        <Alert message={response.new_category_seo_text} type='error'></Alert> : \n                        response.new_category_seo_text}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старый Canonical URL\" span ={1}>\n                        {<a href={`https://sima-land.ru/${response.old_category_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.old_category_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новый Canonical URL\" span ={2}>\n                        {<a href={`https://sima-land.ru/${response.new_category_canonical_url}/` } rel=\"noopener noreferrer\" target='_blank'>\n                            {response.new_category_canonical_url !== response.old_category_canonical_url ? \n                            <Alert message={response.new_category_canonical_url} type='error'></Alert> : response.new_category_canonical_url}\n                        </a>}\n                    </Descriptions.Item>\n\n                    <Descriptions.Item label=\"Старая родительская категория\" span ={1}>\n                    {response.old_category_parent_id !== 0 ? <Link to={`/crowler/categories/${response.old_category_parent_id}/`}>\n                        {response.old_category_parent_id}\n                        </Link> : 'Не имеет'}\n                    </Descriptions.Item>\n                    <Descriptions.Item label=\"Новая родительская категория\" span ={2}>\n                        {response.new_category_parent_id !== response.old_category_parent_id ? \n                        <Alert message={response.new_category_parent_id !== 0 ? <Link to={`/crowler/categories/${response.new_category_parent_id}/`}>\n                        {response.new_category_parent_id}\n                        </Link> : 'Не имеет'} type='error'></Alert> : response.new_category_parent_id}\n                    </Descriptions.Item>\n                </Descriptions>\n                </div> :\n                            <div>Только для авторизованных пользователей</div> }\n            </div>\n        )\n    }\n}\n\nexport default CategoryChangesView;","import React from 'react'\nimport { BackTop, Menu, Table, Breadcrumb, Icon, Divider, Button, message, Modal, Input } from 'antd';\nimport axios from 'axios'\nimport { Link }  from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport backendURL from '../../../consts'\n\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token \n  }\n}\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/notifications/is-read/'>Прочитанные</Link>\n    </Menu.Item>\n  </Menu>)\n\n\n\n\nclass NotifyPopup extends React.Component {\n    state = {\n      data: [],\n      pagination: {current: 1},\n      loading: false,\n      searchCatID: '',\n      searchPFSID: '',\n      filters: {},\n    };\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n        this.fetch()\n\n      }\n  }\n  info() {\n    Modal.info({\n      title: 'Уведомления',\n      content: (<div>\n        <p>Это - уведомления. Они появляются, когда краулер регистриует изменения на сайте</p>\n        <p>Нажатие на ID ПФС записи переведёт вас на страницу подфильтровой страницы в общем списке. Полезно, когда действие - \"Создано\"</p>\n        <p>Если \"Действие\" у записи - \"Изменено\", значит изменилась страница, ранее зарегестрированная краулером. В этом случае нажатие на текст \"Изменено\" отправит вас к изменениям страницы</p>\n        <p>Вы можете отфильтровать список по действию или по изменённым полям(Это особенно полезно тем, что краулер также регистриует появляние или исчезновение товара на странице)</p>\n        <p>Для того, чтобы перенести уведомление в прочитанные - нажмите синюю кнопку \"Прочитать\"</p>\n        <p>Для того, чтобы удалить уведомления без возможности его прочтения в будущем - нажмите кнопку \"Удалить\"</p>\n        <p>К прочитанным уведомлениям можно попасть при помощи хлебных крошек, нажав на \"Непрочитанные\" --> \"Прочитанные\"</p>\n        <p>Новых уведомлений не появится, если вы не подписаны на разделы сайта. Для управления подписками есть специальная кнопка слева от этой</p>\n        <p>Справа от этой кнопки находится кнопка \"Прочесть всё\". Она переносит все непрочитанные сообщения в \"Прочитанные\". Это может занять некоторое время.</p>\n      </div>),\n      onOk() {},\n    });\n  }\n    componentDidMount() {\n      if (this.props.user_id){ \n        this.fetch()\n      }\n    }\n//---------------------ПОИСК----------------------\ngetColumnSearchProps = dataIndex => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          this.searchInput = node;\n        }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        icon=\"search\"\n        size=\"small\"\n        style={{ width: 90, marginRight: 8 }}\n      >\n        Search\n      </Button>\n      <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n        Reset\n      </Button>\n    </div>\n  ),\n  filterIcon: filtered => (\n    <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n  ),\n  render: text => (text\n  ),\n});\n\nhandleSearch = (selectedKeys, confirm, dataIndex) => {\n  confirm(); \n  if (dataIndex === 'filterpage_id') {\n    this.setState({ searchPFSID: selectedKeys[0] });\n  } else if (dataIndex === 'category_id'){\n    this.setState({ searchCatID: selectedKeys[0] });\n  }\n  var pagination = this.state.pagination\n  var filters = this.state.filters\n  this.handleTableChange(pagination,filters)\n};\n\nhandleReset = clearFilters => {\n  clearFilters();\n  this.setState({ searchPFSID: '',\n                  searchCatID: '',\n});\n};\n/////////////////////////////////////////ПОИСК/////////////////////////\n    columns = [\n      {\n        title: 'ID категории',\n        dataIndex: 'category_id',\n        key: 'category_id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n        title: 'ID ПФС',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n\n\n      },\n      {\n          title: 'Действие',\n          dataIndex: 'action_is',\n          key: 'action_is',\n          render: (text, record) => <span>{text === 'created'? <div>Создано</div> : <div><Link rel=\"noopener noreferrer\" target='_blank' to={record.filterpage_id ? `/crowler/changes/filter-pages/${record.action_id}`: `/crowler/changes/categories/${record.action_id}`}>Изменено</Link></div>}</span>,\n          filters: [{ text: 'Создано', value: 'created' }, { text: 'Изменено', value: 'changed' }],\n          filterMultiple: false\n  \n        },\n        {\n          title: 'Изменённые поля',\n          dataIndex: 'action_subjects',\n          key: 'action_subjects',\n          render: (text) => <span>{\n            text\n            .replace('filterpage_disabling_reason','Причина отключения |')\n            .replace('filterpage_is_active_changed_at','Статус изменен (дата) |')\n            .replace('filterpage_is_active', 'Статус |')\n            .replace('filterpage_url','URL |')\n            .replace('filterpage_title','Title |')\n            .replace('filterpage_description','Description |')\n            .replace('filterpage_full_name','FN  |')\n            .replace('filterpage_text','SEO текст |')\n            .replace('filterpage_name','Название |')\n            .replace('filterpage_canonical_url','Canonical URL |')\n            .replace('filterpage_is_top','Под листингом |')\n          }</span>,\n          filters: [\n            { text: 'ПФС | Статус', value: 'is_active' },\n            { text: 'ПФС | Причина отключения', value: 'filterpage_disabling_reason' },\n            { text: 'ПФС | Статус изменён(дата)', value: 'filterpage_is_active_changed_at' },\n            { text: 'ПФС | URL', value: 'filterpage_url' },\n            { text: 'ПФС | Title', value: 'filterpage_title' },\n            { text: 'ПФС | Description', value: 'filterpage_description' },\n            { text: 'ПФС | FN', value: 'filterpage_full_name' },\n            { text: 'ПФС | SEO текст', value: 'filterpage_text' },\n            { text: 'ПФС | Название', value: 'filterpage_name' },\n            { text: 'ПФС | Canonical URL', value: 'filterpage_canonical_url' },\n            { text: 'ПФС | Под листингом', value: 'filterpage_is_top' },\n  \n          ],\n          filterMultiple: false\n  \n        },\n        { \n          title: 'Действия',\n          dataIndex: 'id',\n          key: 'actions',\n          render: (text, row) => (\n          <span>\n          <span className=\"custom-links\" onClick={() => this.read(row.id)}>Прочитать</span>\n          <Divider type=\"vertical\" />\n          <span style={{'color': 'red', 'cursor': 'pointer'}} onClick={() => this.delete(row.id)}>Удалить</span>\n          </span>\n          )\n  \n        },\n    ];\n\n    read = (id) => {\n      this.setState({ loading: true });\n      axios.post(`${backendURL}/crowler/notify/read/`, {notification_id: id})\n      message\n      .loading('Помечаем прочитанным. Это может занять некоторое время.', 2.5)\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n      this.setState({ loading: false });\n\n    }\n    delete = (id) => {\n      this.setState({ loading: true });\n      axios.post(`${backendURL}/crowler/notify/delete/`, {notification_id: id})\n      message\n      .loading('Удаляем из базы. Это может занять некоторое время.', 2.5)\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n      this.setState({ loading: false });\n    }\n\n\n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n        filters: filters,\n      });\n      this.fetch({\n        page: pagination.current,\n        action_is: filters.action_is ? filters.action_is.toString() : '',\n        action_subjects: filters.action_subjects ? filters.action_subjects.toString() : '',\n        filterpage_id: this.state.searchPFSID,\n        category_id: this.state.searchCatID,\n      });\n    };\n\n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}/crowler/notify/?not_read=${this.props.user_id}`,{\n        params: {\n          ...params,\n          \n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n  \n    render() {\n      return (\n        <div>\n        {this.props.user_id ?\n        <div>\n        <BackTop />\n        <Button type=\"default\" size=\"small\" style={{'position': 'absolute', 'right': '20%'}}><Link to=\"/notifications/subscriptions/\">Управление подписками</Link></Button>\n        <Button type=\"danger\" size=\"small\" style={{'position': 'absolute', 'right': '2%'}} onClick={() => this.read('all')}>Прочесть всё</Button>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%'}} onClick={this.info}></Button>\n        \n        <Breadcrumb style={{marginBottom: '10px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Уведомления\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/notifications/'>Непрочитанные</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n          rowKey=\"id\"\n          style={{marginTop: '20px'}}\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.notificationsReducer.count,\n        user_id: state.authReducer.user_id,\n    }\n}\n\nexport default connect(mapStateToProps)(NotifyPopup);","import React from 'react'\nimport { BackTop, Menu, Table, Breadcrumb, Icon, Button, message, Modal, Input } from 'antd';\nimport axios from 'axios'\nimport { Link }  from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport backendURL from '../../../consts'\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n  axios.defaults.headers = {\n    \"Content-Type\": \"application/json\",\n    Authorization: 'Token ' + token}\n  }\nconst menu = (\n  <Menu>\n    <Menu.Item>\n      <Link to='/notifications/'>Непрочитанные</Link>   \n    </Menu.Item>\n  </Menu>)\n\n\n\n\nclass NotificationsRead extends React.Component {\n    state = {\n      data: [],\n      pagination: {},\n      loading: false,\n      searchPFSID: '',\n      searchCatID: '',\n      filters: {},\n    };\n    componentDidUpdate (prevProps) {\n      if (this.props.user_id !== prevProps.user_id) {\n      this.fetch()\n\n      }\n  }\n  info() {\n    Modal.info({\n      title: 'Прочитанные уведомления',\n      content: (<div>\n        <p>Это - прочитанные уведомления. Склад уведомлений, которые вы отложили на потом.</p>\n        <p>Все элементы навигации и функци те же, что и в непрочитанных за малыми изменениями</p>\n        <p>Доступно только действие \"Удалить\". Оно удаляет уведомление без возможности прочтения в будущем.</p>\n        <p>Справа от этой кнопки находится кнопка \"Удалить всё\". Она удаляет все уведомления без возможности их прочтения в дальнейшем. Это может занять некоторое время.</p>\n      </div>),\n      onOk() {},\n    });\n  }\n\n    componentDidMount() {\n      if (this.props.user_id){ \n        this.fetch()\n      }\n    }\n\n//---------------------ПОИСК----------------------\ngetColumnSearchProps = dataIndex => ({\n  filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n    <div style={{ padding: 8 }}>\n      <Input\n        ref={node => {\n          this.searchInput = node;\n        }}\n        placeholder={`Search ${dataIndex}`}\n        value={selectedKeys[0]}\n        onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n        onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        style={{ width: 188, marginBottom: 8, display: 'block' }}\n      />\n      <Button\n        type=\"primary\"\n        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n        icon=\"search\"\n        size=\"small\"\n        style={{ width: 90, marginRight: 8 }}\n      >\n        Search\n      </Button>\n      <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n        Reset\n      </Button>\n    </div>\n  ),\n  filterIcon: filtered => (\n    <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n  ),\n  render: text => (text\n  ),\n});\n\nhandleSearch = (selectedKeys, confirm, dataIndex) => {\n  confirm(); \n  if (dataIndex === 'filterpage_id') {\n    this.setState({ searchPFSID: selectedKeys[0] });\n  } else if (dataIndex === 'category_id'){\n    this.setState({ searchCatID: selectedKeys[0] });\n  }\n  var pagination = this.state.pagination\n  var filters = this.state.filters\n  this.handleTableChange(pagination,filters)\n};\n\nhandleReset = clearFilters => {\n  clearFilters();\n  this.setState({ searchPFSID: '',\n                  searchCatID: '',\n});\n};\n/////////////////////////////////////////ПОИСК/////////////////////////\n\n    columns = [\n      {\n        title: 'ID категории',\n        dataIndex: 'category_id',\n        key: 'category_id',\n        ...this.getColumnSearchProps('category_id'),\n      },\n      {\n        title: 'ID ПФС',\n        dataIndex: 'filterpage_id',\n        key: 'filterpage_id',\n        ...this.getColumnSearchProps('filterpage_id'),\n      },\n      {\n          title: 'Действие',\n          dataIndex: 'action_is',\n          key: 'action_is',\n          render: (text, record) => <span>{text === 'created'? <div>Создано</div> : <div><Link rel=\"noopener noreferrer\" target='_blank' to={record.filterpage_id ? `/crowler/changes/filter-pages/${record.action_id}`: `/crowler/changes/categories/${record.action_id}`}>Изменено</Link></div>}</span>,\n          filters: [{ text: 'Создано', value: 'created' }, { text: 'Изменено', value: 'changed' }],\n          filterMultiple: false\n  \n        },\n        {\n          title: 'Изменённые поля',\n          dataIndex: 'action_subjects',\n          key: 'action_subjects',\n          render: (text) => <span>{\n            text\n            .replace('filterpage_disabling_reason','Причина отключения |')\n            .replace('filterpage_is_active_changed_at','Статус изменен (дата) |')\n            .replace('filterpage_is_active', 'Статус |')\n            .replace('filterpage_url','URL |')\n            .replace('filterpage_title','Title |')\n            .replace('filterpage_description','Description |')\n            .replace('filterpage_full_name','FN  |')\n            .replace('filterpage_text','SEO текст |')\n            .replace('filterpage_name','Название |')\n            .replace('filterpage_canonical_url','Canonical URL |')\n            .replace('filterpage_is_top','Под листингом |')\n          }</span>,\n          filters: [\n            { text: 'ПФС | Статус', value: 'is_active' },\n            { text: 'ПФС | Причина отключения', value: 'filterpage_disabling_reason' },\n            { text: 'ПФС | Статус изменён(дата)', value: 'filterpage_is_active_changed_at' },\n            { text: 'ПФС | URL', value: 'filterpage_url' },\n            { text: 'ПФС | Title', value: 'filterpage_title' },\n            { text: 'ПФС | Description', value: 'filterpage_description' },\n            { text: 'ПФС | FN', value: 'filterpage_full_name' },\n            { text: 'ПФС | SEO текст', value: 'filterpage_text' },\n            { text: 'ПФС | Название', value: 'filterpage_name' },\n            { text: 'ПФС | Canonical URL', value: 'filterpage_canonical_url' },\n            { text: 'ПФС | Под листингом', value: 'filterpage_is_top' },\n  \n          ],\n          filterMultiple: false\n  \n        },\n        { \n          title: 'Действия',\n          dataIndex: 'id',\n          key: 'actions',\n          render: (text, row) => (\n          <span>\n          <span style={{'color': 'red', 'cursor': 'pointer'}} onClick={() => this.delete(row.id)}>Удалить</span>\n          </span>\n          )\n  \n        },\n    ];\n\n    delete = (id) => {\n      this.setState({ loading: true });\n      axios.post(`${backendURL}crowler/notify/delete/`, {notification_id: id})\n      message\n      .loading('Удаляем из базы. Это может занять некоторое время.', 2.5)\n      var pagination = this.state.pagination\n      var filters = this.state.filters\n      this.handleTableChange(pagination,filters)\n      this.setState({ loading: false });\n    }\n\n    handleTableChange = (pagination, filters) => {\n      const pager = { ...this.state.pagination };\n      pager.current = pagination.current;\n      this.setState({\n        pagination: pager,\n      });\n      this.fetch({\n        page: pagination.current,\n        action_is: filters.action_is ? filters.action_is.toString() : '',\n        action_subjects: filters.action_subjects ? filters.action_subjects.toString() : '',\n        filterpage_id: this.state.searchPFSID,\n        category_id: this.state.searchCatID\n      });\n    };\n\n    fetch = (params = {}) => {\n      this.setState({ loading: true });\n      axios.get(`${backendURL}crowler/notify/?is_actual=${this.props.user_id}`,{\n        params: {\n          ...params,\n          \n        }})\n        .then(res => {\n        const pagination = { ...this.state.pagination };\n        pagination.total = res.data.count;\n        pagination.pageSize = 25\n        pagination.position = 'both'\n        this.setState({\n          loading: false,\n          data: res.data.results,\n          pagination,\n        });\n      });\n    };\n  \n    render() {\n      return (\n        <div>\n        {this.props.user_id ?\n        <div>\n        <BackTop />\n        <Button type=\"default\" size=\"small\" style={{'position': 'absolute', 'right': '20%'}}><Link to=\"/notifications/subscriptions/\">Управление подписками</Link></Button>\n        <Button type=\"danger\" size=\"small\" style={{'position': 'absolute', 'right': '2%'}} onClick={() => this.delete('all')}>Удалить всё</Button>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%'}} onClick={this.info}></Button>\n        <Breadcrumb style={{marginBottom: '10px'}}>\n            <Breadcrumb.Item><Link to=\"/\"><Icon type=\"home\"></Icon></Link></Breadcrumb.Item>\n            <Breadcrumb.Item>\n            Уведомления\n            </Breadcrumb.Item>\n            <Breadcrumb.Item overlay={menu}>\n            <Link to='/notifications/is-read/'>Прочитанные</Link>\n            </Breadcrumb.Item>\n        </Breadcrumb>\n        <Table\n          columns={this.columns}\n          dataSource={this.state.data}\n          pagination={this.state.pagination}\n          loading={this.state.loading}\n          onChange={this.handleTableChange}\n          rowKey=\"id\"\n        />\n        </div>\n        :\n        <div>Только для авторизованных пользователей</div>\n        }\n        </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        count: state.notificationsReducer.count,\n        user_id: state.authReducer.user_id,\n    }\n}\n\nexport default connect(mapStateToProps)(NotificationsRead);","import React from 'react';\nimport { Button, Select, Alert } from 'antd'\nimport axios from 'axios'\nimport backendURL from '../../../consts'\n\n\n\nconst token = localStorage.getItem('token');\nif (token != null) {\n    axios.defaults.headers = {\n        \"Content-Type\": \"application/json\",\n        Authorization: 'Token ' + token \n    }\n}\n\nclass NotificationSubsciptions extends React.Component {\n    state = {\n        selectedItems: [],\n        options: [],\n        success: undefined,\n        error: undefined,\n    };\n    componentDidMount() {\n        axios.get(`${backendURL}/crowler/notify/categories/`)\n            .then(res => {\n                this.setState({\n                    options: res.data\n                })\n            })\n        axios.get(`${backendURL}/crowler/notify/subscriptions/`)\n            .then(res => {\n                this.setState({\n                    selectedItems: res.data\n                })\n            })\n    }\n\n    handleChange = selectedItems => {\n        this.setState({ selectedItems });\n    };\n\n    updateSubscriptions = () => {\n        axios.post(`${backendURL}/crowler/notify/subscriptions/update/`, {\n            responsibilities: this.state.selectedItems\n        })\n            .then(res => {\n                this.setState({\n                    success: res.data\n                })\n            })\n            .catch(error => {\n                this.setState({\n                    error: error.data\n                })\n            })\n            \n    }\n    render() {\n        const { selectedItems } = this.state;\n        const filteredOptions = this.state.options.filter(o => !selectedItems.includes(o));\n        let errorMessage = null;\n        let successMessage = null;\n\n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n        return (\n          <div>\n          {\n          token ?\n        <div>\n          <div>\n          {errorMessage}\n          {successMessage}\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Выберите категории для получения уведомлений\"\n                    value={selectedItems}\n                    onChange={this.handleChange}\n                    style={{ width: '30%'}}\n                >\n                    {filteredOptions.map(item => (\n                    <Select.Option key={item} value={item}>\n                        {item}\n                    </Select.Option>\n                    ))}\n                </Select>\n                </div>\n            <Button type=\"primary\" style={{'marginLeft': '20%', 'marginTop': '2%'}} onClick={this.updateSubscriptions}>Обновить подписки</Button>\n            <div>\n                <h1>Управление подписками</h1>\n                <p>Этот интерфейс отвечает за то, уведомления об изменениях в каких категориях вы будете получать.</p>\n                <p>Вы будете получать уведомления только для тех категорий, которые есть в поле.</p>\n                <p>При нажатии на поле, откроется список категорий в транслитерированом виде.</p>\n                <p>Для упрощения поиска категории в списке вы можете начать вводить транслитерированное название категории</p>\n                <p>Для подтверждения и записи изменений в базу, нажмите кнопку \"Обновить подписки\".</p>\n                <p>Этот список можно изменить в любой момент</p>\n                <p>Изменения вступят в силу моментально и вы начнёте получать новые уведомления</p>\n                <p>Это не влияет на уже полученные изменения. Только на будущие.</p>\n                <p>При нажатии на кнопку \"Получить все уведомления по подписанным категориям\"(если я её запилю) в ваш список непрочитанного будут добавлены АБСОЛЮТНО ВСЕ уведомления\n                по выбранным категориям (не забудьте сначала нажать \"Обновить подписки\").</p>\n                <p>Это может занять ОЧЕНЬ длительное время. В зависимости от того, сделает разработчик очистку старых записей в БД или нет.</p>\n\n            </div>\n            </div>\n            :\n            <div>Только для авторизованных пользователей</div>\n            }\n          </div>\n        );\n      }\n}\n\nexport default NotificationSubsciptions;","import React from 'react'\nimport axios from 'axios'\nimport { Form, Icon, Input, Button, Modal, Radio, Alert, Select } from 'antd';\nimport backendURL from '../../consts'\n\n\n\nconst token = localStorage.getItem('token');\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass GroupsManagement extends React.Component {\n    state ={\n        groupsRadio: 'add',\n        groupsSelected: [],\n        groupsOptions: [],\n        success: '',\n        error: ''\n    }\n\n    componentDidMount() {\n        axios.get(`${backendURL}/api/admin/groups/`)\n            .then(res => {\n                this.setState({\n                    groupsOptions: res.data\n                })\n            })\n    }\n\n    updatingInfo() {\n        Modal.info({\n          title: 'Управление группами',\n          content: (<div>\n            <p>При регистрации пользователя, у него нет ни одной группы</p>\n            <p>Основная функция сейчас - присвоение или лишение прав администратора другому пользователю, на случай если кто-то уйдёт. </p>\n            <p>Права администратора нужны для редактирования списка категорий в базе и для активации пользователей.</p>\n            <p>Управлять группами могут только члены группы admin. Например, руководители.</p>\n            <p>Это, как и весь раздел \"Управление\" сделано для обеспечения высокой автономности сервиса без квалифицированного администратора и обеспечения безопасности данных. </p>\n            <p></p>\n          </div>),\n          onOk() {},\n        });\n      }\n    handleGroupsChange = groupsSelected => {\n        this.setState({ groupsSelected });\n    };\n\n    groupsRadioChanger = e => {\n        this.setState({\n            groupsRadio: e.target.value,\n        });\n      };\n      \n    handleGroupsUpdate = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios.post(`${backendURL}/api/admin/groups/update/`, {\n              updating_user: values.groupsUsername,\n              action: this.state.groupsRadio,\n              groups_to_update: this.state.groupsSelected\n            })\n            .then(res => {\n                this.setState({\n                    success: res.data,\n                    error: '',\n                })\n            })\n        \n            .catch(error => {\n                this.setState({\n                    error: error.response.data,\n                    success: '',\n                })\n            \n        })\n            \n          }\n        });\n      };\n    \n\n    render() {\n        let errorMessage = null\n        let successMessage = null\n\n    if (this.state.error) {\n        errorMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n        );\n    }\n    if (this.state.success) {\n        successMessage =(\n            <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n        );\n    }\n    const { getFieldDecorator } = this.props.form;\n\n    const { groupsSelected } = this.state;\n    const filteredOptions = this.state.groupsOptions.filter(o => !groupsSelected.includes(o));\n        return(\n            <div>\n            {errorMessage}\n            {successMessage}\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"Выберите группу для назначения пользователю\"\n                    value={groupsSelected}\n                    onChange={this.handleGroupsChange}\n                    style={{ width: '30%'}}\n                >\n                    {filteredOptions.map(item => (\n                        <Select.Option key={item} value={item}>\n                            {item}\n                        </Select.Option>\n\n                    ))}\n                </Select>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.updatingInfo}></Button>\n\n                <Form onSubmit={this.handleGroupsUpdate} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                        {getFieldDecorator('groupsUsername', {\n                            rules: [{ required: true, message: 'Введите имя пользователя, к которому применить изменения' }],\n                        })(\n                            <Input\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"Имя пользователя\"\n                            />,\n                        )}\n                    </Form.Item>\n\n                    <Radio.Group onChange={this.groupsRadioChanger} value={this.state.groupsRadio}>\n                        <Radio value={'add'}>Добавить</Radio>\n                        <Radio value={'remove'}>Удалить</Radio>\n                    </Radio.Group>\n\n                    <Form.Item>\n                        <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                            Подтвердить\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n          )\n      }\n  }\n  const WrappedGroupsManagement = Form.create({ name: 'normal_login' })(GroupsManagement);\n\n  export default WrappedGroupsManagement;","import { Form, Icon, Input, Button, Modal, Radio, Alert } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport backendURL from '../../consts'\n\n\n\n\nconst token = localStorage.getItem('token');\n\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass UserVerification extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleVerification = this.handleVerification.bind(this);\n     }\n\n    state = {\n        verificationRadio: 'verificate',\n        success: '',\n        error: ''\n    }\n    \n\n    handleVerification = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios.post(`${backendURL}/api/admin/verificate_user/`, {\n              verificating_user: values.username,\n              action: this.state.verificationRadio\n            })\n            .then(res => {\n                this.setState({\n                    success: res.data,\n                    error: '',\n                })\n            })\n        \n            .catch(error => {\n                this.setState({\n                    error: error.response.data,\n                    success: '',\n                })\n            \n        })\n            \n          }\n        });\n      };\n    \n      verificationRadioChanger = e => {\n        this.setState({\n            verificationRadio: e.target.value,\n        });\n      };\n    \n      verificationInfo() {\n        Modal.info({\n          title: 'Активация пользователя',\n          content: (<div>\n            <p>При регистрации пользователя он должен быть активирован администратором. Только после активации он может авторизовываться и пользоваться сервисом.</p>\n            <p>Для (де)активации пользователя введите его username в поле \"Имя пользователя\", выберите действие и нажмите кнопку \"Подтвердить\"</p>\n            <p>Деактивация нужна для того, чтобы пользователь, утративший доверие (например, его данные были скомпрометированы) не получил доступа к данным.</p>\n            <p>Активировать пользователя могут только члены группы admin. Например, руководители.</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n    render() {\n        let errorMessage = null;\n        let successMessage = null;\n\n\n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n\n    \n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div>\n                {errorMessage}\n                {successMessage}\n            <h1>Активация пользователя</h1>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.verificationInfo}></Button>\n\n                <Form onSubmit={this.handleVerification} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите имя пользователя, которого хотите активировать' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Имя пользователя\"\n                        />,\n                    )}\n                    </Form.Item>\n\n                <Radio.Group onChange={this.verificationRadioChanger} value={this.state.verificationRadio}>\n                    <Radio value={'verificate'}>Активировать</Radio>\n                    <Radio value={'deactivate'}>Деактивировать</Radio>\n                </Radio.Group>\n\n                <Form.Item>\n                    <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Подтвердить\n                    </Button>\n                </Form.Item>\n        </Form>\n      </div>\n        )\n    }\n}\nconst WrappedUserVerification = Form.create({ name: 'normal_login' })(UserVerification);\n\nexport default WrappedUserVerification","import { Form, Icon, Input, Button, Modal, Radio, Alert } from 'antd';\nimport React from 'react';\nimport axios from 'axios';\nimport backendURL from '../../consts'\n\n\nconst token = localStorage.getItem('token');\n\n\nif (token != null) {\n    axios.defaults.headers = {\n      \"Content-Type\": \"application/json\",\n      Authorization: 'Token ' + token}\n    }\n\nclass CategoriesUpdate extends React.Component {\n    constructor(props){\n        super(props);\n        this.handleVerification = this.handleVerification.bind(this);\n     }\n\n    state = {\n        categoriesRadio: 'add',\n        success: '',\n        error: ''\n    }\n\n    handleVerification = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            axios\n                .post(`${backendURL}/crowler/notify/categories/update/`, {\n                    category: values.username,\n                    action: this.state.categoriesRadio\n                    })\n                .then(res => {\n                    this.setState({\n                        success: res.data,\n                        error: '',\n                    })\n                })\n            \n                .catch(error => {\n                    this.setState({\n                        error: error.response.data,\n                        success: '',\n                    })\n                \n            })\n            \n          }\n        });\n      };\n    \n      verificationRadioChanger = e => {\n        this.setState({\n            categoriesRadio: e.target.value,\n        });\n      };\n    \n      verificationInfo() {\n        Modal.info({\n          title: 'Управление категориями',\n          content: (<div>\n            <p>Панель отвечает за управление списком категорий, при изменениях в которых могут приходить уведомления.</p>\n            <p>Для добавления или удаления категории, введите её относительный URL(без крайнего левого и крайнего правого слешей) в поле, выберите действие и нажмите \"Подтвердить\"</p>\n            <p>Например: \"kanctovary\" или \"kanctovary/shkolnye-tovary\" или \"kanctovary/shkolnye-tovary/globusy\" (без кавычек)</p>\n            <p>Изменять список категорий могут только пользователи, состоящие в группе admin.</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n    render() {\n        let errorMessage = null;\n        let successMessage = null;\n\n        \n        if (this.state.error) {\n            errorMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.error} type=\"error\" />\n            );\n        }\n        if (this.state.success) {\n            successMessage =(\n                <Alert style={{marginBottom: '25px'}} message={this.state.success} type=\"success\" />\n            );\n        }\n\n    \n        const { getFieldDecorator } = this.props.form;\n        return(\n            <div>\n                {errorMessage}\n                {successMessage}\n            <h1>Управление категориями для подписки</h1>\n                <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10%', 'top': '25%', marginBottom: '20px'}} onClick={this.verificationInfo}></Button>\n\n                <Form onSubmit={this.handleVerification} className=\"login-form\">\n                    <Form.Item style={{marginTop: '20px'}}>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: 'Введите относительную ссылку на категорию, к которой хотите применить действие' }],\n                    })(\n                        <Input\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        placeholder=\"Относительная ссылка на категорию\"\n                        />,\n                    )}\n                    </Form.Item>\n\n                <Radio.Group onChange={this.verificationRadioChanger} value={this.state.categoriesRadio}>\n                    <Radio value={'add'}>Добавить</Radio>\n                    <Radio value={'remove'}>Удалить</Radio>\n                </Radio.Group>\n\n                <Form.Item>\n                    <Button style={{marginTop: '20px'}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n                        Подтвердить\n                    </Button>\n                </Form.Item>\n        </Form>\n      </div>\n        )\n    }\n}\nconst CategoriesUpdateForm = Form.create({ name: 'normal_login' })(CategoriesUpdate);\n\nexport default CategoriesUpdateForm","import { Form, Icon, Button, Tabs, Modal, Spin } from 'antd';\nimport React from 'react';\nimport { connect } from 'react-redux'\n\nimport WrappedGroupsManagement from '../../components/auth/groups_management'\nimport WrappedUserVerification from '../../components/auth/user_verification'\nimport CategoriesUpdateForm from '../../components/auth/categoies_list'\n\n\nconst { TabPane } = Tabs;\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\n\n\nclass Management extends React.Component {\n\n\n    managementInfo() {\n        Modal.info({\n          title: 'Панель управления пользователями и данными.',\n          content: (<div>\n            <p>Панель позволяет (де)активировать пользователей, добавить их в группы, добавить/удалить категории для отслеживания и пр.</p>\n            <p>Для получения доступа требуется быть членом группы admin</p>\n          </div>),\n          onOk() {},\n        });\n      }\n\n  render() {\n    return (  \n        <div>\n        {\n            this.props.user_loading ?\n            <Spin indicator={antIcon} /> :\n            this.props.token && (this.props.user_groups[0] === '2' || this.props.user_groups[1] === 2 || this.props.user_groups[3] === 2 || this.props.user_groups[4] === 2) ?\n        <div>\n        <h1>Панель управления пользователями и данными</h1>\n        <Button icon=\"question-circle\" style={{'position': 'absolute', 'right': '10.2%', 'top': '7%', marginBottom: '20px'}} onClick={this.managementInfo}></Button>\n        <div>\n\n        <Tabs defaultActiveKey=\"1\" >\n        <TabPane tab=\"Активация пользователя\" key=\"1\">\n        <WrappedUserVerification />\n\n        </TabPane>\n        <TabPane tab=\"Назначение групп пользователям\" key=\"2\">\n            <WrappedGroupsManagement />\n\n        </TabPane>\n        <TabPane tab=\"Управление списком категорий\" key=\"3\">\n          <CategoriesUpdateForm />\n        </TabPane>\n      </Tabs>\n      </div>\n      </div> \n      :\n                <div>Вы не авторизованы или у вас недостаточно прав для просмотра страницы.</div>}\n      </div>\n      \n    );\n  }\n}\n\nconst WrappedNormalManagement = Form.create({ name: 'normal_login' })(Management);\n\nconst mapStateToProps = (state) => {\n    return {\n        user_error: state.authReducer.user_error,\n        user_groups: state.authReducer.user_groups,\n        token : state.authReducer.token,\n        user_loading: state.authReducer.user_loading,\n    }\n}\n\n\nexport default connect(mapStateToProps, null)(WrappedNormalManagement);","import React from 'react';\n\n\nclass Feedback extends React.Component {\n\n    render() {\n        return(\n            <div>\n                <h1>Спасибо за пользование сервисом!</h1>\n                <p>Я приложил усилия, чтобы обеспечить отказоустойчивость, автономность и некоторую расширяемость сервиса</p>\n                <p>Однако, нельзя предусмотреть все. Вещи, которые стоило бы покрыть тестами, не покрыты. О некоторых полезных паттернах я, возможно, даже не догадываюсь.</p>\n                <p>К тому же, у меня нет собственной команды QA, чтобы свести возможные баги к абсолютному минимуму</p>\n                <p>А проект мне всё ещё интересен. Поэтому, какое-то время я точно буду его поддерживать. В свободное время и в качестве хобби. Хотя и возможности у меня будут ограничены</p>\n                <p>Баг-репорты и фич-реквесты оформлять в виде тикетов по <a href=\"https://gitlab.sima-land.ru/oleg_kotov/marketing_automation/issues\" rel=\"noopener noreferrer\" target=\"blank\">ссылке</a></p>\n                <p>Прочий фидбек можно слать в скайп <span style={{color: 'green'}}>live:kotov_or_sima</span> или на почту <span style={{color: 'green'}}>tesfnatic123@gmail.com</span></p>\n            </div>\n        )\n    }\n}\n\nexport default Feedback;","import React from 'react';\nimport { DatePicker, Button } from 'antd';\nimport axios from 'axios'\nimport backendURL from '../../consts';\n\n\nconst {MonthPicker} = DatePicker;\n\n\nclass MetricsMain extends React.Component {\n    state = {\n        month: ''\n    }\n    onChangeMonth = (date, dateString) => {\n        this.setState({\n            month: dateString\n        })\n        console.log(this.state.month)\n      }\n\n    fetch = () => {\n        axios.post(`${backendURL}/metrics/month/`, {\n            month: this.state.month,\n        })\n        .then(res => {\n            this.setState({\n                month: '2019-10',\n            })\n        })\n    }\n\n    //////////////////////////\n    test = () => {\n        axios.post(`${backendURL}/metrics/test_tasks/`)\n        .then(res => {\n            this.setState({\n                month: '2019-10',\n            })\n        })\n    }\n    //////////////////////////\n\n\n    render () {\n        return(\n            <div>\n                <MonthPicker onChange={this.onChangeMonth} placeholder=\"Выберите месяц\" />\n            <Button type=\"primary\" style={{'marginLeft': '20px'}} onClick={this.fetch}>OK</Button>\n            <Button type=\"default\" style={{'marginLeft': '20px'}} onClick={this.test}>Test</Button>\n\n                {/* <Button onClick={this.fetch}>Ок</Button> */}\n            </div>\n        )\n    }\n\n}\n\nexport default MetricsMain;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Combinator from './containers/combinator/combinator-infields';\nimport Login from './containers/auth/Login';\nimport Signup from './containers/auth/signup';\nimport Mainpage from './components/mainpage';\nimport VerificationSent from './containers/auth/email_verification_sent';\nimport UserProfile from './containers/auth/user_profile';\nimport CategoryListView from './containers/crowler/CategoryListView';\nimport FilterpageListView from './containers/crowler/FilterpageListView';\nimport CategoryRetrieveView from './containers/crowler/CategoryRetrieveView';\nimport FilterpageRetrieveView from './containers/crowler/FilterpageRetrieveView';\nimport FilterpageChangesList from './containers/crowler/FilterpageChangesList'\nimport CategoryChangesList from './containers/crowler/CategoryChangesList'\nimport FilterpageChangesView from './containers/crowler/FilterpageChangesView'\nimport CategoryChangesView from './containers/crowler/CategoryChangesView'\nimport NotifyPopup from './containers/crowler/notifications/NotifyPopup'\nimport NotificationsRead from './containers/crowler/notifications/NotificationsRead'\nimport NotificationSubsciptions from './containers/crowler/notifications/Subscriptions'\nimport WrappedNormalManagement from './containers/auth/management'\nimport Feedback from './containers/feedback'\nimport MetricsMain from './containers/metrics/metrics_main'\n\n\n\n\nconst BaseRouter = () => (\n    <div>\n        <Route exact path='/combinator/' component={Combinator} /> {\"\"}\n        <Route exact path='/login/' component={Login} /> {\"\"}\n        <Route exact path=\"/signup/\" component={Signup} />{\" \"}\n        <Route exact path='/' component={Mainpage} /> {\"\"}\n        <Route exact path='/signup/verification_sent/' component={VerificationSent} /> {\"\"}\n        <Route exact path='/profile/' component={UserProfile} /> {\"\"}\n        <Route exact path='/crowler/categories/' component = {CategoryListView} /> {\"\"}\n        <Route exact path='/crowler/filter-pages/' component = {FilterpageListView} /> {\"\"}\n        <Route exact path='/crowler/categories/:categoryID' component = {CategoryRetrieveView} /> {\"\"}\n        <Route exact path='/crowler/filter-pages/:filterpageID' component = {FilterpageRetrieveView} /> {\"\"}\n        <Route exact path='/crowler/changes/filter-pages/' component = {FilterpageChangesList} /> {\"\"}\n        <Route exact path='/crowler/changes/categories/' component = {CategoryChangesList} /> {\"\"}\n        <Route exact path='/crowler/changes/filter-pages/:filterpageID' component = {FilterpageChangesView} /> {\"\"}\n        <Route exact path='/crowler/changes/categories/:categoryID' component = {CategoryChangesView} /> {\"\"}\n        <Route exact path='/notifications/' component = {NotifyPopup} /> {\"\"}\n        <Route exact path='/notifications/is-read/' component = {NotificationsRead} /> {\"\"}\n        <Route exact path='/notifications/subscriptions/' component = {NotificationSubsciptions} /> {\"\"}\n        <Route exact path='/management/' component = {WrappedNormalManagement} /> {\"\"}\n        <Route exact path='/feedback/' component = {Feedback} /> {\"\"}\n        <Route exact path='/metrics/' component = {MetricsMain} /> {\"\"}\n\n\n\n    </div>\n);\n\n\nexport default BaseRouter;","import React, { Component } from 'react';\nimport * as actions from '../store/actions/auth';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { Layout, Menu, Icon, Popconfirm, Badge, } from 'antd';\nconst { SubMenu } = Menu;\nconst { Header, Content, Footer, Sider } = Layout;\n\n\n\nclass CustomLayout extends Component {\n    state = {\n      collapsed: false,\n      visible: false\n    };\n\n    showDrawer = () => {\n      this.setState({\n        visible: true,\n      });\n    };\n    closeDrawer = () => {\n      this.setState({\n        visible: false,\n      });\n    };\n  \n\n    onCollapse = collapsed => {\n      console.log(collapsed);\n      this.setState({ collapsed });\n    };\n    render() {\n\n      return (\n        <Layout className=\"unselectable\" style={{ minHeight: '100vh' }}>\n          <Sider className=\"unselectable\" collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n            <div className=\"logo\" />\n            <Menu  className=\"unselectable\" theme=\"dark\" defaultSelectedKeys={['5']} defaultOpenKeys ={['sub1']}mode=\"inline\">\n\n              <Menu.Item className=\"unselectable\" key=\"1\">\n                <Link icon={<Icon type=\"desktop\" />} className=\"unselectable\"  to=\"/\" style={{color: 'white'}}><Icon className=\"unselectable\" type=\"desktop\" /><span style={{color: 'white'}}>Главная</span></Link>\n              </Menu.Item>\n              <SubMenu className=\"unselectable\"\n              key=\"sub1\"\n              title={\n                <span>\n                  <Icon type=\"user\" />\n                  <span>Пользователь</span>\n                </span>\n              }\n            > {this.props.user_name ?\n              <Menu.Item key=\"3\"><Link to=\"/profile/\"><div>{this.props.user_name}</div></Link></Menu.Item>\n            :\n              <Menu.Item key=\"3\"><Link to=\"/profile/\"><div>Профиль</div></Link></Menu.Item>\n            }\n              <Menu.Item key=\"4\"><Link to=\"/management/\">Управление</Link></Menu.Item>\n              {\n                this.props.isAuthenticated ?\n                \n                <Menu.Item key=\"5\">\n                <Popconfirm \n                title=\"Вы действительно хотите выйти?\"\n                onConfirm={this.props.logout}\n                okText=\"Да\"\n                cancelText=\"Нет\"\n              >\n                  <div style={{width: '100%'}}>Выход</div> \n                  {/* Такое расположение. Типа div и ширина, чтобы триггер срабатывал при нажатии в любом месте кнопки */}\n                  </Popconfirm>\n                </Menu.Item>\n\n                :\n\n                <Menu.Item key=\"5\">\n                <Link to=\"/login/\">Вход</Link>\n                </Menu.Item>\n\n            }\n\n            </SubMenu>\n              <SubMenu\n                key=\"sub2\"\n                title={\n                  <span>\n                    <Icon type=\"appstore\" />\n                    <span>Приложения</span>\n                  </span>\n                }\n              >\n                <Menu.Item key=\"6\"><Link to=\"/combinator/\">Пересекатор</Link></Menu.Item>\n                <Menu.Item key=\"7\">Заглушка</Menu.Item>\n                <Menu.Item key=\"8\"><Link to=\"/metrics/\">Метрика</Link></Menu.Item>\n                <Menu.Item key=\"9\">E-mail шаблонизатор</Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"sub3\"\n                title={\n                  <span>\n                    <Icon type=\"interaction\" />\n                    <span>Краулер</span>\n                  </span>\n                }\n              >\n                <Menu.Item key=\"10\"><Link to=\"/crowler/categories/\">Категории</Link></Menu.Item>\n                <Menu.Item key=\"11\"><Link to=\"/crowler/filter-pages/\">ПФС</Link></Menu.Item>\n                <SubMenu\n                  key=\"sub4\"\n                  title={\n                    <span>\n                      <Icon type=\"fork\" />\n                      <span>Изменения</span>\n                    </span>\n                  }\n              >\n                  <Menu.Item key=\"15\"><Link to=\"/crowler/changes/categories/\">Категории</Link></Menu.Item>\n                  <Menu.Item key=\"16\"><Link to=\"/crowler/changes/filter-pages/\">ПФС</Link></Menu.Item>\n              </SubMenu>\n                <Menu.Item key=\"13\">Метрики</Menu.Item>\n              </SubMenu>\n              <Menu.Item key=\"14\">\n                <Link to=\"/feedback/\">\n                  <Icon type=\"file\" />\n                  <span>Обратная связь</span>\n                </Link>\n              </Menu.Item>\n            </Menu>\n          </Sider>\n          <Layout>\n          <Header className=\"header\" style={{height: '46px'}}>\n            <div className=\"logo\" />\n            <Menu\n              theme=\"dark\"\n              mode=\"horizontal\"\n              defaultSelectedKeys={['2']}\n              style={{ lineHeight: '46px' }}\n            >\n              <Menu.Item key=\"1\"><Link to=\"/combinator/\">Пересекатор</Link></Menu.Item>\n              <Menu.Item key=\"2\"><Link to=\"/notifications/\"><Badge count={this.props.notificationsCount} dot>Уведомления</Badge></Link></Menu.Item>\n            </Menu>\n          </Header>\n            <Content id=\"selectable\" style={{ margin: '30px 30px' }}>\n              <div>{this.props.children}</div>\n            </Content>\n            <Footer style={{ textAlign: 'center' }}>Олег Котов. 2019</Footer>\n          </Layout>\n        </Layout>\n      );\n    }\n  }\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      logout: () => dispatch(actions.authLogout()) \n  }\n}\n\nexport default connect(null, mapDispatchToProps)(CustomLayout);","import './App.css';\nimport 'antd/dist/antd.css'\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BaseRouter from './routes';\nimport 'antd/dist/antd.css';\nimport * as actions from './store/actions/auth';\nimport * as notificationActions from './store/actions/notifications';\n\nimport CustomLayout from './containers/layout';\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n    this.props.onGetNotificationsCount();\n    // this.props.isAuthenticated ? this.props.onGetNotificationsCount() :\n    // this.props.onNotificationsLogout() ;\n  }\n\n  render() {\n      return (\n        <div>\n          <Router>\n            <CustomLayout {...this.props}>\n              <BaseRouter />\n            </CustomLayout>\n          </Router>\n        </div>\n      );\n   }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.authReducer.token !== null,\n    user_name: state.authReducer.user_name,\n    user_id: state.authReducer.user_id,\n    notificationsCount: state.notificationsReducer.count\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState()),\n    onGetNotificationsCount: (user_id) => dispatch(notificationActions.notificationsGetAction(user_id)),\n    onNotificationsLogout: () => dispatch(notificationActions.notificationsLogout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../utility';\n\n\n// ИЗНАЧАЛЬНОЕ СОСТОЯНИЕ\nconst initialState = {\n    token: null,\n    error: null, \n    loading: false,\n    confirmation_await: false,\n    success: false,\n    confirmation_success: false,\n    confirmation_error: null,\n    user_loading: false,\n    user_error: null,\n    user_groups: null,\n    user_email: null,\n    user_name: null,\n\n}\n\n// АУТЕНТИФИКАЦИЯ\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false,\n        success: true\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false,\n        success: false\n    });\n}\n\n// Подтверждение емейла\nconst emailConfirmation = (state, action) => {\n    return updateObject(state, {\n        confirmation_await: true,\n        confirmation_success: false,\n        confirmation_error: null\n    });\n}\nconst emailConfirmationSuccess = (state, action) => {\n    return updateObject(state, {\n        confirmation_await: false,\n        confirmation_success: true,\n        confirmation_error: null\n    });\n}\nconst emailConfirmationError = (state, action) => {\n    return updateObject(state, {\n        confirmation_await: false,\n        confirmation_success: false,\n        confirmation_error: action.confirmation_error\n    });\n}\n\n// ПОЛУЧЕНИЕ ПРОФИЛЯ ПОЛЬЗОВАТЕЛЯ\nconst userProfileGet = (state, action) => {\n    return updateObject(state, {\n        user_loading: true,\n        user_error: null\n    })\n}\n\nconst userProfileGetSuccess = (state, action) => {\n    return updateObject(state, {\n        user_groups: action.user_groups,\n        user_name: action.user_name,\n        user_email: action.user_email,\n        user_loading: false,\n        user_id: action.user_id,\n        user_error: null\n\n    })\n}\nconst userProfileGetFail = (state, action) => {\n    return updateObject(state, {\n        user_loading: false,\n        user_error: state.user_error\n\n    })\n}\n// ЛОГАУТ\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null,\n        success: false,\n        user_groups: null,\n        user_email: null,\n        user_name: null,\n        user_id: null,\n        user_loading: false,\n    });\n}\n\n\n// ТУТ ВСЁ ПОНЯТНО ЭТО REDUCER\nconst authReducer = (state=initialState, action) => {\n    switch (action.type) {\n        // СООТВЕТСТВЕННО АУТЕНТИФИКАЦИЯ\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        // Соответственно подтверждение емейла\n        case actionTypes.EMAIL_CONFIRMATION_REQUEST: return emailConfirmation(state, action);\n        case actionTypes.EMAIL_CONFIRMATION_REQUEST_SUCCESS: return emailConfirmationSuccess(state, action);\n        case actionTypes.EMAIL_CONFIRMATION_REQUEST_ERROR: return emailConfirmationError(state, action);\n        // Соответственно получение профиля пользователя\n        case actionTypes.USER_PROFILE_GET: return userProfileGet(state, action);\n        case actionTypes.USER_PROFILE_GET_SUCCESS: return userProfileGetSuccess(state, action);\n        case actionTypes.USER_PROFILE_GET_FAIL: return userProfileGetFail(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../utility';\n\n\n\nconst initialState = {\n    combinator_result: null,\n    combinator_error: null, \n    combinator_loading: false\n}\n\nconst combinatorStart = (state, action) => {\n    return updateObject(state, {\n        combinator_error: null,\n        combinator_loading: true\n    });\n}\nconst combinatorSuccess = (state, action) => {\n    return updateObject(state, {\n        combinator_result: action.result,\n        combinator_loading: false,\n        combinator_error: false\n    })\n}\n\nconst combinatorFail = (state, action) => {\n    return updateObject(state, {\n        combinator_error: action.combinator_error,\n        combinator_loading: false\n    });\n}\n\nconst combinatorClear = (state, action) => {\n    return updateObject(state, {\n        combinator_result: ''\n    })\n}\n\nconst combinatorReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.COMBINATOR_START: return combinatorStart(state, action);\n        case actionTypes.COMBINATOR_SUCCESS: return combinatorSuccess(state, action);\n        case actionTypes.COMBINATOR_FAIL: return combinatorFail(state, action);\n        case actionTypes.COMBINATOR_CLEAR: return combinatorClear(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default combinatorReducer;","import * as actionTypes from '../actionTypes';\nimport { updateObject } from '../utility';\n\n\nconst initialState = {\n    count: null,\n    error: null,\n    loading: false\n}\n\nconst notificationsGetStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\nconst notificationsGetSuccess = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false,\n        count: action.count\n    });\n}\nconst notificationsGetFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\nconst notificationsLogout = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: false,\n        count: 0\n    });\n}\n\nconst notificationsReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.NOTIFICATIONS_GET: return notificationsGetStart(state, action);\n        case actionTypes.NOTIFICATIONS_GET_SUCCESS: return notificationsGetSuccess(state, action);\n        case actionTypes.NOTIFICATIONS_GET_FAIL: return notificationsGetFail(state, action);\n        case actionTypes.NOTIFICATIONS_LOGOUT: return notificationsLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default notificationsReducer;","import { combineReducers } from 'redux';\nimport authReducer from './auth';\nimport combinatorReducer from './combinator'\nimport notificationsReducer from './notifications'\n\n\n\nexport default combineReducers({\n    authReducer,\n    combinatorReducer,\n    notificationsReducer\n\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware,} from 'redux';\nimport reducer from './store/reducers/index'\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\n//import CustomLayout from './containers/layout';\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\nconst composeEnhances =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    }) : compose;\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n));\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n\n)\n\n\nReactDOM.render(app, document.getElementById('root'));"],"sourceRoot":""}